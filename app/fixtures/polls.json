[
	{
		"pollNumber": 131,
		"codeBlock": "",
		"type": "radio",
		"answers": [
			{
				"blockType": "text",
				"placeholder": "Add option",
				"value": "Forget<Type>",
				"type": "radio",
				"autoFocus": false,
				"id": "eioozak-ojnab"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"id": "b4ad1f71-630b-47d6-a2bc-af3b1eaac7dd",
				"value": "LeaveOut<Type>",
				"autoFocus": false
			},
			{
				"blockType": "text",
				"value": "Pick<Type>",
				"type": "radio",
				"placeholder": "Add option",
				"autoFocus": false,
				"id": "11e706d4-09ef-44d2-8dfc-bad3b9c5559d"
			},
			{
				"type": "radio",
				"autoFocus": false,
				"placeholder": "Add option",
				"value": "Omit<Type>",
				"id": "c441e5f9-c041-4e3a-b811-893d0d6348f5",
				"blockType": "text"
			},
			{
				"value": "Don'tNeedThis<Type>",
				"autoFocus": false,
				"type": "radio",
				"blockType": "text",
				"id": "4888780a-de85-465b-8b15-c138494fbf92",
				"placeholder": "Add option"
			},
			{
				"value": "Keep<<Type>",
				"blockType": "text",
				"id": "9a5c1740-b1ff-40d0-8139-bc8d65175a37",
				"placeholder": "Add option",
				"autoFocus": false,
				"type": "radio"
			},
			{
				"autoFocus": false,
				"blockType": "text",
				"id": "a403c77c-fe69-4607-a844-cec234785536",
				"value": "ObjectEntries<Type>",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"value": "Remove<Type>",
				"type": "radio",
				"blockType": "text",
				"id": "43760f39-f697-46fa-9d0f-a659795203b0",
				"autoFocus": false,
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"id": "0f219f29-b0a6-42b4-9f0f-f2301f6e8b7b",
				"type": "radio",
				"autoFocus": true,
				"value": "Delete<Type>",
				"placeholder": "Add option"
			}
		],
		"voted": [],
		"id": "2408ada0-7d52-46a4-9a30-b40c9b34f70f",
		"correctAnswers": [
			{
				"id": "c441e5f9-c041-4e3a-b811-893d0d6348f5",
				"value": "Omit<Type>"
			}
		],
		"status": "new",
		"question": "In TS, more questions are coming up if you please, what util type is aimed to leave out keys?\n\n",
		"category": "typescript"
	},
	{
		"status": "new",
		"pollNumber": 130,
		"question": "See the following code on the screen, when selecting the direct list items, what would your solution have been? ",
		"category": "css",
		"correctAnswers": [
			{
				"id": "b1c69e0d-1776-4647-b9e5-53986cfce640",
				"value": "With the \">\" selector "
			}
		],
		"codeBlock": "<section>\n  <h1>A simple guide to build websites</h1>\n  <ul>\n     <li>\n       First part: Setup\n       <ul> \n         <li>Step 1: Write your code in Google docs </li>\n         <li>Step 2: Use PHP to style your website</li>\n         <li>Step 3: Convert your DB with CSS for better performance</li>\n       </ul>\n     </li>\t\t\n  </ul>\n</section>",
		"id": "66c97853-ca68-4bd7-9fd9-117ca7bb02aa",
		"type": "radio",
		"answers": [
			{
				"placeholder": "Add option",
				"value": "With the \"~\" selectors ",
				"id": "eioozak-ojnab",
				"autoFocus": false,
				"blockType": "text",
				"type": "radio"
			},
			{
				"value": "With the \">\" selector ",
				"blockType": "text",
				"autoFocus": false,
				"placeholder": "Add option",
				"id": "b1c69e0d-1776-4647-b9e5-53986cfce640",
				"type": "radio"
			},
			{
				"type": "radio",
				"blockType": "text",
				"autoFocus": false,
				"value": "With the \"+\" selector ",
				"placeholder": "Add option",
				"id": "8d31eea0-ff25-4fdd-bad9-2247d7764bd8"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"autoFocus": false,
				"value": "With the \"||\" selector ",
				"blockType": "text",
				"id": "2634b00c-d2ec-46dd-b1a0-e29270862b63"
			},
			{
				"blockType": "text",
				"value": "With \"first-child\" ",
				"id": "dd4b770e-4362-4a89-bfff-f60bf3137a89",
				"placeholder": "Add option",
				"type": "radio",
				"autoFocus": false
			},
			{
				"autoFocus": true,
				"id": "31efede1-5bc0-4107-87c7-9a6d96761d50",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"value": "With selecting the element \"li\" "
			}
		],
		"voted": []
	},
	{
		"correctAnswers": [
			{
				"value": "Outline is used for making elements more accessible, e.g on elements that need focus",
				"id": "40143199-c754-43da-afd8-27d399a3bb0b"
			}
		],
		"category": "css",
		"question": "In CSS, a useful property is outline, what is it's main purpose when implementing an app design?",
		"voted": [
			{
				"answerId": "40143199-c754-43da-afd8-27d399a3bb0b",
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2"
			},
			{
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292",
				"answerId": "eioozak-ojnab"
			},
			{
				"answerId": "40143199-c754-43da-afd8-27d399a3bb0b",
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2"
			},
			{
				"userId": "kfrkjsbashYfl1sD2PgVGXcpND63",
				"answerId": "40143199-c754-43da-afd8-27d399a3bb0b"
			},
			{
				"userId": "y0Vb464iCdeVzfBJBZzCjCIZIi72",
				"answerId": "40143199-c754-43da-afd8-27d399a3bb0b"
			},
			{
				"answerId": "40143199-c754-43da-afd8-27d399a3bb0b",
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1"
			},
			{
				"userId": "VsNPZ5xdDgdZxTUeynrJJk5Qs5v2",
				"answerId": "40143199-c754-43da-afd8-27d399a3bb0b"
			},
			{
				"answerId": "40143199-c754-43da-afd8-27d399a3bb0b",
				"userId": "GxloHn9wFkRFYYHXSuTj56kXd0q2"
			},
			{
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1",
				"answerId": "40143199-c754-43da-afd8-27d399a3bb0b"
			},
			{
				"answerId": "40143199-c754-43da-afd8-27d399a3bb0b",
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3"
			},
			{
				"answerId": "eioozak-ojnab",
				"userId": "btmzQ2h02aa7NwgpOFMGvGSgcv62"
			},
			{
				"userId": "B762i26QM7Y275I0w2uAtklg3Gx1",
				"answerId": "1ea467cb-a5b4-4e8e-afe6-89dc10b851c3"
			},
			{
				"answerId": "40143199-c754-43da-afd8-27d399a3bb0b",
				"userId": "aWI6X9i1RugALHJ7ILr8Xp4baIW2"
			},
			{
				"answerId": "eioozak-ojnab",
				"userId": "XYkYvhODvjg1pLVfqtFXAGZxuCj1"
			}
		],
		"openingTime": 1665560053930,
		"type": "radio",
		"answers": [
			{
				"type": "radio",
				"blockType": "text",
				"id": "eioozak-ojnab",
				"autoFocus": false,
				"placeholder": "Add option",
				"value": "It's main purpose is to use it as decorative border to circumvent the box model"
			},
			{
				"id": "af4fefbc-b947-437e-8561-7f47a5ec6661",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "Outline is used when you know upfront that you want a border around your entire element as outline doesn't allow to style a single side ",
				"type": "radio",
				"autoFocus": false
			},
			{
				"value": "Outline is used when you need more interactive borders, e.g for animation",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "1ea467cb-a5b4-4e8e-afe6-89dc10b851c3",
				"autoFocus": false
			},
			{
				"type": "radio",
				"blockType": "text",
				"value": "Outline is used for making elements more accessible, e.g on elements that need focus",
				"id": "40143199-c754-43da-afd8-27d399a3bb0b",
				"placeholder": "Add option",
				"autoFocus": false
			},
			{
				"id": "8be9dbd7-8686-4d94-beb0-7c868e62935d",
				"placeholder": "Add option",
				"value": "Outlines are mainly used for tabular elements",
				"blockType": "text",
				"autoFocus": false,
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"autoFocus": true,
				"id": "d69f103b-ff2d-40b9-b35b-0bd6d75c9e93",
				"value": "Outlines are used to mark the \"boundaries\" of a web page within a users's view"
			}
		],
		"id": "7021d256-d673-46e5-8498-3b483dc5cae7",
		"pollNumber": 129,
		"codeBlock": "",
		"status": "closed"
	},
	{
		"type": "radio",
		"correctAnswers": [
			{
				"value": "That the order prop does will affect the UX of users using assistive technology if the order of elements is important",
				"id": "eioozak-ojnab"
			}
		],
		"category": "css",
		"voted": [],
		"question": "In CSS, flex items can be \"ordered\" around with the property \"order\", what concern should not be ignored? ",
		"status": "new",
		"codeBlock": "",
		"id": "57cd2878-67be-4ed8-a635-ae19c06f3b32",
		"pollNumber": 128,
		"answers": [
			{
				"type": "radio",
				"id": "eioozak-ojnab",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "That the order prop does will affect the UX of users using assistive technology if the order of elements is important",
				"autoFocus": false
			},
			{
				"blockType": "text",
				"type": "radio",
				"value": "That the order prop is not effective on elements other that flex elements",
				"id": "5dafe2c8-a7e5-4c1b-bcdd-e4f1783ff71b",
				"autoFocus": false,
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"autoFocus": false,
				"value": "That the order prop is a single-threaded property which may impact performance if used ",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "6d703cb2-eea7-4cb9-9d06-c78c66523048"
			},
			{
				"id": "4f11ffde-54b8-447d-8bfd-ed1894488ddd",
				"blockType": "text",
				"type": "radio",
				"autoFocus": false,
				"placeholder": "Add option",
				"value": "It confuses the browser painting rules when using order which makes your page rendering slower"
			},
			{
				"id": "c6b45c87-eb57-4277-b7a3-d962de12ffb5",
				"type": "radio",
				"blockType": "text",
				"value": "The order prop is not supported in all modern browsers. It can be polyfilled but in most cases it is not worth it",
				"placeholder": "Add option",
				"autoFocus": true
			}
		]
	},
	{
		"codeBlock": "",
		"answers": [
			{
				"id": "eioozak-ojnab",
				"placeholder": "Add option",
				"blockType": "text",
				"autoFocus": false,
				"value": "useEffect",
				"type": "radio"
			},
			{
				"autoFocus": false,
				"placeholder": "Add option",
				"type": "radio",
				"value": "useComponentDidMount",
				"blockType": "text",
				"id": "8bdc6ce3-8b1b-4e21-a935-e515d5b60a96"
			},
			{
				"value": "useDOMEffect",
				"blockType": "text",
				"type": "radio",
				"autoFocus": false,
				"placeholder": "Add option",
				"id": "9eab7c9f-9756-41cb-b09d-bf2692a0597d"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"autoFocus": false,
				"id": "0920f656-c304-4084-8f84-10e6e913b0fb",
				"value": "useLayoutEffect",
				"type": "radio"
			},
			{
				"id": "56022193-5255-4f78-92f9-317a12a75d21",
				"autoFocus": false,
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"value": "The render function should be used for this"
			},
			{
				"id": "2c2bc56c-35d3-43bd-8083-979aa5475d2c",
				"blockType": "text",
				"autoFocus": false,
				"type": "radio",
				"value": "useInteractiveEffect",
				"placeholder": "Add option"
			},
			{
				"id": "806fc782-03b9-4626-bca7-58a9901309ca",
				"autoFocus": true,
				"value": "useRef",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio"
			}
		],
		"question": "In React, interacting with the DOM is something we do intensively, now what hook can be used for this effectively?",
		"category": "react",
		"type": "radio",
		"id": "9fd2f895-dad9-4538-adcd-6c898244646c",
		"voted": [],
		"pollNumber": 127,
		"correctAnswers": [
			{
				"id": "0920f656-c304-4084-8f84-10e6e913b0fb",
				"value": "useLayoutEffect"
			}
		],
		"status": "new"
	},
	{
		"voted": [
			{
				"answerId": "eioozak-ojnab",
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1"
			},
			{
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292",
				"answerId": "bc174849-1689-4aa8-b270-be1610dde55c"
			},
			{
				"userId": "aWI6X9i1RugALHJ7ILr8Xp4baIW2",
				"answerId": "d7e824ab-6a6a-4a75-ba59-bf923fd7f303"
			},
			{
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2",
				"answerId": "d7e824ab-6a6a-4a75-ba59-bf923fd7f303"
			},
			{
				"userId": "H2uBO669vaZ80jwDe7zzxmKbUV02",
				"answerId": "d7e824ab-6a6a-4a75-ba59-bf923fd7f303"
			},
			{
				"answerId": "bc174849-1689-4aa8-b270-be1610dde55c",
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2"
			},
			{
				"userId": "kfrkjsbashYfl1sD2PgVGXcpND63",
				"answerId": "d7e824ab-6a6a-4a75-ba59-bf923fd7f303"
			},
			{
				"answerId": "eioozak-ojnab",
				"userId": "VsNPZ5xdDgdZxTUeynrJJk5Qs5v2"
			},
			{
				"userId": "GxloHn9wFkRFYYHXSuTj56kXd0q2",
				"answerId": "d7e824ab-6a6a-4a75-ba59-bf923fd7f303"
			},
			{
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1",
				"answerId": "bc174849-1689-4aa8-b270-be1610dde55c"
			},
			{
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3",
				"answerId": "3c75ec27-3673-473d-a518-0b1206730b40"
			},
			{
				"answerId": "d7e824ab-6a6a-4a75-ba59-bf923fd7f303",
				"userId": "btmzQ2h02aa7NwgpOFMGvGSgcv62"
			},
			{
				"userId": "y0Vb464iCdeVzfBJBZzCjCIZIi72",
				"answerId": "3c75ec27-3673-473d-a518-0b1206730b40"
			}
		],
		"question": "In Frontend, letting developers experiment in the browser with help of vendor prefixes made the W3C hit a snag, do you know the reasoning of why experiments are now put behind a flag?",
		"id": "8a4b9f55-f6eb-463c-ab74-00d0da3f1add",
		"correctAnswers": [
			{
				"id": "d7e824ab-6a6a-4a75-ba59-bf923fd7f303",
				"value": "Because developers included prefixes on production apps, which made it difficult to ensure compatibility"
			}
		],
		"answers": [
			{
				"autoFocus": false,
				"type": "radio",
				"placeholder": "Add option",
				"value": "Because the W3C became tired of the browser inconsistencies",
				"id": "eioozak-ojnab",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"autoFocus": false,
				"id": "8c11270b-acf2-4d97-8fc9-0985e1ed87e1",
				"value": "Because the JS ecosystem got flooded with nonsense packages that generated vendor prefixes in code for developers ",
				"blockType": "text",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"autoFocus": false,
				"id": "91efef17-40e3-4d71-88a4-f4047dc393f0",
				"type": "radio",
				"value": "Because more than 60% of the web apps existed of meaningless code because of the added prefixes for CSS properties which slowed the web down",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"autoFocus": false,
				"type": "radio",
				"blockType": "text",
				"value": "Because developers included prefixes on production apps, which made it difficult to ensure compatibility",
				"id": "d7e824ab-6a6a-4a75-ba59-bf923fd7f303"
			},
			{
				"blockType": "text",
				"autoFocus": false,
				"id": "bc174849-1689-4aa8-b270-be1610dde55c",
				"value": "Because it didn't fit the long-term solution; Next to -webkit-, -moz-, -ms- and -o- prefixes, they also had to come up with prefixes for browsers like Brave, Tor, Vivaldi, Edge etc. ",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"autoFocus": true,
				"id": "3c75ec27-3673-473d-a518-0b1206730b40",
				"value": "Because nowadays polyfills, babel and PostCSS tools are used to use experimental tools and code",
				"type": "radio"
			}
		],
		"status": "closed",
		"pollNumber": 126,
		"category": "general-frontend",
		"type": "radio",
		"codeBlock": "",
		"openingTime": 1665646608822
	},
	{
		"codeBlock": "",
		"correctAnswers": [
			{
				"value": "The form will submit ",
				"id": "7a31a524-4a79-4d79-b07b-9b17ee491597"
			}
		],
		"voted": [],
		"status": "new",
		"question": "In HTML, most web apps exist out of forms waiting to be completed, when pressing ENTER, how will the <form> have the <button> treated?",
		"pollNumber": 125,
		"answers": [
			{
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"id": "eioozak-ojnab",
				"autoFocus": false,
				"value": "It will do nothing"
			},
			{
				"value": "The form values will be reset ",
				"blockType": "text",
				"autoFocus": false,
				"type": "radio",
				"id": "e0c4e1fb-4642-48a2-9ab5-418bae3250dd",
				"placeholder": "Add option"
			},
			{
				"value": "The form values will be automatically stringified ",
				"blockType": "text",
				"id": "bd453bc6-9f35-412a-b419-9123247eaeb6",
				"autoFocus": false,
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "7a31a524-4a79-4d79-b07b-9b17ee491597",
				"value": "The form will submit ",
				"blockType": "text",
				"autoFocus": false
			},
			{
				"blockType": "text",
				"value": "The app will assume you work with a keyboard ",
				"placeholder": "Add option",
				"id": "b7a12684-3c8b-40bb-91f4-5fbe55e17de2",
				"type": "radio",
				"autoFocus": false
			},
			{
				"id": "60c0c69e-125f-4aa4-aec5-67376a883d4f",
				"autoFocus": true,
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "The <button> element will get focus"
			}
		],
		"category": "html",
		"id": "ce00ba96-85c3-46a9-a445-79229689bfd0",
		"type": "radio"
	},
	{
		"codeBlock": "",
		"correctAnswers": [
			{
				"id": "50e9cdd3-1744-4921-9cfa-8c5b2eab7539",
				"value": "font-variant-numeric: tabular-nums"
			}
		],
		"question": "In CSS, fonts have various widths for numerical text, what property can be used to create equal widths that should be professed?",
		"voted": [],
		"category": "css",
		"answers": [
			{
				"placeholder": "Add option",
				"value": "font-width: equal",
				"id": "eioozak-ojnab",
				"blockType": "text",
				"autoFocus": false,
				"type": "radio"
			},
			{
				"type": "radio",
				"value": "font-variant-numeric: tabular-nums",
				"autoFocus": false,
				"blockType": "text",
				"placeholder": "Add option",
				"id": "50e9cdd3-1744-4921-9cfa-8c5b2eab7539"
			}
		],
		"type": "radio",
		"status": "needs-revision",
		"id": "8c1d353a-196d-4566-8eee-d0f68372b407",
		"pollNumber": 124
	},
	{
		"answers": [
			{
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"autoFocus": false,
				"value": "@media screen and (min-width: 1024px) and (orientation: portrait)",
				"id": "eioozak-ojnab"
			},
			{
				"type": "radio",
				"id": "fd402126-f6da-4c4f-b9f6-8b779f4c64f3",
				"placeholder": "Add option",
				"value": "@media only screen and (max-width: 1320px) and (min-width: 768px)",
				"blockType": "text",
				"autoFocus": false
			},
			{
				"blockType": "text",
				"id": "b4a178c4-681c-44aa-88f5-aaa722e4adb0",
				"autoFocus": false,
				"type": "radio",
				"placeholder": "Add option",
				"value": "@media only screen and (device: \"desktop\") and not (device: \"mobile\")"
			},
			{
				"id": "3e8b78eb-6f4c-478c-84c7-41f80513c46e",
				"autoFocus": false,
				"value": "JS is atleast required to check this properly",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"autoFocus": false,
				"value": "@media (resolution: 150dpi) and (resolution: 72dpi)",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "0aa24e28-0431-4e48-b32a-69ef1dfcaef5"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"id": "e30bcbe2-ee12-4a8c-a2c6-cd7678c2368e",
				"value": "@media (hover: hover) and (pointer: fine)",
				"autoFocus": true
			}
		],
		"correctAnswers": [
			{
				"value": "",
				"id": "db5eb4e5-b19c-4c93-bd12-ab536cc672fb"
			},
			{
				"value": "@media (hover: hover) and (pointer: fine)",
				"id": "e30bcbe2-ee12-4a8c-a2c6-cd7678c2368e"
			}
		],
		"codeBlock": "",
		"category": "css",
		"status": "new",
		"id": "cec3c212-9672-4d2a-a718-83b36e226e0b",
		"pollNumber": 123,
		"type": "radio",
		"voted": [],
		"question": "In CSS, I need your knowlegde give me a slice, what media query combo is the most trustworthy to detect a desktop device? "
	},
	{
		"pollNumber": 122,
		"answers": [
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": "You can’t use values as index for types",
				"id": "eioozak-ojnab",
				"autoFocus": false,
				"type": "radio"
			},
			{
				"id": "93e5a78d-4aff-49de-9084-0fa24eb2932d",
				"type": "radio",
				"blockType": "text",
				"value": "You need another key",
				"autoFocus": false,
				"placeholder": "Add option"
			},
			{
				"id": "1bb74626-4ee2-4007-8bd8-4bb00ce0dcc8",
				"autoFocus": false,
				"placeholder": "Add option",
				"value": "The used key doesn't have an index",
				"blockType": "text",
				"type": "radio"
			},
			{
				"blockType": "text",
				"autoFocus": false,
				"id": "beb51b72-2a9d-468b-86a3-cf64df0a6abc",
				"placeholder": "Add option",
				"type": "radio",
				"value": "The used key doesn't exist"
			},
			{
				"id": "b76e5360-fa57-45ac-a8a3-f17c30000a96",
				"placeholder": "Add option",
				"type": "radio",
				"autoFocus": false,
				"value": "This is an inference problem: You have to let TS now it's ok to use keys as index type ",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"autoFocus": false,
				"value": "The key type doesn't match the index type ",
				"id": "4b1291db-879d-4f5e-8e9f-d1568d750fa0",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"autoFocus": true,
				"placeholder": "Add option",
				"type": "radio",
				"id": "43d49aec-7c47-4650-a8c9-bc6e1271e612",
				"value": "It will fix the error when you do as it instructs by typing the sentence in your code editor"
			}
		],
		"type": "radio",
		"question": "In TS, the following error is fixable, do you know why this error is visible?",
		"codeBlock": "Type 'key' cannot be used as an index type.\n'key' refers to a value, but is being used as a type here.",
		"category": "typescript",
		"id": "2cf34f9a-72bc-4193-a243-08b3b21723ea",
		"correctAnswers": [
			{
				"value": "You can’t use values as index for types",
				"id": "eioozak-ojnab"
			}
		],
		"status": "new",
		"voted": []
	},
	{
		"codeBlock": "type Items = { shield: string; hookshot: string };\ntype Item = keyof Items;",
		"question": "See the following TS code on your screen, what should the output of \"Item\" have been?",
		"correctAnswers": [
			{
				"value": "",
				"id": "eioozak-ojnab"
			}
		],
		"answers": [
			{
				"autoFocus": false,
				"value": "The keys: \"shield\" and \"hookshot\"",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"id": "eioozak-ojnab"
			},
			{
				"id": "a72171aa-79bc-4ccf-adf8-cfd19b05c344",
				"autoFocus": false,
				"value": "The types of the keys: string and string",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"autoFocus": false,
				"placeholder": "Add option",
				"value": "The object: { shield: string; hookshot: string }",
				"type": "radio",
				"blockType": "text",
				"id": "025986ae-a66a-4538-9838-385f4090db01"
			},
			{
				"type": "radio",
				"value": "An array of keys:  [\"shield, \"hookshot\"]",
				"autoFocus": false,
				"placeholder": "Add option",
				"blockType": "text",
				"id": "e3ce3248-472a-439a-9271-0361db10914a"
			},
			{
				"placeholder": "Add option",
				"id": "aea59484-bfe8-40eb-86d3-1ccd0e63b32e",
				"type": "radio",
				"blockType": "text",
				"value": "'Item' only refers to a type, but is being used as a value here.",
				"autoFocus": true
			}
		],
		"voted": [],
		"type": "radio",
		"status": "new",
		"id": "16ae97fa-32b8-4671-ac38-baa5652ff14a",
		"pollNumber": 121,
		"category": "typescript"
	},
	{
		"type": "checkbox",
		"voted": [],
		"correctAnswers": [
			{
				"id": "e1e729fe-b974-4cde-a49d-297e92222013",
				"value": "Function overloading"
			},
			{
				"id": "e35cee5b-38e4-4878-b1fc-6cfe44a39726",
				"value": "By augmenting arguments in the function signature "
			}
		],
		"category": "typescript",
		"answers": [
			{
				"autoFocus": false,
				"type": "radio",
				"blockType": "text",
				"value": "Type guarding",
				"placeholder": "Add option",
				"id": "eioozak-ojnab"
			},
			{
				"type": "radio",
				"id": "e1e729fe-b974-4cde-a49d-297e92222013",
				"autoFocus": false,
				"placeholder": "Add option",
				"value": "Function overloading",
				"blockType": "text"
			},
			{
				"type": "radio",
				"autoFocus": false,
				"value": "By augmenting arguments in the function signature ",
				"id": "e35cee5b-38e4-4878-b1fc-6cfe44a39726",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"value": "Generics is all you need",
				"blockType": "text",
				"autoFocus": false,
				"type": "radio",
				"placeholder": "Add option",
				"id": "edecc7a1-d073-49f4-838e-605253dfee69"
			},
			{
				"type": "radio",
				"autoFocus": false,
				"id": "0e8e076f-ea0d-4368-9b67-f75ef270d42d",
				"placeholder": "Add option",
				"value": "By making sure to implement constraints in your functions",
				"blockType": "text"
			},
			{
				"autoFocus": false,
				"type": "radio",
				"value": "By adding private methods to your classes",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "3dd925fb-f63e-408c-9e14-1657c1600caf"
			},
			{
				"value": "Function unloading ",
				"id": "1b851901-e749-4669-9381-f37b7320330e",
				"blockType": "text",
				"placeholder": "Add option",
				"autoFocus": false,
				"type": "radio"
			},
			{
				"id": "274ce05c-a9ad-4e92-af98-57716ef364b4",
				"autoFocus": true,
				"type": "radio",
				"blockType": "text",
				"value": "By copying the functions and assign each with different function signatures",
				"placeholder": "Add option"
			}
		],
		"id": "5444de9d-3e7b-4147-b555-b205f1573fb1",
		"question": "In TS, you can define functions to be invoked in multiple ways, can you name the approaches on how to do that these days?",
		"codeBlock": "",
		"status": "new",
		"pollNumber": 120
	},
	{
		"question": "In React, the code below returns the following error on your screen, what would your solution have been? ",
		"type": "radio",
		"answers": [
			{
				"id": "eioozak-ojnab",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "code",
				"value": "<dl>\n  {items.map(item => \n     <key={item.id}>\n       <dt>{item.name}</dt>\n       <dd>{item.description}</dd>\n     </>\n  )}\n</dl>",
				"autoFocus": false
			},
			{
				"placeholder": "Add option",
				"autoFocus": false,
				"id": "4d06d9f6-d995-4094-9d36-f5cfe008b999",
				"blockType": "code",
				"type": "radio",
				"value": "<dl>\n  {items.map(item => \n     <Fragment>\n       <dt>{item.name}</dt>\n       <dd>{item.description}</dd>\n     </Fragment>\n  )}\n</dl>"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"value": "<dl>\n  {items.map(item => \n     <Fragment key={item.id}>\n       <dt>{item.name}</dt>\n       <dd>{item.description}</dd>\n     </Fragment>\n  )}\n</dl>",
				"blockType": "code",
				"id": "ca2137fa-2de4-4d28-ac37-3d5f3bf0f4c6",
				"autoFocus": false
			},
			{
				"id": "72dfb68a-10ae-445c-a690-925cdef702fb",
				"value": "<dl>\n  {items.map(item => \n     <div>\n       <dt>item.name}</dt>\n       <dd>{item.description}</dd>\n     </div>\n  )}\n</dl>",
				"type": "radio",
				"placeholder": "Add option",
				"autoFocus": true,
				"blockType": "code"
			}
		],
		"status": "new",
		"category": "react",
		"voted": [],
		"pollNumber": 119,
		"correctAnswers": [
			{
				"value": "<dl>\n  {items.map(item => \n     <Fragment key={item.id}>\n       <dt>{item.name}</dt>\n       <dd>{item.description}</dd>\n     </Fragment>\n  )}\n</dl>",
				"id": "ca2137fa-2de4-4d28-ac37-3d5f3bf0f4c6"
			}
		],
		"codeBlock": "Warning: Each child in a list should have a unique \"key\" prop.\n\n// Code\n<dl>\n  {items.map(item => \n     <>\n       <dt>item.name}</dt>\n       <dd>{item.description}</dd>\n     </>\n  )}\n</dl>",
		"id": "266f1a51-4554-4876-8ebe-c71b94580ddb"
	},
	{
		"id": "1713242d-4a43-4723-a74b-059de5ffefea",
		"correctAnswers": [
			{
				"id": "1efed873-abb1-4238-ba42-1a5c086f6461",
				"value": "cursor: pointer"
			}
		],
		"type": "radio",
		"voted": [],
		"status": "new",
		"pollNumber": 118,
		"codeBlock": "",
		"question": "In CSS, we can change cursors with a simple command, what syntax is used to change the cursor to a hand? ",
		"answers": [
			{
				"value": "cursor: hand",
				"placeholder": "Add option",
				"autoFocus": false,
				"id": "eioozak-ojnab",
				"type": "radio",
				"blockType": "code"
			},
			{
				"autoFocus": false,
				"value": "You can download an NPM package to implement custom cursors",
				"type": "radio",
				"blockType": "text",
				"id": "6d9047c7-f77e-45fc-8224-37a4c60d7357",
				"placeholder": "Add option"
			},
			{
				"value": "cursor: pointer",
				"placeholder": "Add option",
				"autoFocus": false,
				"id": "1efed873-abb1-4238-ba42-1a5c086f6461",
				"type": "radio",
				"blockType": "code"
			},
			{
				"autoFocus": false,
				"id": "98d4b508-9b43-40d2-86b1-1d505af93933",
				"value": "pointer: hand ",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "code"
			},
			{
				"blockType": "code",
				"value": "pointer: pointer ",
				"id": "59b854df-74a9-4ada-bfa6-59aec5b1e81b",
				"type": "radio",
				"autoFocus": false,
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"value": "cursor: cursor",
				"blockType": "code",
				"autoFocus": false,
				"id": "f89a5b88-7165-43ca-b3f9-dbda2c85e9c6",
				"type": "radio"
			},
			{
				"autoFocus": false,
				"type": "radio",
				"id": "6ce6b36d-7fc4-4795-90d9-ad7ad4402c8a",
				"value": "document.addEventListener('mousemove', (e) => {\n    x = e.offsetX;\n    y = e.offsetY;\n    document.styleSheets.item.cursor = \"hand\"\n});",
				"blockType": "code",
				"placeholder": "Add option"
			}
		],
		"category": "css"
	},
	{
		"correctAnswers": [
			{
				"value": "It's easier to keep multiple versions of data / state (allowing features like “undo”!)",
				"id": "d59a0f7a-ca72-4c4e-a902-e0312c223ede"
			},
			{
				"id": "a293dc5f-f15f-4726-84a2-4b836f82a093",
				"value": "If you call a function but not use its return data, you expect that nothing changed"
			}
		],
		"pollNumber": 117,
		"question": "In JS, immutability makes code easier to reason about, now can you list why we immutability is beneficial and please don’t shout? ",
		"id": "dc75c898-7452-4197-8831-9ed223c9fc54",
		"type": "checkbox",
		"codeBlock": "",
		"category": "javascript",
		"answers": [
			{
				"id": "eioozak-ojnab",
				"type": "radio",
				"autoFocus": false,
				"value": "It communicates to the developer that immutable code should not be altered, so developers can safely ignore those pieces of code (which will make the codebase as a whole easier to reason about)",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"value": "Because immutable code exists out of series of easy recognizable statements and operators",
				"placeholder": "Add option",
				"autoFocus": false,
				"blockType": "text",
				"type": "radio",
				"id": "3a46666f-bae1-4eca-90ed-59eca79247f5"
			},
			{
				"type": "radio",
				"blockType": "text",
				"autoFocus": false,
				"id": "880cb604-b1fb-440f-93b2-6547dee61341",
				"value": "Because immutable objects are directly modifiable",
				"placeholder": "Add option"
			},
			{
				"autoFocus": false,
				"placeholder": "Add option",
				"blockType": "text",
				"id": "d59a0f7a-ca72-4c4e-a902-e0312c223ede",
				"type": "radio",
				"value": "It's easier to keep multiple versions of data / state (allowing features like “undo”!)"
			},
			{
				"placeholder": "Add option",
				"id": "a293dc5f-f15f-4726-84a2-4b836f82a093",
				"autoFocus": true,
				"value": "If you call a function but not use its return data, you expect that nothing changed",
				"blockType": "text",
				"type": "radio"
			}
		],
		"voted": [],
		"status": "needs-revision"
	},
	{
		"correctAnswers": [
			{
				"id": "2813382e-14f3-46c3-87fb-9dccbcefe402",
				"value": "Using semantic HTML"
			},
			{
				"value": "Using alt tags on images",
				"id": "eioozak-ojnab"
			},
			{
				"value": "By using “responsive site” meta tags if your site is responsive",
				"id": "b07951a6-11c2-4c43-92e3-ba0e89aa8db9"
			},
			{
				"value": "By using canonical tags in HTML",
				"id": "09ec6d48-cc5e-47f7-9f1e-07b3bba8c11f"
			}
		],
		"category": "general-frontend",
		"question": "In Frontend, your website floats in digital space all around, what are ways to make your SEO profound?",
		"codeBlock": "",
		"pollNumber": 116,
		"answers": [
			{
				"blockType": "text",
				"value": "Using alt tags on images",
				"id": "eioozak-ojnab",
				"placeholder": "Add option",
				"autoFocus": false,
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"autoFocus": false,
				"id": "2813382e-14f3-46c3-87fb-9dccbcefe402",
				"value": "Using semantic HTML",
				"blockType": "text",
				"type": "radio"
			},
			{
				"id": "1663e82f-fbd2-4109-a237-01fdef8b6d89",
				"value": "By creating a PWA and a native app next to your website",
				"type": "radio",
				"autoFocus": false,
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"autoFocus": false,
				"blockType": "text",
				"type": "radio",
				"id": "5b928337-d8fd-430c-ac81-225373ea0040",
				"value": "By following the current Google algorithm: visit your website a few times a day via Google",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"autoFocus": false,
				"blockType": "text",
				"value": "By using canonical tags in HTML",
				"id": "09ec6d48-cc5e-47f7-9f1e-07b3bba8c11f"
			},
			{
				"id": "b07951a6-11c2-4c43-92e3-ba0e89aa8db9",
				"type": "radio",
				"blockType": "text",
				"value": "By using “responsive site” meta tags if your site is responsive",
				"autoFocus": false,
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"id": "8fa2492e-81c3-45fd-967f-1aed51c74d98",
				"blockType": "text",
				"autoFocus": true,
				"type": "radio",
				"value": "By using a CMS"
			}
		],
		"status": "new",
		"type": "checkbox",
		"id": "1fd9130a-d730-4823-800f-d0b9be34839f",
		"voted": []
	},
	{
		"codeBlock": "",
		"pollNumber": 115,
		"status": "new",
		"correctAnswers": [
			{
				"value": "It creates a stacking context",
				"id": "eioozak-ojnab"
			}
		],
		"id": "de75713d-0972-4524-8f3b-d23de237d3b4",
		"question": "In CSS, to create transparency used is a property called opacity, do you know a side effect on that property that may count as nitty gritty?",
		"category": "css",
		"answers": [
			{
				"value": "It creates a stacking context",
				"type": "radio",
				"id": "eioozak-ojnab",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"value": "It takes elements out of the DOM flow",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "3ab80f5f-32aa-4e0b-9b37-7068c3d7ab57"
			},
			{
				"blockType": "text",
				"value": "It makes elements inline automatically",
				"id": "52ae7a38-aae2-479e-afb5-b723596606df",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"value": "Opacity is a shorthand property, so it implicitly sets properties values tied to opacity like “opacity-rate” or “opacity-color”",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "369c41f9-8cd5-488d-9825-0a0ced762a69",
				"type": "radio"
			},
			{
				"id": "9eb7edf3-e956-4b05-b63e-90a61baeb19a",
				"value": "By design mistake it ignores the CSS specificity rules",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option"
			}
		],
		"type": "radio",
		"voted": []
	},
	{
		"codeBlock": "",
		"status": "open",
		"pollNumber": 114,
		"id": "8cedf177-3634-4871-9ffe-e4450f54c3f8",
		"question": "In JS, arrays start and end, what ways are allowed to get the last element?",
		"openingTime": 1664524443752,
		"type": "checkbox",
		"answers": [
			{
				"value": "array[array.length - 1]",
				"type": "radio",
				"id": "eioozak-ojnab",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"id": "866ea28c-1ad5-4434-a81c-40791fc90c35",
				"type": "radio",
				"value": "array.at(-1)",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"value": "array[array.length]",
				"id": "07e2d265-4398-4c5f-a5da-b1195bd9925b",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "a1f2e548-45a5-4679-9ecf-55b139190902",
				"blockType": "text",
				"value": "while((element) ⇒ {  return array === “last” ? element : array })"
			},
			{
				"type": "radio",
				"id": "57c86f86-93c5-4bc8-a25d-1472bb92a233",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "array.findLastElement(element ⇒ element)"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"value": "array.slice(-1)[0]",
				"id": "f5070e72-43d2-4ffe-bc29-88de86b6c9f7",
				"blockType": "text"
			},
			{
				"type": "radio",
				"id": "802e11e0-3cdf-4849-a4a2-491821404571",
				"value": "array.pop()",
				"blockType": "text",
				"placeholder": "Add option"
			}
		],
		"category": "javascript",
		"voted": [
			{
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2",
				"answerId": "eioozak-ojnab"
			},
			{
				"answerId": "802e11e0-3cdf-4849-a4a2-491821404571",
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2"
			},
			{
				"userId": "aWI6X9i1RugALHJ7ILr8Xp4baIW2",
				"answerId": "eioozak-ojnab"
			},
			{
				"answerId": "f5070e72-43d2-4ffe-bc29-88de86b6c9f7",
				"userId": "aWI6X9i1RugALHJ7ILr8Xp4baIW2"
			},
			{
				"userId": "aWI6X9i1RugALHJ7ILr8Xp4baIW2",
				"answerId": "802e11e0-3cdf-4849-a4a2-491821404571"
			},
			{
				"userId": "aWI6X9i1RugALHJ7ILr8Xp4baIW2",
				"answerId": "866ea28c-1ad5-4434-a81c-40791fc90c35"
			},
			{
				"answerId": "eioozak-ojnab",
				"userId": "y0Vb464iCdeVzfBJBZzCjCIZIi72"
			},
			{
				"answerId": "f5070e72-43d2-4ffe-bc29-88de86b6c9f7",
				"userId": "y0Vb464iCdeVzfBJBZzCjCIZIi72"
			},
			{
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292",
				"answerId": "f5070e72-43d2-4ffe-bc29-88de86b6c9f7"
			},
			{
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292",
				"answerId": "eioozak-ojnab"
			},
			{
				"answerId": "866ea28c-1ad5-4434-a81c-40791fc90c35",
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292"
			},
			{
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292",
				"answerId": "802e11e0-3cdf-4849-a4a2-491821404571"
			},
			{
				"answerId": "eioozak-ojnab",
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1"
			},
			{
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1",
				"answerId": "866ea28c-1ad5-4434-a81c-40791fc90c35"
			},
			{
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1",
				"answerId": "802e11e0-3cdf-4849-a4a2-491821404571"
			},
			{
				"userId": "GxloHn9wFkRFYYHXSuTj56kXd0q2",
				"answerId": "802e11e0-3cdf-4849-a4a2-491821404571"
			},
			{
				"userId": "GxloHn9wFkRFYYHXSuTj56kXd0q2",
				"answerId": "eioozak-ojnab"
			},
			{
				"userId": "kfrkjsbashYfl1sD2PgVGXcpND63",
				"answerId": "eioozak-ojnab"
			},
			{
				"answerId": "eioozak-ojnab",
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1"
			},
			{
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1",
				"answerId": "f5070e72-43d2-4ffe-bc29-88de86b6c9f7"
			},
			{
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1",
				"answerId": "802e11e0-3cdf-4849-a4a2-491821404571"
			},
			{
				"answerId": "eioozak-ojnab",
				"userId": "H2uBO669vaZ80jwDe7zzxmKbUV02"
			},
			{
				"answerId": "802e11e0-3cdf-4849-a4a2-491821404571",
				"userId": "H2uBO669vaZ80jwDe7zzxmKbUV02"
			},
			{
				"userId": "H2uBO669vaZ80jwDe7zzxmKbUV02",
				"answerId": "f5070e72-43d2-4ffe-bc29-88de86b6c9f7"
			},
			{
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2",
				"answerId": "f5070e72-43d2-4ffe-bc29-88de86b6c9f7"
			},
			{
				"answerId": "eioozak-ojnab",
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2"
			},
			{
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2",
				"answerId": "866ea28c-1ad5-4434-a81c-40791fc90c35"
			},
			{
				"answerId": "802e11e0-3cdf-4849-a4a2-491821404571",
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2"
			},
			{
				"answerId": "eioozak-ojnab",
				"userId": "B762i26QM7Y275I0w2uAtklg3Gx1"
			},
			{
				"answerId": "802e11e0-3cdf-4849-a4a2-491821404571",
				"userId": "B762i26QM7Y275I0w2uAtklg3Gx1"
			},
			{
				"answerId": "eioozak-ojnab",
				"userId": "qBHCpnXFOLZsdzcHbKzvkqP6Uck1"
			},
			{
				"answerId": "eioozak-ojnab",
				"userId": "btmzQ2h02aa7NwgpOFMGvGSgcv62"
			},
			{
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3",
				"answerId": "eioozak-ojnab"
			},
			{
				"answerId": "866ea28c-1ad5-4434-a81c-40791fc90c35",
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3"
			},
			{
				"answerId": "802e11e0-3cdf-4849-a4a2-491821404571",
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3"
			},
			{
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3",
				"answerId": "f5070e72-43d2-4ffe-bc29-88de86b6c9f7"
			}
		],
		"correctAnswers": [
			{
				"id": "f5070e72-43d2-4ffe-bc29-88de86b6c9f7",
				"value": "array.slice(-1)[0]"
			},
			{
				"id": "eioozak-ojnab",
				"value": "array[array.length - 1]"
			},
			{
				"id": "866ea28c-1ad5-4434-a81c-40791fc90c35",
				"value": "array.at(-1)"
			}
		]
	},
	{
		"category": "css",
		"question": "In CSS, voting on these polls is time well spent, what psuedo class is used to style elements based on a url fragment?",
		"voted": [],
		"correctAnswers": [
			{
				"value": ":target",
				"id": "eioozak-ojnab"
			}
		],
		"type": "radio",
		"pollNumber": 113,
		"id": "bb862914-8de5-42cf-bcd4-049dcb7e2208",
		"codeBlock": "",
		"status": "new",
		"answers": [
			{
				"blockType": "text",
				"id": "eioozak-ojnab",
				"type": "radio",
				"value": ":target",
				"placeholder": "Add option"
			},
			{
				"value": ":url",
				"id": "90d5eda8-53f3-4c1e-92cb-1ce15587ab59",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"id": "cef0793d-97d0-4ded-bb1e-6296bef3907b",
				"placeholder": "Add option",
				"blockType": "text",
				"value": ":active"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": ":fragment",
				"type": "radio",
				"id": "d54d50c2-d0e9-4d56-9b64-5f6863696523"
			},
			{
				"id": "cd31a5b7-7c0d-4517-8868-4f38cbde794a",
				"type": "radio",
				"blockType": "text",
				"value": "By using #id selectors",
				"placeholder": "Add option"
			},
			{
				"id": "3a7f9182-f408-4b4e-875a-b261ac5543ec",
				"type": "radio",
				"placeholder": "Add option",
				"value": ":last-url-child",
				"blockType": "text"
			},
			{
				"value": ":has(:url)",
				"id": "e9fb5193-bfe8-470f-ae64-0440e574137b",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio"
			}
		]
	},
	{
		"question": "In CSS, \"scroll-chaining\" is a thing happening when we scroll, what property can you use to make it under your control?",
		"id": "9d517708-0722-4da1-b24b-9083d1ba1a1d",
		"status": "closed",
		"correctAnswers": [
			{
				"id": "b3ed77f8-c2d7-477b-a598-f5adf6dbab3c",
				"value": "overscroll-behaviour "
			}
		],
		"answers": [
			{
				"placeholder": "Add option",
				"type": "radio",
				"value": "scroll-chain",
				"id": "eioozak-ojnab",
				"blockType": "code"
			},
			{
				"id": "8672553b-e56d-4442-914f-625de5be7f80",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "The JS Intersection Observer API ",
				"type": "radio"
			},
			{
				"type": "radio",
				"value": "overflow",
				"id": "76cb2e09-f591-4529-92f8-c3fb1bbb06f7",
				"blockType": "code",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"value": "overscroll-behaviour ",
				"blockType": "code",
				"id": "b3ed77f8-c2d7-477b-a598-f5adf6dbab3c",
				"type": "radio"
			},
			{
				"value": "scroll-snap",
				"placeholder": "Add option",
				"type": "radio",
				"id": "830cbf05-66ad-4372-96f0-b430b4df300d",
				"blockType": "code"
			},
			{
				"blockType": "code",
				"id": "bc305917-3d00-491e-8a49-11ffce2652d7",
				"value": "window.scrollTo()",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"blockType": "code",
				"type": "radio",
				"id": "ca5ae794-dbd7-4735-aba4-2da4ed89b35c",
				"placeholder": "Add option",
				"value": "var notChangedStepsCount = 0;\nvar scrollInterval = setInterval(function() {\n    var element = document.querySelector(\".element-selector\");\n    if (element) { \n        // element found\n        clearInterval(scrollInterval);\n        element.scrollIntoView();\n    } else if((document.documentElement.scrollTop + window.innerHeight) != document.documentElement.scrollHeight) { \n        // no element -> scrolling\n        notChangedStepsCount = 0;\n        document.documentElement.scrollTop = document.documentElement.scrollHeight;\n    } else if (notChangedStepsCount > 20) { \n        // no more space to scroll\n        clearInterval(scrollInterval);\n    } else {\n        // waiting for possible extension (autoload) of the page\n        notChangedStepsCount++;\n    }\n}, 50);"
			}
		],
		"codeBlock": "",
		"pollNumber": 112,
		"category": "css",
		"type": "radio",
		"openingTime": 1664266194040,
		"voted": [
			{
				"answerId": "b3ed77f8-c2d7-477b-a598-f5adf6dbab3c",
				"userId": "GxloHn9wFkRFYYHXSuTj56kXd0q2"
			},
			{
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1",
				"answerId": "830cbf05-66ad-4372-96f0-b430b4df300d"
			},
			{
				"answerId": "b3ed77f8-c2d7-477b-a598-f5adf6dbab3c",
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1"
			},
			{
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3",
				"answerId": "830cbf05-66ad-4372-96f0-b430b4df300d"
			},
			{
				"answerId": "b3ed77f8-c2d7-477b-a598-f5adf6dbab3c",
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2"
			},
			{
				"userId": "kfrkjsbashYfl1sD2PgVGXcpND63",
				"answerId": "eioozak-ojnab"
			},
			{
				"answerId": "b3ed77f8-c2d7-477b-a598-f5adf6dbab3c",
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2"
			},
			{
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292",
				"answerId": "b3ed77f8-c2d7-477b-a598-f5adf6dbab3c"
			},
			{
				"answerId": "b3ed77f8-c2d7-477b-a598-f5adf6dbab3c",
				"userId": "B762i26QM7Y275I0w2uAtklg3Gx1"
			},
			{
				"answerId": "76cb2e09-f591-4529-92f8-c3fb1bbb06f7",
				"userId": "y0Vb464iCdeVzfBJBZzCjCIZIi72"
			},
			{
				"userId": "8O6cHx6IxmTUXaMnXhxcQ2HFgEV2",
				"answerId": "b3ed77f8-c2d7-477b-a598-f5adf6dbab3c"
			}
		]
	},
	{
		"category": "css",
		"type": "radio",
		"correctAnswers": [
			{
				"id": "b2f44734-deab-423f-ae37-3150ec080720",
				"value": "Specificity is the algorithm used by browsers to determine the CSS declaration  that is the most relevant to an element"
			}
		],
		"codeBlock": "",
		"id": "f6f648b9-10a5-4822-b02f-dda0caf5ac5d",
		"answers": [
			{
				"blockType": "text",
				"type": "radio",
				"value": "Specificity is so-called code style, meaning that you write very specific, pure and immutable CSS",
				"placeholder": "Add option",
				"id": "eioozak-ojnab"
			},
			{
				"id": "76b09320-ffc2-44d5-8a60-c2cd1a373778",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "Specificity is “special” CSS aimed at advanced CSS’ers, referring to a learning phase after mastering the fundamentals"
			},
			{
				"blockType": "text",
				"value": "Specificity is the second S in CSS: Cascading Specificity Styles",
				"placeholder": "Add option",
				"type": "radio",
				"id": "e44c004b-8536-429a-894b-aa1618132cff"
			},
			{
				"blockType": "text",
				"value": "Specificity is the algorithm used by browsers to determine the CSS declaration  that is the most relevant to an element",
				"type": "radio",
				"placeholder": "Add option",
				"id": "b2f44734-deab-423f-ae37-3150ec080720"
			},
			{
				"placeholder": "Add option",
				"id": "e14bdbd9-9d34-4d86-9f45-b23878f4571e",
				"blockType": "text",
				"value": "Specificity applies to the term “specificity classes” like :active, :is, :where, :has, :link, :hover etc. ",
				"type": "radio"
			},
			{
				"value": "Specificity is applied when you nest your styles: when applying, you will create specific CSS code ",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"id": "d33eca66-33f8-412a-bbe9-0adc82f5eb79"
			}
		],
		"question": "In CSS, specificity is basic stuff, now name a fact about it that’ll make your CSS knowledge tough?",
		"voted": [],
		"pollNumber": 111,
		"status": "new"
	},
	{
		"category": "typescript",
		"type": "radio",
		"codeBlock": "",
		"voted": [],
		"question": "In TS, sometimes TypeScript can’t figure out a compatible type on the go, what can you do to make TypeScript know? ",
		"id": "6847c637-7830-48b9-84af-d5aa57cbc691",
		"answers": [
			{
				"blockType": "text",
				"type": "radio",
				"value": "Use the `any` type ",
				"id": "e3dc0a05-8313-4398-a65f-a57e8d7081ba",
				"placeholder": "Add option"
			},
			{
				"value": "Proceed and leave the type as `unknown`",
				"id": "aa5e0a28-7c3c-412b-9770-35bd614ee0b2",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"id": "66597296-a456-4491-aa3c-08682ccf5e82",
				"placeholder": "Add option",
				"value": "Configure TypeScript to ignore unknown values",
				"blockType": "text",
				"type": "radio"
			},
			{
				"type": "radio",
				"id": "313fb9b3-ae01-4bda-9ce1-0cc6bf30b82b",
				"value": "TypeScript doesn’t know unknown, it always references to a type",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"id": "5541f0bd-c02f-43d7-ab90-d710aeaff6c6",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"value": "Type assertion, e.g `value as Type`"
			}
		],
		"correctAnswers": [
			{
				"value": "typeof === “boolean”",
				"id": "eioozak-ojnab"
			}
		],
		"status": "new",
		"pollNumber": 110
	},
	{
		"id": "08e5d247-d38b-4e8b-92d6-eb802900f28a",
		"pollNumber": 109,
		"answers": [
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "eioozak-ojnab",
				"blockType": "text",
				"value": "typeof === “boolean”"
			},
			{
				"value": "typeof === Boolean",
				"placeholder": "Add option",
				"type": "radio",
				"id": "512abe50-2499-47cc-9f77-40d3f44b9b31",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"value": "valueof === “boolean”",
				"id": "c04fd43c-7993-4a7c-bb7b-fbe13250b378",
				"blockType": "text"
			},
			{
				"value": "type",
				"placeholder": "Add option",
				"id": "ab576901-b479-4251-aae6-01f87d2dcd8f",
				"blockType": "text",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"value": "It’s done with TypeScript",
				"blockType": "text",
				"type": "radio",
				"id": "4512a45f-97d8-43af-86c7-872d388acb6e"
			},
			{
				"blockType": "text",
				"id": "190cf07f-1257-4adf-8098-1dc210e42a50",
				"value": "isBoolean()",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"value": "value === “boolean”",
				"id": "2e43663f-db5e-4b16-81df-94d65fa611fb"
			},
			{
				"id": "e3dc0a05-8313-4398-a65f-a57e8d7081ba",
				"blockType": "text",
				"value": "Boolean()",
				"type": "radio",
				"placeholder": "Add option"
			}
		],
		"question": "In JS, this question might not be your thing which is a gripe, what operator would you use to check if a value is a boolean type?",
		"type": "radio",
		"status": "new",
		"codeBlock": "",
		"voted": [],
		"correctAnswers": [
			{
				"id": "eioozak-ojnab",
				"value": "typeof === “boolean”"
			}
		],
		"category": "javascript"
	},
	{
		"correctAnswers": [
			{
				"id": "2cb4e96f-d3e7-4a98-8e48-cf39990dae32",
				"value": "If the HTML Tag exists but a11y support is not implemented"
			}
		],
		"answers": [
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "eioozak-ojnab",
				"blockType": "text",
				"value": "When you use non-semantic elements but want to support a11y"
			},
			{
				"value": "They should be used on all elements, but ARIA is always an ondergeschoven kindje",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "eb4f8f78-5bee-4a13-a75a-e5d59046b7f3"
			},
			{
				"type": "radio",
				"blockType": "text",
				"value": "When you have to support deprecated HTML tags in older browsers",
				"id": "cc2945f4-70bf-4e07-94f1-ed8e8ece01ce",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"type": "radio",
				"value": "ARIA rules are only applied when you want to improve your UX for complex apps towards your users",
				"id": "b638788b-d852-48c2-aed1-0604c1d63cf0",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"id": "2cb4e96f-d3e7-4a98-8e48-cf39990dae32",
				"value": "If the HTML Tag exists but a11y support is not implemented",
				"type": "radio"
			},
			{
				"blockType": "text",
				"value": "When you want to have a valid HTML document",
				"id": "2484f047-5c09-419c-86ea-963747eeca19",
				"placeholder": "Add option",
				"type": "radio"
			}
		],
		"category": "html",
		"status": "new",
		"voted": [],
		"id": "062ad1b1-9acd-406d-af2e-5d53a65a07ca",
		"pollNumber": 108,
		"question": "In HTML, A11y is important under every circumstance, but when are ARIA rules a way to enhance?",
		"codeBlock": "",
		"type": "radio"
	},
	{
		"answers": [
			{
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "margin",
				"id": "eioozak-ojnab"
			},
			{
				"id": "1d6f776d-5337-4096-bfcf-91fa7d463974",
				"value": "padding",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text"
			},
			{
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "eb8dbbcf-a50c-452d-9067-596604cde8b0",
				"value": "flex"
			},
			{
				"blockType": "text",
				"value": "grid",
				"type": "radio",
				"placeholder": "Add option",
				"id": "5812d53f-7d49-441e-af82-bf134d505e5c"
			},
			{
				"value": "gap",
				"id": "b6866d69-fc27-4df3-a305-159040473d47",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"id": "7ab4ce5a-d061-44fa-92ea-b36fb0c6701a",
				"type": "radio",
				"value": "border",
				"blockType": "text",
				"placeholder": "Add option"
			}
		],
		"pollNumber": 107,
		"codeBlock": "",
		"question": "In CSS, now don’t get confused, but to create space between elements what property is used?",
		"voted": [],
		"status": "new",
		"openingTime": null,
		"type": "radio",
		"category": "css",
		"correctAnswers": [
			{
				"id": "b6866d69-fc27-4df3-a305-159040473d47",
				"value": "gap"
			}
		],
		"id": "b77d29f3-f2c1-47bd-acf8-eb9f1615577a"
	},
	{
		"question": "In JS, some events may be ambiguous, what is the difference between blur and onFocusOut which is not very conspicious?",
		"category": "javascript",
		"voted": [],
		"status": "new",
		"codeBlock": "",
		"correctAnswers": [
			{
				"id": "2ab47e09-f49d-4c19-87db-58b9ed53998d",
				"value": "onFocusOut bubbles; blur doesn’t"
			}
		],
		"type": "radio",
		"openingTime": null,
		"pollNumber": 106,
		"answers": [
			{
				"id": "eioozak-ojnab",
				"value": "They are different kind of events: blur is used for example with images (“blurring”), while onFocusOut is used for input fields",
				"autoFocus": false,
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"id": "ba49a6d0-38c2-4158-b818-a75871eb6d14",
				"value": "Blur is used in conjunction with input fields, onFocusOut is only for buttons",
				"blockType": "text",
				"type": "radio",
				"autoFocus": false
			},
			{
				"type": "radio",
				"autoFocus": false,
				"value": "onFocusOut bubbles; blur doesn’t",
				"placeholder": "Add option",
				"id": "2ab47e09-f49d-4c19-87db-58b9ed53998d",
				"blockType": "text"
			},
			{
				"type": "radio",
				"id": "1d46ff11-9f27-4e02-9f68-6d4a15c74f5c",
				"placeholder": "Add option",
				"autoFocus": false,
				"value": "There is no difference in functionality: onFocusOut was developed later as the W3C found this to be a more intuitive name",
				"blockType": "text"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"autoFocus": true,
				"value": "onFocusOut is a synthetic event from React (and the better name according to them); blur is the DOM implementation",
				"id": "5596f5b1-077c-4423-ae5a-6cecc6df37d6"
			}
		],
		"id": "5f44ec4b-4a9c-41fa-8d62-5505dd65ccec"
	},
	{
		"category": "javascript",
		"codeBlock": "",
		"openingTime": null,
		"correctAnswers": [
			{
				"id": "ba49a6d0-38c2-4158-b818-a75871eb6d14",
				"value": "As soon as the method returns true, it will stop checking elements that come after"
			}
		],
		"pollNumber": 105,
		"answers": [
			{
				"type": "radio",
				"value": "It picks “some” elements meeting the  condition you provide",
				"id": "eioozak-ojnab",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"value": "As soon as the method returns true, it will stop checking elements that come after",
				"type": "radio",
				"id": "ba49a6d0-38c2-4158-b818-a75871eb6d14",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"id": "2ab47e09-f49d-4c19-87db-58b9ed53998d",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"value": "It’s a method that sometimes (randomly) returns false, and sometimes true"
			},
			{
				"blockType": "text",
				"id": "47fe13be-69fb-459e-8aef-ccdb3c28517e",
				"value": "It executes a callback function sometimes: only when it meets the condition ",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"value": "It tests all elements in the array pass the test and only returns true if all elements pass",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "c28b3e8b-985d-4c02-829a-a1f454a701c9"
			}
		],
		"type": "radio",
		"id": "29221e34-a8e9-4cb8-8931-390d0595be95",
		"voted": [],
		"status": "new",
		"question": "In JS, `some()` is a method provided, can you explain what it does when applied?"
	},
	{
		"type": "radio",
		"pollNumber": 104,
		"correctAnswers": [
			{
				"id": "427a8f9c-0958-4627-b8cd-53ccf4b8c8ab",
				"value": "!!value"
			}
		],
		"question": "In JS, there is a lot knowledge to grasp, what way a boolean value is cast?",
		"status": "new",
		"codeBlock": "",
		"voted": [],
		"category": "javascript",
		"id": "6aa33787-7d21-42c0-8b16-560ae8f572ce",
		"answers": [
			{
				"value": "cast(value)",
				"id": "eioozak-ojnab",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "code"
			},
			{
				"value": "as boolean",
				"blockType": "code",
				"placeholder": "Add option",
				"id": "8cdd7da1-c831-4aff-831a-c0333f78fa24",
				"type": "radio"
			},
			{
				"id": "900b78bf-6e4e-4501-a112-47c2db13c980",
				"placeholder": "Add option",
				"blockType": "code",
				"value": "(value) ⇒ “boolean”",
				"type": "radio"
			},
			{
				"value": "typeof === ”boolean”",
				"type": "radio",
				"blockType": "code",
				"id": "0ee4e36a-d114-4ace-a03f-7029b21f5d97",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"id": "904e9ee9-f296-47d4-888c-458ea7ee2e2c",
				"value": "With CSS booleans",
				"type": "radio"
			},
			{
				"blockType": "text",
				"id": "997f7ad2-5de0-4a37-8418-942602a90187",
				"placeholder": "Add option",
				"type": "radio",
				"value": "With CSS logical properties"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"id": "427a8f9c-0958-4627-b8cd-53ccf4b8c8ab",
				"blockType": "text",
				"value": "!!value"
			}
		],
		"openingTime": null
	},
	{
		"status": "new",
		"category": "html",
		"openingTime": null,
		"pollNumber": 103,
		"correctAnswers": [
			{
				"value": "It prevents assistive technology from being able to navigate and manipulate to elements",
				"id": "0ee4e36a-d114-4ace-a03f-7029b21f5d97"
			}
		],
		"type": "radio",
		"codeBlock": "",
		"question": "In HTML, the `tabindex` property may enhance a11y by controliing keyboard focus in development, what are concerns when using it on a non-interactive element? ",
		"id": "9e215a61-1a85-4182-af30-969eeef2597b",
		"voted": [],
		"answers": [
			{
				"blockType": "text",
				"id": "eioozak-ojnab",
				"value": "The concerns are that it will cause unwanted side effects on semantic elements",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"value": "Because the “tab” button was actually going to be replaced on future keyboards, because it had no real meaning (before popular shortcuts like cmd + tab came around)",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"id": "8cdd7da1-c831-4aff-831a-c0333f78fa24"
			},
			{
				"blockType": "text",
				"type": "radio",
				"value": "The concern are performance issues, because tabindexing is a heavy computational task",
				"placeholder": "Add option",
				"id": "900b78bf-6e4e-4501-a112-47c2db13c980"
			},
			{
				"id": "0ee4e36a-d114-4ace-a03f-7029b21f5d97",
				"type": "radio",
				"value": "It prevents assistive technology from being able to navigate and manipulate to elements",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"value": "Nothing, on the contrary; adding tabindex enhances a11y",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"id": "904e9ee9-f296-47d4-888c-458ea7ee2e2c"
			}
		]
	},
	{
		"id": "505a1b99-3ed7-45cf-b503-fecde59a50a3",
		"question": "In HTML, attributes adjusts behaviour of elements which is noticable, what attribute is used to make to interactive elements keyboard focusable?",
		"status": "new",
		"pollNumber": 102,
		"correctAnswers": [
			{
				"id": "53bd0df5-3376-4115-9b4b-ebbead2b4b65",
				"value": "tabindex"
			}
		],
		"answers": [
			{
				"value": "autofocus",
				"type": "radio",
				"blockType": "code",
				"placeholder": "Add option",
				"id": "eioozak-ojnab"
			},
			{
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"value": "With keyboard event listeners",
				"id": "18b44cc8-d297-46d6-a2c8-a793fe814cb7"
			},
			{
				"blockType": "code",
				"id": "ff6fac8d-edbb-4095-aa50-7905c54e7fef",
				"placeholder": "Add option",
				"type": "radio",
				"value": "keyfocus"
			},
			{
				"placeholder": "Add option",
				"id": "eba92415-56d4-4e5a-b2b0-bb38a9250923",
				"type": "radio",
				"blockType": "text",
				"value": "With CSS psuedo class :focus"
			},
			{
				"value": "onFocus",
				"blockType": "code",
				"type": "radio",
				"placeholder": "Add option",
				"id": "403a04b9-94bd-45a7-8b71-8ec31954a48c"
			},
			{
				"value": "onBlur",
				"type": "radio",
				"id": "f510c942-32e0-4af6-b29e-ad84ef4ad2d9",
				"blockType": "code",
				"placeholder": "Add option"
			},
			{
				"id": "53bd0df5-3376-4115-9b4b-ebbead2b4b65",
				"blockType": "code",
				"placeholder": "Add option",
				"value": "tabindex",
				"type": "radio"
			}
		],
		"voted": [],
		"type": "radio",
		"category": "html",
		"openingTime": null,
		"codeBlock": ""
	},
	{
		"status": "needs-revision",
		"codeBlock": "",
		"answers": [
			{
				"blockType": "text",
				"id": "eioozak-ojnab",
				"value": "Flexbox is aimed at smaller layouts, while grid is aimed at larger-scale layouts",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"id": "d3dace53-0c92-4c06-bdd1-3234cbc931ac",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"value": "You should choose either grid or flexbox in your project, because using them interchangeably causes problems"
			},
			{
				"value": "Grid is only needed to create table layouts; Flexbox should be used for the rest",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "91a21faf-466a-4fd2-adb1-0e52f8641188",
				"type": "radio"
			}
		],
		"question": "In CSS, flexbox and grid techniques are each like a brother, though they are not the same, can you list when to use one over another?",
		"openingTime": null,
		"voted": [],
		"pollNumber": 101,
		"type": "radio",
		"correctAnswers": [
			{
				"value": "Flexbox is aimed at smaller layouts, while grid is aimed at larger-scale layouts",
				"id": "eioozak-ojnab"
			}
		],
		"id": "494ad48c-19a0-4847-96b5-be7968d55ede",
		"category": "css"
	},
	{
		"status": "needs-revision",
		"openingTime": 1663064714368,
		"answers": [
			{
				"blockType": "code",
				"value": "reduce",
				"id": "a36f1286-57a5-4027-aa89-b2b7f594e2d9",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"type": "radio",
				"value": "map",
				"id": "5f06a23d-8275-4570-82d6-e4007a3e87cf",
				"placeholder": "Add option",
				"blockType": "code"
			},
			{
				"id": "4502a4e5-670d-4faf-9efd-50c038aff727",
				"value": "push",
				"placeholder": "Add option",
				"blockType": "code",
				"type": "radio"
			},
			{
				"id": "70f89332-66b6-4b90-be4a-bf680d15654c",
				"blockType": "code",
				"placeholder": "Add option",
				"type": "radio",
				"value": "concat"
			},
			{
				"blockType": "code",
				"value": "every",
				"type": "radio",
				"id": "1514eab3-6cbd-4ee4-a324-03092dd228ee",
				"placeholder": "Add option"
			},
			{
				"id": "c2908c6c-706f-476a-a2d7-7e9e7f6a4c47",
				"placeholder": "Add option",
				"blockType": "code",
				"type": "radio",
				"value": "splice"
			},
			{
				"blockType": "code",
				"placeholder": "Add option",
				"id": "e28c2bb4-dd28-4923-8748-401c0c947972",
				"value": "slice",
				"type": "radio"
			},
			{
				"blockType": "code",
				"placeholder": "Add option",
				"type": "radio",
				"value": "filter",
				"id": "b170c38e-9c9d-4153-bd8b-2e5408995918"
			},
			{
				"value": "pop",
				"type": "radio",
				"blockType": "code",
				"id": "e65c780c-7137-484c-8941-713dd2fb4814",
				"placeholder": "Add option"
			},
			{
				"blockType": "code",
				"value": "some",
				"id": "42d40fdf-7325-46f6-89d8-5a060ff3ac50",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"id": "bf210622-73be-49dc-90ab-5d15a17bada2",
				"value": "forEach",
				"blockType": "code",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"blockType": "code",
				"value": "sort",
				"type": "radio",
				"id": "386d2446-6761-4024-8be3-024656047376"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "code",
				"value": "reverse",
				"id": "6891b5cf-0b2a-4e6d-ad40-64bb84a4c432"
			},
			{
				"blockType": "code",
				"placeholder": "Add option",
				"type": "radio",
				"id": "471b651f-8551-49f8-8323-0b34edd10a2e",
				"value": "unshift"
			}
		],
		"question": "In JS, mutable and immutable methods are indisputable can you list the methods which are immutable?",
		"codeBlock": "",
		"voted": [],
		"pollNumber": 100,
		"category": "javascript",
		"id": "1c8a9c5c-a264-4211-af5a-8a226fb6986c",
		"type": "checkbox",
		"correctAnswers": [
			{
				"id": "a36f1286-57a5-4027-aa89-b2b7f594e2d9",
				"value": "reduce"
			},
			{
				"id": "5f06a23d-8275-4570-82d6-e4007a3e87cf",
				"value": "map"
			},
			{
				"value": "concat",
				"id": "70f89332-66b6-4b90-be4a-bf680d15654c"
			},
			{
				"value": "every",
				"id": "1514eab3-6cbd-4ee4-a324-03092dd228ee"
			},
			{
				"value": "slice",
				"id": "e28c2bb4-dd28-4923-8748-401c0c947972"
			},
			{
				"id": "b170c38e-9c9d-4153-bd8b-2e5408995918",
				"value": "filter"
			},
			{
				"id": "42d40fdf-7325-46f6-89d8-5a060ff3ac50",
				"value": "some"
			}
		]
	},
	{
		"question": "In HTML, image and text are often together created, what tags are used when they are related?",
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0",
				"value": "fixed"
			},
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{
				"value": "<weak>",
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73"
			},
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url"
			},
			{
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe",
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{
				"value": "<dbz>",
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61"
			},
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{
				"value": "<card>",
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1"
			},
			{
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b",
				"value": "<vue>"
			},
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"value": "Methods like call(), apply()and bind() can refer thisto any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			},
			{
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers",
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65"
			},
			{
				"value": "line-height",
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a"
			},
			{
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d",
				"value": "Block level elements take the width of the entire row"
			},
			{
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary"
			},
			{
				"value": "color",
				"id": "9eadd81b-a378-414a-827b-7c9d105b1ca3"
			},
			{
				"value": "hidden",
				"id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc"
			},
			{
				"value": "radio",
				"id": "db1d4d07-16ed-4031-8fe4-b5f502063844"
			},
			{
				"id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8",
				"value": "reset"
			},
			{
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3",
				"value": "flex-wrap"
			},
			{
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b",
				"value": "The margins will collapse, meaning that the margin of the biggest element will win "
			},
			{
				"value": "debugger",
				"id": "d987a018-4259-438f-8baa-67cb031c3591"
			},
			{
				"value": "It occurred because you are trying to call a value as a function but the value is not a function",
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f"
			},
			{
				"value": "block scope",
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f"
			},
			{
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a",
				"value": "function scope"
			},
			{
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096",
				"value": "lexical scope"
			},
			{
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2",
				"value": "module scope"
			},
			{
				"value": "global scope",
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f"
			},
			{
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe",
				"value": "It is not recommended because it opens a security leak, eval is evil"
			},
			{
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e",
				"value": "ternary operator"
			},
			{
				"value": "When you are using TypeScript but don’t really need the types",
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5"
			},
			{
				"value": "When you’re working on simple/small applications (<1000 lines of code)",
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a"
			},
			{
				"value": "When run-time errors are contextually more informative (depends on the project)",
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76"
			},
			{
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1",
				"value": "When your codebase is at a level it needs flexibility at every level"
			},
			{
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713",
				"value": "When your “Navi” intellisense suggests “any” "
			},
			{
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story",
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15"
			},
			{
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)",
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913"
			},
			{
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b",
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly"
			},
			{
				"value": "Optimistic UI",
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5"
			},
			{
				"value": "<noscript>",
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2"
			},
			{
				"value": "Strawperson > Proposal > Draft > Candidate > Finished",
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914"
			},
			{
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304",
				"value": "LocalStorage persists across browsers"
			},
			{
				"id": "14000f03-3405-4e5e-b231-81b45faa6654",
				"value": "SessionStorage will be removed when a browser is closed"
			},
			{
				"id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c",
				"value": "^"
			},
			{
				"value": "When writing directions (foreign languages) matter ",
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264"
			},
			{
				"id": "04cfe937-2a1c-4e21-adf4-949835c0d764",
				"value": "try"
			},
			{
				"value": "finally",
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14"
			},
			{
				"value": "throw",
				"id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3"
			},
			{
				"id": "7767b333-639a-40e7-904d-158fe4127d37",
				"value": "Semantic tags are important for users with screen readers"
			},
			{
				"value": "Semantic tags show developer’s intent",
				"id": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450"
			},
			{
				"id": "8c26881c-c657-4e4a-a454-635e6b3a4d62",
				"value": ".map doesn’t run when the array is empty"
			},
			{
				"value": "When you have heavy computations doing the same thing ",
				"id": "7d065da6-592b-4283-8438-18d90ec2f0b6"
			},
			{
				"value": "Nothing: You can perfectly do this request",
				"id": "c8582033-1847-4175-99bd-d02ea8819c9b"
			},
			{
				"value": "It builds confidence in your code because you can run it whenever you make changes in code",
				"id": "6ae45a37-d353-4d95-8c94-c516c45b431c"
			},
			{
				"value": "Lifting state up",
				"id": "314a6b8f-b5f0-443e-adab-d2b36587befc"
			},
			{
				"value": "accent-color",
				"id": "bf70be23-42b6-4ab8-bde7-f961bd5ca747"
			},
			{
				"id": "4cea1053-afcb-4661-844f-8ed4ed3a3af4",
				"value": "jsx"
			},
			{
				"id": "6bfaf8dd-fbbd-4014-9a32-38c06263c506",
				"value": "div:nth-child(even) {\n    background-color: #f2f2f2\n}"
			},
			{
				"id": "fa3ec186-bf05-454a-8220-9e00938fae7b",
				"value": "div:nth-child(odd) {\n    background-color: #f2f2f2\n}"
			},
			{
				"value": "when the screen is 991px wide",
				"id": "fd61dea8-1af4-42e5-851a-55c2c75c9ace"
			},
			{
				"id": "eb0405f2-613b-428f-93bb-be609586738c",
				"value": "when the screen is smaller than 992px"
			},
			{
				"value": ":not(:last-child)",
				"id": "21375381-d724-4bf6-8f4a-8c715a8248ca"
			},
			{
				"value": "React portals",
				"id": "42b6a798-3c7e-4eb8-8e50-1c0ed98ebbd2"
			},
			{
				"value": "With the :`has()` selector",
				"id": "a76318ad-a518-4db0-a980-216553a8253f"
			},
			{
				"value": "<>",
				"id": "5733b807-72f9-434c-b2c7-476930754ec9"
			},
			{
				"id": "4502a4e5-670d-4faf-9efd-50c038aff727",
				"value": "<figure> and <figcaption>"
			}
		],
		"id": "1485f0f7-0f44-4c34-86dc-c0418d0a7c3d",
		"status": "new",
		"voted": [],
		"category": "html",
		"codeBlock": "",
		"type": "radio",
		"openingTime": null,
		"pollNumber": 99,
		"answers": [
			{
				"blockType": "text",
				"value": "<img> and <p>",
				"id": "a36f1286-57a5-4027-aa89-b2b7f594e2d9",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"value": "<picture> and <p>",
				"blockType": "text",
				"id": "5f06a23d-8275-4570-82d6-e4007a3e87cf",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"value": "<figure> and <figcaption>",
				"id": "4502a4e5-670d-4faf-9efd-50c038aff727",
				"blockType": "text",
				"type": "radio"
			},
			{
				"id": "70f89332-66b6-4b90-be4a-bf680d15654c",
				"value": "<img> and <summary>",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"id": "1514eab3-6cbd-4ee4-a324-03092dd228ee",
				"value": "<img> and <span>",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"id": "c2908c6c-706f-476a-a2d7-7e9e7f6a4c47",
				"value": "<img> and <details>",
				"blockType": "text",
				"type": "radio"
			}
		]
	},
	{
		"category": "css",
		"openingTime": null,
		"codeBlock": "",
		"type": "radio",
		"status": "needs-revision",
		"question": "In CSS, invalid code is all around, what will the browser do when invalid code is found?",
		"pollNumber": 98,
		"voted": [],
		"id": "8ca28ebb-1982-4d3e-994f-52283d2bba0e",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{
				"value": "fixed",
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0"
			},
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{
				"value": "<weak>",
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73"
			},
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"value": "Temporal API"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe",
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a",
				"value": "<apple>"
			},
			{
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61",
				"value": "<dbz>"
			},
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{
				"value": "<card>",
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1"
			},
			{
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b",
				"value": "<vue>"
			},
			{
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b",
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there"
			},
			{
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}",
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16"
			},
			{
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }",
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"value": "Methods like call(), apply()and bind() can refer thisto any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"value": "“this” is determined on how a function is called",
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0"
			},
			{
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers"
			},
			{
				"value": "line-height",
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a"
			},
			{
				"value": "Block level elements take the width of the entire row",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary"
			},
			{
				"value": "color",
				"id": "9eadd81b-a378-414a-827b-7c9d105b1ca3"
			},
			{
				"id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc",
				"value": "hidden"
			},
			{
				"id": "db1d4d07-16ed-4031-8fe4-b5f502063844",
				"value": "radio"
			},
			{
				"id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8",
				"value": "reset"
			},
			{
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3",
				"value": "flex-wrap"
			},
			{
				"value": "The margins will collapse, meaning that the margin of the biggest element will win ",
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b"
			},
			{
				"id": "d987a018-4259-438f-8baa-67cb031c3591",
				"value": "debugger"
			},
			{
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f",
				"value": "It occurred because you are trying to call a value as a function but the value is not a function"
			},
			{
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f",
				"value": "block scope"
			},
			{
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a",
				"value": "function scope"
			},
			{
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096",
				"value": "lexical scope"
			},
			{
				"value": "module scope",
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2"
			},
			{
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f",
				"value": "global scope"
			},
			{
				"value": "It is not recommended because it opens a security leak, eval is evil",
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe"
			},
			{
				"value": "ternary operator",
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e"
			},
			{
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5",
				"value": "When you are using TypeScript but don’t really need the types"
			},
			{
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a",
				"value": "When you’re working on simple/small applications (<1000 lines of code)"
			},
			{
				"value": "When run-time errors are contextually more informative (depends on the project)",
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76"
			},
			{
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1",
				"value": "When your codebase is at a level it needs flexibility at every level"
			},
			{
				"value": "When your “Navi” intellisense suggests “any” ",
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713"
			},
			{
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15",
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story"
			},
			{
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)",
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913"
			},
			{
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly",
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b"
			},
			{
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5",
				"value": "Optimistic UI"
			},
			{
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2",
				"value": "<noscript>"
			},
			{
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914",
				"value": "Strawperson > Proposal > Draft > Candidate > Finished"
			},
			{
				"value": "LocalStorage persists across browsers",
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304"
			},
			{
				"id": "14000f03-3405-4e5e-b231-81b45faa6654",
				"value": "SessionStorage will be removed when a browser is closed"
			},
			{
				"value": "^",
				"id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c"
			},
			{
				"value": "When writing directions (foreign languages) matter ",
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264"
			},
			{
				"value": "try",
				"id": "04cfe937-2a1c-4e21-adf4-949835c0d764"
			},
			{
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14",
				"value": "finally"
			},
			{
				"id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3",
				"value": "throw"
			},
			{
				"value": "Semantic tags are important for users with screen readers",
				"id": "7767b333-639a-40e7-904d-158fe4127d37"
			},
			{
				"id": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450",
				"value": "Semantic tags show developer’s intent"
			},
			{
				"value": ".map doesn’t run when the array is empty",
				"id": "8c26881c-c657-4e4a-a454-635e6b3a4d62"
			},
			{
				"value": "When you have heavy computations doing the same thing ",
				"id": "7d065da6-592b-4283-8438-18d90ec2f0b6"
			},
			{
				"id": "c8582033-1847-4175-99bd-d02ea8819c9b",
				"value": "Nothing: You can perfectly do this request"
			},
			{
				"value": "It builds confidence in your code because you can run it whenever you make changes in code",
				"id": "6ae45a37-d353-4d95-8c94-c516c45b431c"
			},
			{
				"value": "Lifting state up",
				"id": "314a6b8f-b5f0-443e-adab-d2b36587befc"
			},
			{
				"value": "accent-color",
				"id": "bf70be23-42b6-4ab8-bde7-f961bd5ca747"
			},
			{
				"value": "jsx",
				"id": "4cea1053-afcb-4661-844f-8ed4ed3a3af4"
			},
			{
				"value": "div:nth-child(even) {\n    background-color: #f2f2f2\n}",
				"id": "6bfaf8dd-fbbd-4014-9a32-38c06263c506"
			},
			{
				"value": "div:nth-child(odd) {\n    background-color: #f2f2f2\n}",
				"id": "fa3ec186-bf05-454a-8220-9e00938fae7b"
			},
			{
				"id": "fd61dea8-1af4-42e5-851a-55c2c75c9ace",
				"value": "when the screen is 991px wide"
			},
			{
				"value": "when the screen is smaller than 992px",
				"id": "eb0405f2-613b-428f-93bb-be609586738c"
			},
			{
				"id": "21375381-d724-4bf6-8f4a-8c715a8248ca",
				"value": ":not(:last-child)"
			},
			{
				"id": "42b6a798-3c7e-4eb8-8e50-1c0ed98ebbd2",
				"value": "React portals"
			},
			{
				"value": "With the :`has()` selector",
				"id": "a76318ad-a518-4db0-a980-216553a8253f"
			},
			{
				"id": "5733b807-72f9-434c-b2c7-476930754ec9",
				"value": "<>"
			},
			{
				"id": "a36f1286-57a5-4027-aa89-b2b7f594e2d9",
				"value": "Happily render your CSS and leave the faulty code"
			}
		],
		"answers": [
			{
				"placeholder": "Add option",
				"id": "a36f1286-57a5-4027-aa89-b2b7f594e2d9",
				"value": "Happily render your CSS and leave the faulty code",
				"blockType": "text",
				"type": "radio"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"value": "It will throw an error and crash",
				"blockType": "text",
				"id": "5f06a23d-8275-4570-82d6-e4007a3e87cf"
			},
			{
				"type": "radio",
				"blockType": "text",
				"id": "4502a4e5-670d-4faf-9efd-50c038aff727",
				"placeholder": "Add option",
				"value": "It will mess up the styling of your page"
			},
			{
				"value": "Guess the nearest correct value and apply that ",
				"blockType": "text",
				"id": "70f89332-66b6-4b90-be4a-bf680d15654c",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"blockType": "text",
				"id": "1514eab3-6cbd-4ee4-a324-03092dd228ee",
				"value": "Nothing will happen ",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"id": "c2908c6c-706f-476a-a2d7-7e9e7f6a4c47",
				"blockType": "text",
				"type": "radio",
				"value": "The element with the applied faulty styles will automatically be hidden with display none to prevent erronous styling",
				"placeholder": "Add option"
			}
		]
	},
	{
		"type": "radio",
		"id": "0cacbb6c-68e6-4411-93d8-02a47a812e01",
		"question": "In HTML, alt tags provide descriptions of an image you know It well, what is a valid reason to leave it blank, can you tell?",
		"openingTime": null,
		"category": "html",
		"status": "new",
		"answers": [
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": "It should always be filled in ",
				"type": "radio",
				"id": "a36f1286-57a5-4027-aa89-b2b7f594e2d9"
			},
			{
				"id": "5f06a23d-8275-4570-82d6-e4007a3e87cf",
				"blockType": "text",
				"type": "radio",
				"value": "When the backend is not done yet or didn’t provide an alt text",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"type": "radio",
				"value": "When the content marketeer forgot or decided to leave the image alt text from within the CMS empty ",
				"placeholder": "Add option",
				"id": "4502a4e5-670d-4faf-9efd-50c038aff727"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"id": "70f89332-66b6-4b90-be4a-bf680d15654c",
				"value": "When you don’t have to focus on accessibilty",
				"type": "radio"
			},
			{
				"type": "radio",
				"id": "1514eab3-6cbd-4ee4-a324-03092dd228ee",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "When the image is purely decorative"
			},
			{
				"value": "When you lack an idea for an alt text (also applicable to variable naming)",
				"id": "c2908c6c-706f-476a-a2d7-7e9e7f6a4c47",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"value": "When there is a <p> describing the image",
				"id": "751bcbd0-0332-41bb-981f-df74c1208fd3"
			}
		],
		"voted": [],
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{
				"value": "fixed",
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0"
			},
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{
				"value": "<weak>",
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73"
			},
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe",
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			},
			{
				"value": "The effect is an infinite loop, due to circularity ",
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a"
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{
				"value": "<dbz>",
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61"
			},
			{
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d",
				"value": "<react>"
			},
			{
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1",
				"value": "<card>"
			},
			{
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b",
				"value": "<vue>"
			},
			{
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b",
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }",
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9"
			},
			{
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e",
				"value": "arrow functions doesn’t have a “this” context"
			},
			{
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3",
				"value": "Methods like call(), apply()and bind() can refer thisto any object"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			},
			{
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers"
			},
			{
				"value": "line-height",
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a"
			},
			{
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d",
				"value": "Block level elements take the width of the entire row"
			},
			{
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary"
			},
			{
				"value": "color",
				"id": "9eadd81b-a378-414a-827b-7c9d105b1ca3"
			},
			{
				"value": "hidden",
				"id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc"
			},
			{
				"value": "radio",
				"id": "db1d4d07-16ed-4031-8fe4-b5f502063844"
			},
			{
				"value": "reset",
				"id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8"
			},
			{
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3",
				"value": "flex-wrap"
			},
			{
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b",
				"value": "The margins will collapse, meaning that the margin of the biggest element will win "
			},
			{
				"id": "d987a018-4259-438f-8baa-67cb031c3591",
				"value": "debugger"
			},
			{
				"value": "It occurred because you are trying to call a value as a function but the value is not a function",
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f"
			},
			{
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f",
				"value": "block scope"
			},
			{
				"value": "function scope",
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a"
			},
			{
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096",
				"value": "lexical scope"
			},
			{
				"value": "module scope",
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2"
			},
			{
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f",
				"value": "global scope"
			},
			{
				"value": "It is not recommended because it opens a security leak, eval is evil",
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe"
			},
			{
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e",
				"value": "ternary operator"
			},
			{
				"value": "When you are using TypeScript but don’t really need the types",
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5"
			},
			{
				"value": "When you’re working on simple/small applications (<1000 lines of code)",
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a"
			},
			{
				"value": "When run-time errors are contextually more informative (depends on the project)",
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76"
			},
			{
				"value": "When your codebase is at a level it needs flexibility at every level",
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1"
			},
			{
				"value": "When your “Navi” intellisense suggests “any” ",
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713"
			},
			{
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story",
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15"
			},
			{
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913",
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)"
			},
			{
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b",
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly"
			},
			{
				"value": "Optimistic UI",
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5"
			},
			{
				"value": "<noscript>",
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2"
			},
			{
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914",
				"value": "Strawperson > Proposal > Draft > Candidate > Finished"
			},
			{
				"value": "LocalStorage persists across browsers",
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304"
			},
			{
				"value": "SessionStorage will be removed when a browser is closed",
				"id": "14000f03-3405-4e5e-b231-81b45faa6654"
			},
			{
				"value": "^",
				"id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c"
			},
			{
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264",
				"value": "When writing directions (foreign languages) matter "
			},
			{
				"value": "try",
				"id": "04cfe937-2a1c-4e21-adf4-949835c0d764"
			},
			{
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14",
				"value": "finally"
			},
			{
				"value": "throw",
				"id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3"
			},
			{
				"id": "7767b333-639a-40e7-904d-158fe4127d37",
				"value": "Semantic tags are important for users with screen readers"
			},
			{
				"id": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450",
				"value": "Semantic tags show developer’s intent"
			},
			{
				"value": ".map doesn’t run when the array is empty",
				"id": "8c26881c-c657-4e4a-a454-635e6b3a4d62"
			},
			{
				"value": "When you have heavy computations doing the same thing ",
				"id": "7d065da6-592b-4283-8438-18d90ec2f0b6"
			},
			{
				"value": "Nothing: You can perfectly do this request",
				"id": "c8582033-1847-4175-99bd-d02ea8819c9b"
			},
			{
				"value": "It builds confidence in your code because you can run it whenever you make changes in code",
				"id": "6ae45a37-d353-4d95-8c94-c516c45b431c"
			},
			{
				"id": "314a6b8f-b5f0-443e-adab-d2b36587befc",
				"value": "Lifting state up"
			},
			{
				"id": "bf70be23-42b6-4ab8-bde7-f961bd5ca747",
				"value": "accent-color"
			},
			{
				"value": "jsx",
				"id": "4cea1053-afcb-4661-844f-8ed4ed3a3af4"
			},
			{
				"value": "div:nth-child(even) {\n    background-color: #f2f2f2\n}",
				"id": "6bfaf8dd-fbbd-4014-9a32-38c06263c506"
			},
			{
				"value": "div:nth-child(odd) {\n    background-color: #f2f2f2\n}",
				"id": "fa3ec186-bf05-454a-8220-9e00938fae7b"
			},
			{
				"value": "when the screen is 991px wide",
				"id": "fd61dea8-1af4-42e5-851a-55c2c75c9ace"
			},
			{
				"id": "eb0405f2-613b-428f-93bb-be609586738c",
				"value": "when the screen is smaller than 992px"
			},
			{
				"id": "21375381-d724-4bf6-8f4a-8c715a8248ca",
				"value": ":not(:last-child)"
			},
			{
				"value": "React portals",
				"id": "42b6a798-3c7e-4eb8-8e50-1c0ed98ebbd2"
			},
			{
				"id": "a76318ad-a518-4db0-a980-216553a8253f",
				"value": "With the :`has()` selector"
			},
			{
				"value": "<>",
				"id": "5733b807-72f9-434c-b2c7-476930754ec9"
			},
			{
				"value": "When the image is purely decorative",
				"id": "1514eab3-6cbd-4ee4-a324-03092dd228ee"
			}
		],
		"pollNumber": 97,
		"codeBlock": ""
	},
	{
		"pollNumber": 96,
		"codeBlock": "",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{
				"value": "fixed",
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0"
			},
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73",
				"value": "<weak>"
			},
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"value": "Temporal API"
			},
			{
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"value": "The effect is an infinite loop, due to circularity ",
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a"
			},
			{
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a",
				"value": "<apple>"
			},
			{
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61",
				"value": "<dbz>"
			},
			{
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d",
				"value": "<react>"
			},
			{
				"value": "<card>",
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1"
			},
			{
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b",
				"value": "<vue>"
			},
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}",
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"value": "Methods like call(), apply()and bind() can refer thisto any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			},
			{
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers"
			},
			{
				"value": "line-height",
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a"
			},
			{
				"value": "Block level elements take the width of the entire row",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary",
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694"
			},
			{
				"value": "color",
				"id": "9eadd81b-a378-414a-827b-7c9d105b1ca3"
			},
			{
				"value": "hidden",
				"id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc"
			},
			{
				"value": "radio",
				"id": "db1d4d07-16ed-4031-8fe4-b5f502063844"
			},
			{
				"id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8",
				"value": "reset"
			},
			{
				"value": "flex-wrap",
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3"
			},
			{
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b",
				"value": "The margins will collapse, meaning that the margin of the biggest element will win "
			},
			{
				"id": "d987a018-4259-438f-8baa-67cb031c3591",
				"value": "debugger"
			},
			{
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f",
				"value": "It occurred because you are trying to call a value as a function but the value is not a function"
			},
			{
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f",
				"value": "block scope"
			},
			{
				"value": "function scope",
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a"
			},
			{
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096",
				"value": "lexical scope"
			},
			{
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2",
				"value": "module scope"
			},
			{
				"value": "global scope",
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f"
			},
			{
				"value": "It is not recommended because it opens a security leak, eval is evil",
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe"
			},
			{
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e",
				"value": "ternary operator"
			},
			{
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5",
				"value": "When you are using TypeScript but don’t really need the types"
			},
			{
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a",
				"value": "When you’re working on simple/small applications (<1000 lines of code)"
			},
			{
				"value": "When run-time errors are contextually more informative (depends on the project)",
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76"
			},
			{
				"value": "When your codebase is at a level it needs flexibility at every level",
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1"
			},
			{
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713",
				"value": "When your “Navi” intellisense suggests “any” "
			},
			{
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story",
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15"
			},
			{
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913",
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)"
			},
			{
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b",
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly"
			},
			{
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5",
				"value": "Optimistic UI"
			},
			{
				"value": "<noscript>",
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2"
			},
			{
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914",
				"value": "Strawperson > Proposal > Draft > Candidate > Finished"
			},
			{
				"value": "LocalStorage persists across browsers",
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304"
			},
			{
				"id": "14000f03-3405-4e5e-b231-81b45faa6654",
				"value": "SessionStorage will be removed when a browser is closed"
			},
			{
				"value": "^",
				"id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c"
			},
			{
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264",
				"value": "When writing directions (foreign languages) matter "
			},
			{
				"id": "04cfe937-2a1c-4e21-adf4-949835c0d764",
				"value": "try"
			},
			{
				"value": "finally",
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14"
			},
			{
				"id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3",
				"value": "throw"
			},
			{
				"value": "Semantic tags are important for users with screen readers",
				"id": "7767b333-639a-40e7-904d-158fe4127d37"
			},
			{
				"value": "Semantic tags show developer’s intent",
				"id": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450"
			},
			{
				"id": "8c26881c-c657-4e4a-a454-635e6b3a4d62",
				"value": ".map doesn’t run when the array is empty"
			},
			{
				"value": "When you have heavy computations doing the same thing ",
				"id": "7d065da6-592b-4283-8438-18d90ec2f0b6"
			},
			{
				"id": "c8582033-1847-4175-99bd-d02ea8819c9b",
				"value": "Nothing: You can perfectly do this request"
			},
			{
				"value": "It builds confidence in your code because you can run it whenever you make changes in code",
				"id": "6ae45a37-d353-4d95-8c94-c516c45b431c"
			},
			{
				"value": "Lifting state up",
				"id": "314a6b8f-b5f0-443e-adab-d2b36587befc"
			},
			{
				"value": "accent-color",
				"id": "bf70be23-42b6-4ab8-bde7-f961bd5ca747"
			},
			{
				"id": "4cea1053-afcb-4661-844f-8ed4ed3a3af4",
				"value": "jsx"
			},
			{
				"id": "6bfaf8dd-fbbd-4014-9a32-38c06263c506",
				"value": "div:nth-child(even) {\n    background-color: #f2f2f2\n}"
			},
			{
				"id": "fa3ec186-bf05-454a-8220-9e00938fae7b",
				"value": "div:nth-child(odd) {\n    background-color: #f2f2f2\n}"
			},
			{
				"id": "fd61dea8-1af4-42e5-851a-55c2c75c9ace",
				"value": "when the screen is 991px wide"
			},
			{
				"value": "when the screen is smaller than 992px",
				"id": "eb0405f2-613b-428f-93bb-be609586738c"
			},
			{
				"value": ":not(:last-child)",
				"id": "21375381-d724-4bf6-8f4a-8c715a8248ca"
			},
			{
				"value": "React portals",
				"id": "42b6a798-3c7e-4eb8-8e50-1c0ed98ebbd2"
			},
			{
				"value": "With the :`has()` selector",
				"id": "a76318ad-a518-4db0-a980-216553a8253f"
			},
			{
				"value": "You need an HTML tag ",
				"id": "70f89332-66b6-4b90-be4a-bf680d15654c"
			},
			{
				"value": "<Fragment>",
				"id": "a36f1286-57a5-4027-aa89-b2b7f594e2d9"
			},
			{
				"id": "5733b807-72f9-434c-b2c7-476930754ec9",
				"value": "<>"
			}
		],
		"type": "checkbox",
		"question": "In React, sibling elements need to be wrapped, how can you do this and make your code scrapped?",
		"id": "27258d62-08d9-47fd-8faa-19f0e09d0b4e",
		"openingTime": null,
		"answers": [
			{
				"placeholder": "Add option",
				"id": "6f3b895a-289c-435d-801e-4a55c28529fe",
				"value": "<Fragola>",
				"blockType": "text",
				"type": "radio"
			},
			{
				"blockType": "text",
				"id": "5733b807-72f9-434c-b2c7-476930754ec9",
				"type": "radio",
				"value": "<>",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"value": "<Family>",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "1a19c3a2-a940-409e-b3cd-7031eada3352"
			},
			{
				"blockType": "text",
				"type": "radio",
				"id": "d0df44e6-b525-4e82-a91f-68da9af43d13",
				"value": "<Fragile>",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": "<..>",
				"type": "radio",
				"id": "e36ab87a-b232-407c-afe3-3991d4a1b98e"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"id": "85a40e79-268e-4781-8274-8bfb24b2d9db",
				"value": "<Wrapper>"
			},
			{
				"value": "<Frag>",
				"placeholder": "Add option",
				"id": "0d710981-1d53-40ea-88a5-8ecdc61e9039",
				"type": "radio",
				"blockType": "text"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"value": "<Fragrance>",
				"blockType": "text",
				"id": "6ad551c9-bc17-4a10-90e2-ba543b26e4f1"
			},
			{
				"blockType": "text",
				"value": "<Fragment>",
				"id": "a36f1286-57a5-4027-aa89-b2b7f594e2d9",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "5f06a23d-8275-4570-82d6-e4007a3e87cf",
				"value": "Sibling elements don’t need to be wrapped"
			},
			{
				"value": "<Group>",
				"id": "4502a4e5-670d-4faf-9efd-50c038aff727",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"id": "70f89332-66b6-4b90-be4a-bf680d15654c",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"value": "You need an HTML tag "
			}
		],
		"category": "react",
		"status": "new",
		"voted": []
	},
	{
		"id": "7b5df81b-b8c8-4470-910f-adb0443cbc88",
		"voted": [],
		"answers": [
			{
				"value": "It doesn’t render, you need the `return`statement",
				"placeholder": "Add option",
				"id": "6f3b895a-289c-435d-801e-4a55c28529fe",
				"type": "radio",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"type": "radio",
				"value": "It does render, this is implicit return",
				"placeholder": "Add option",
				"id": "5733b807-72f9-434c-b2c7-476930754ec9"
			},
			{
				"value": "It doesn’t render because a render function is required",
				"blockType": "text",
				"type": "radio",
				"id": "1a19c3a2-a940-409e-b3cd-7031eada3352",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"id": "d0df44e6-b525-4e82-a91f-68da9af43d13",
				"value": "It doesn’t render because the JSX element is empty",
				"type": "radio"
			},
			{
				"type": "radio",
				"id": "e36ab87a-b232-407c-afe3-3991d4a1b98e",
				"placeholder": "Add option",
				"value": "It does’t render because it is not wrapped in a fragment",
				"blockType": "text"
			},
			{
				"value": "It doesn’t render because custom components need to explicitly render “children“",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "85a40e79-268e-4781-8274-8bfb24b2d9db",
				"type": "radio"
			},
			{
				"blockType": "text",
				"type": "radio",
				"id": "0d710981-1d53-40ea-88a5-8ecdc61e9039",
				"placeholder": "Add option",
				"value": "It does render because also empty JSX tags render"
			},
			{
				"id": "6ad551c9-bc17-4a10-90e2-ba543b26e4f1",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "It doesn’t render because it has no props"
			}
		],
		"type": "radio",
		"codeBlock": "const Heading = () => {\n   <ul></ul>\n}",
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0",
				"value": "fixed"
			},
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{
				"value": "<weak>",
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73"
			},
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url"
			},
			{
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe",
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{
				"value": "<dbz>",
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61"
			},
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{
				"value": "<card>",
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1"
			},
			{
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b",
				"value": "<vue>"
			},
			{
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b",
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }",
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3",
				"value": "Methods like call(), apply()and bind() can refer thisto any object"
			},
			{
				"value": "“this” is determined on how a function is called",
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0"
			},
			{
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers",
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65"
			},
			{
				"value": "line-height",
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a"
			},
			{
				"value": "Block level elements take the width of the entire row",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary",
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694"
			},
			{
				"value": "color",
				"id": "9eadd81b-a378-414a-827b-7c9d105b1ca3"
			},
			{
				"id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc",
				"value": "hidden"
			},
			{
				"value": "radio",
				"id": "db1d4d07-16ed-4031-8fe4-b5f502063844"
			},
			{
				"id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8",
				"value": "reset"
			},
			{
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3",
				"value": "flex-wrap"
			},
			{
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b",
				"value": "The margins will collapse, meaning that the margin of the biggest element will win "
			},
			{
				"value": "debugger",
				"id": "d987a018-4259-438f-8baa-67cb031c3591"
			},
			{
				"value": "It occurred because you are trying to call a value as a function but the value is not a function",
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f"
			},
			{
				"value": "block scope",
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f"
			},
			{
				"value": "function scope",
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a"
			},
			{
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096",
				"value": "lexical scope"
			},
			{
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2",
				"value": "module scope"
			},
			{
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f",
				"value": "global scope"
			},
			{
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe",
				"value": "It is not recommended because it opens a security leak, eval is evil"
			},
			{
				"value": "ternary operator",
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e"
			},
			{
				"value": "When you are using TypeScript but don’t really need the types",
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5"
			},
			{
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a",
				"value": "When you’re working on simple/small applications (<1000 lines of code)"
			},
			{
				"value": "When run-time errors are contextually more informative (depends on the project)",
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76"
			},
			{
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1",
				"value": "When your codebase is at a level it needs flexibility at every level"
			},
			{
				"value": "When your “Navi” intellisense suggests “any” ",
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713"
			},
			{
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15",
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story"
			},
			{
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)",
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913"
			},
			{
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly",
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b"
			},
			{
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5",
				"value": "Optimistic UI"
			},
			{
				"value": "<noscript>",
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2"
			},
			{
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914",
				"value": "Strawperson > Proposal > Draft > Candidate > Finished"
			},
			{
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304",
				"value": "LocalStorage persists across browsers"
			},
			{
				"value": "SessionStorage will be removed when a browser is closed",
				"id": "14000f03-3405-4e5e-b231-81b45faa6654"
			},
			{
				"id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c",
				"value": "^"
			},
			{
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264",
				"value": "When writing directions (foreign languages) matter "
			},
			{
				"value": "try",
				"id": "04cfe937-2a1c-4e21-adf4-949835c0d764"
			},
			{
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14",
				"value": "finally"
			},
			{
				"id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3",
				"value": "throw"
			},
			{
				"value": "Semantic tags are important for users with screen readers",
				"id": "7767b333-639a-40e7-904d-158fe4127d37"
			},
			{
				"value": "Semantic tags show developer’s intent",
				"id": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450"
			},
			{
				"id": "8c26881c-c657-4e4a-a454-635e6b3a4d62",
				"value": ".map doesn’t run when the array is empty"
			},
			{
				"value": "When you have heavy computations doing the same thing ",
				"id": "7d065da6-592b-4283-8438-18d90ec2f0b6"
			},
			{
				"value": "Nothing: You can perfectly do this request",
				"id": "c8582033-1847-4175-99bd-d02ea8819c9b"
			},
			{
				"id": "6ae45a37-d353-4d95-8c94-c516c45b431c",
				"value": "It builds confidence in your code because you can run it whenever you make changes in code"
			},
			{
				"value": "Lifting state up",
				"id": "314a6b8f-b5f0-443e-adab-d2b36587befc"
			},
			{
				"value": "accent-color",
				"id": "bf70be23-42b6-4ab8-bde7-f961bd5ca747"
			},
			{
				"id": "4cea1053-afcb-4661-844f-8ed4ed3a3af4",
				"value": "jsx"
			},
			{
				"id": "6bfaf8dd-fbbd-4014-9a32-38c06263c506",
				"value": "div:nth-child(even) {\n    background-color: #f2f2f2\n}"
			},
			{
				"value": "div:nth-child(odd) {\n    background-color: #f2f2f2\n}",
				"id": "fa3ec186-bf05-454a-8220-9e00938fae7b"
			},
			{
				"value": "when the screen is 991px wide",
				"id": "fd61dea8-1af4-42e5-851a-55c2c75c9ace"
			},
			{
				"value": "when the screen is smaller than 992px",
				"id": "eb0405f2-613b-428f-93bb-be609586738c"
			},
			{
				"value": ":not(:last-child)",
				"id": "21375381-d724-4bf6-8f4a-8c715a8248ca"
			},
			{
				"id": "42b6a798-3c7e-4eb8-8e50-1c0ed98ebbd2",
				"value": "React portals"
			},
			{
				"id": "a76318ad-a518-4db0-a980-216553a8253f",
				"value": "With the :`has()` selector"
			},
			{
				"id": "6f3b895a-289c-435d-801e-4a55c28529fe",
				"value": "It doesn’t render, you need the `return`statement"
			}
		],
		"question": "In React, the following code can be seen, why will it not render anything on the screen? ",
		"status": "needs-revision",
		"pollNumber": 95,
		"openingTime": null,
		"category": "react"
	},
	{
		"correctAnswers": [
			{
				"value": "With the `:has()` selector",
				"id": "a76318ad-a518-4db0-a980-216553a8253f"
			}
		],
		"question": "In CSS, selecting parent elements from within a child is something we all plead, now with what syntax can we achieve this need? ",
		"openingTime": 1663579990982,
		"category": "css",
		"status": "closed",
		"id": "2d83bcf5-56dc-4de5-8ed7-495418c82f1f",
		"type": "radio",
		"codeBlock": "",
		"pollNumber": 94,
		"voted": [
			{
				"answerId": "a76318ad-a518-4db0-a980-216553a8253f",
				"userId": "GxloHn9wFkRFYYHXSuTj56kXd0q2"
			},
			{
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1",
				"answerId": "a76318ad-a518-4db0-a980-216553a8253f"
			},
			{
				"answerId": "a76318ad-a518-4db0-a980-216553a8253f",
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292"
			},
			{
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2",
				"answerId": "a76318ad-a518-4db0-a980-216553a8253f"
			},
			{
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1",
				"answerId": "f7872e01-b193-44df-af93-5737663c3cea"
			},
			{
				"userId": "btmzQ2h02aa7NwgpOFMGvGSgcv62",
				"answerId": "a76318ad-a518-4db0-a980-216553a8253f"
			},
			{
				"userId": "kfrkjsbashYfl1sD2PgVGXcpND63",
				"answerId": "a76318ad-a518-4db0-a980-216553a8253f"
			},
			{
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2",
				"answerId": "a76318ad-a518-4db0-a980-216553a8253f"
			},
			{
				"answerId": "a76318ad-a518-4db0-a980-216553a8253f",
				"userId": "qBHCpnXFOLZsdzcHbKzvkqP6Uck1"
			},
			{
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3",
				"answerId": "a76318ad-a518-4db0-a980-216553a8253f"
			}
		],
		"answers": [
			{
				"blockType": "text",
				"placeholder": "Add option",
				"value": "With the `:has()` selector",
				"type": "radio",
				"id": "a76318ad-a518-4db0-a980-216553a8253f"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"id": "f7872e01-b193-44df-af93-5737663c3cea",
				"value": "Only possible when using SASS"
			},
			{
				"type": "radio",
				"blockType": "text",
				"value": "With the `:is()` selector",
				"id": "6a325d2d-2892-4a17-9b28-409cbede9dda",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"type": "radio",
				"value": "With the `:parent()` selector",
				"placeholder": "Add option",
				"id": "31667a5b-1800-4029-a6e3-cf8415f9db1b"
			},
			{
				"value": "With the `<` parent combinator",
				"blockType": "text",
				"id": "6f3b895a-289c-435d-801e-4a55c28529fe",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"blockType": "text",
				"value": "JS in at least required for this",
				"id": "5733b807-72f9-434c-b2c7-476930754ec9",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"value": "With the lobotomized owl * + * selector",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "1a19c3a2-a940-409e-b3cd-7031eada3352"
			}
		]
	},
	{
		"answers": [
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "ee6f4eb7-eefa-4e03-b4af-bb17ba720893",
				"blockType": "text",
				"value": "By having a well-thought of z-index system from the start "
			},
			{
				"value": "z-index: 999999 !important",
				"blockType": "code",
				"placeholder": "Add option",
				"id": "088a9051-a7ac-47fb-ae24-12273b1822db",
				"type": "radio"
			},
			{
				"blockType": "text",
				"type": "radio",
				"value": "findDomNode",
				"placeholder": "Add option",
				"id": "2212308e-b29a-4462-8923-eef9504007a4"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": "Microfrontends",
				"id": "88a1b79b-5872-4875-a1b8-ace934d1e7b4",
				"type": "radio"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "86ee6730-ab47-4642-85e0-24cb617708f9",
				"value": "React refs"
			},
			{
				"blockType": "text",
				"value": "Controlling z-indexes from your react component with css in js or style tags",
				"type": "radio",
				"placeholder": "Add option",
				"id": "fbe9594e-d27d-468c-83b7-90a6b2da7c6c"
			},
			{
				"type": "radio",
				"blockType": "text",
				"id": "34cf86e6-a785-44af-b932-15c2c1e4408d",
				"value": "React Context",
				"placeholder": "Add option"
			},
			{
				"value": "React portals",
				"id": "42b6a798-3c7e-4eb8-8e50-1c0ed98ebbd2",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"type": "radio",
				"id": "9e8935b8-0645-4be3-9585-70266456ba92",
				"placeholder": "Add option",
				"value": "By passing an optional parameter at mount in useEffect to render the component somewhere in the tree",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"value": "By using position absolute for every component you create so layering can be controlled per component",
				"id": "c6c924e2-7b5b-4568-919b-0ee87ce1b40f"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"value": "By using CSS flexbox order property",
				"id": "a086288b-981f-4dcb-b7c4-9ddd4385dfd4",
				"type": "radio"
			},
			{
				"value": "Believe it or not, but this is sadly still a web limititation: in CSS4 there will be a property `stacking-order` for it",
				"placeholder": "Add option",
				"type": "radio",
				"id": "f53be365-3997-4b00-8910-51d77aeb9f13",
				"blockType": "text"
			},
			{
				"id": "a76318ad-a518-4db0-a980-216553a8253f",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"value": "React Suspense"
			}
		],
		"openingTime": 1664437864662,
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0",
				"value": "fixed"
			},
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{
				"value": "<weak>",
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73"
			},
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"value": "Temporal API"
			},
			{
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61",
				"value": "<dbz>"
			},
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{
				"value": "<card>",
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1"
			},
			{
				"value": "<vue>",
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b"
			},
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			},
			{
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e",
				"value": "arrow functions doesn’t have a “this” context"
			},
			{
				"value": "Methods like call(), apply()and bind() can refer thisto any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			},
			{
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers"
			},
			{
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a",
				"value": "line-height"
			},
			{
				"value": "Block level elements take the width of the entire row",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary",
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694"
			},
			{
				"value": "color",
				"id": "9eadd81b-a378-414a-827b-7c9d105b1ca3"
			},
			{
				"id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc",
				"value": "hidden"
			},
			{
				"id": "db1d4d07-16ed-4031-8fe4-b5f502063844",
				"value": "radio"
			},
			{
				"id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8",
				"value": "reset"
			},
			{
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3",
				"value": "flex-wrap"
			},
			{
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b",
				"value": "The margins will collapse, meaning that the margin of the biggest element will win "
			},
			{
				"id": "d987a018-4259-438f-8baa-67cb031c3591",
				"value": "debugger"
			},
			{
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f",
				"value": "It occurred because you are trying to call a value as a function but the value is not a function"
			},
			{
				"value": "block scope",
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f"
			},
			{
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a",
				"value": "function scope"
			},
			{
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096",
				"value": "lexical scope"
			},
			{
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2",
				"value": "module scope"
			},
			{
				"value": "global scope",
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f"
			},
			{
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe",
				"value": "It is not recommended because it opens a security leak, eval is evil"
			},
			{
				"value": "ternary operator",
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e"
			},
			{
				"value": "When you are using TypeScript but don’t really need the types",
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5"
			},
			{
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a",
				"value": "When you’re working on simple/small applications (<1000 lines of code)"
			},
			{
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76",
				"value": "When run-time errors are contextually more informative (depends on the project)"
			},
			{
				"value": "When your codebase is at a level it needs flexibility at every level",
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1"
			},
			{
				"value": "When your “Navi” intellisense suggests “any” ",
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713"
			},
			{
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story",
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15"
			},
			{
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)",
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913"
			},
			{
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly",
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b"
			},
			{
				"value": "Optimistic UI",
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5"
			},
			{
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2",
				"value": "<noscript>"
			},
			{
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914",
				"value": "Strawperson > Proposal > Draft > Candidate > Finished"
			},
			{
				"value": "LocalStorage persists across browsers",
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304"
			},
			{
				"id": "14000f03-3405-4e5e-b231-81b45faa6654",
				"value": "SessionStorage will be removed when a browser is closed"
			},
			{
				"id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c",
				"value": "^"
			},
			{
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264",
				"value": "When writing directions (foreign languages) matter "
			},
			{
				"id": "04cfe937-2a1c-4e21-adf4-949835c0d764",
				"value": "try"
			},
			{
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14",
				"value": "finally"
			},
			{
				"value": "throw",
				"id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3"
			},
			{
				"value": "Semantic tags are important for users with screen readers",
				"id": "7767b333-639a-40e7-904d-158fe4127d37"
			},
			{
				"id": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450",
				"value": "Semantic tags show developer’s intent"
			},
			{
				"id": "8c26881c-c657-4e4a-a454-635e6b3a4d62",
				"value": ".map doesn’t run when the array is empty"
			},
			{
				"id": "7d065da6-592b-4283-8438-18d90ec2f0b6",
				"value": "When you have heavy computations doing the same thing "
			},
			{
				"id": "c8582033-1847-4175-99bd-d02ea8819c9b",
				"value": "Nothing: You can perfectly do this request"
			},
			{
				"value": "It builds confidence in your code because you can run it whenever you make changes in code",
				"id": "6ae45a37-d353-4d95-8c94-c516c45b431c"
			},
			{
				"id": "314a6b8f-b5f0-443e-adab-d2b36587befc",
				"value": "Lifting state up"
			},
			{
				"value": "accent-color",
				"id": "bf70be23-42b6-4ab8-bde7-f961bd5ca747"
			},
			{
				"value": "jsx",
				"id": "4cea1053-afcb-4661-844f-8ed4ed3a3af4"
			},
			{
				"id": "6bfaf8dd-fbbd-4014-9a32-38c06263c506",
				"value": "div:nth-child(even) {\n    background-color: #f2f2f2\n}"
			},
			{
				"id": "fa3ec186-bf05-454a-8220-9e00938fae7b",
				"value": "div:nth-child(odd) {\n    background-color: #f2f2f2\n}"
			},
			{
				"value": "when the screen is 991px wide",
				"id": "fd61dea8-1af4-42e5-851a-55c2c75c9ace"
			},
			{
				"id": "eb0405f2-613b-428f-93bb-be609586738c",
				"value": "when the screen is smaller than 992px"
			},
			{
				"value": ":not(:last-child)",
				"id": "21375381-d724-4bf6-8f4a-8c715a8248ca"
			},
			{
				"id": "42b6a798-3c7e-4eb8-8e50-1c0ed98ebbd2",
				"value": "React portals"
			}
		],
		"voted": [
			{
				"answerId": "ee6f4eb7-eefa-4e03-b4af-bb17ba720893",
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2"
			},
			{
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1",
				"answerId": "ee6f4eb7-eefa-4e03-b4af-bb17ba720893"
			},
			{
				"answerId": "34cf86e6-a785-44af-b932-15c2c1e4408d",
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292"
			},
			{
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2",
				"answerId": "42b6a798-3c7e-4eb8-8e50-1c0ed98ebbd2"
			},
			{
				"userId": "qBHCpnXFOLZsdzcHbKzvkqP6Uck1",
				"answerId": "88a1b79b-5872-4875-a1b8-ace934d1e7b4"
			},
			{
				"answerId": "fbe9594e-d27d-468c-83b7-90a6b2da7c6c",
				"userId": "B762i26QM7Y275I0w2uAtklg3Gx1"
			},
			{
				"answerId": "34cf86e6-a785-44af-b932-15c2c1e4408d",
				"userId": "aWI6X9i1RugALHJ7ILr8Xp4baIW2"
			},
			{
				"userId": "GxloHn9wFkRFYYHXSuTj56kXd0q2",
				"answerId": "34cf86e6-a785-44af-b932-15c2c1e4408d"
			},
			{
				"userId": "kfrkjsbashYfl1sD2PgVGXcpND63",
				"answerId": "42b6a798-3c7e-4eb8-8e50-1c0ed98ebbd2"
			},
			{
				"userId": "y0Vb464iCdeVzfBJBZzCjCIZIi72",
				"answerId": "fbe9594e-d27d-468c-83b7-90a6b2da7c6c"
			},
			{
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1",
				"answerId": "f53be365-3997-4b00-8910-51d77aeb9f13"
			},
			{
				"answerId": "ee6f4eb7-eefa-4e03-b4af-bb17ba720893",
				"userId": "btmzQ2h02aa7NwgpOFMGvGSgcv62"
			}
		],
		"question": "In React, having different stacking contexts can be complex and cause confusion, in what way can we control stacking contexts which would be a solution?",
		"category": "react",
		"type": "radio",
		"status": "closed",
		"pollNumber": 93,
		"id": "9829fa76-c160-467e-9fcf-86a3780ba658",
		"codeBlock": ""
	},
	{
		"codeBlock": "",
		"voted": [
			{
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1",
				"answerId": "2212308e-b29a-4462-8923-eef9504007a4"
			},
			{
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2",
				"answerId": "88a1b79b-5872-4875-a1b8-ace934d1e7b4"
			},
			{
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1",
				"answerId": "fbe9594e-d27d-468c-83b7-90a6b2da7c6c"
			},
			{
				"userId": "aWI6X9i1RugALHJ7ILr8Xp4baIW2",
				"answerId": "088a9051-a7ac-47fb-ae24-12273b1822db"
			},
			{
				"answerId": "fbe9594e-d27d-468c-83b7-90a6b2da7c6c",
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292"
			},
			{
				"userId": "btmzQ2h02aa7NwgpOFMGvGSgcv62",
				"answerId": "2212308e-b29a-4462-8923-eef9504007a4"
			},
			{
				"answerId": "fbe9594e-d27d-468c-83b7-90a6b2da7c6c",
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3"
			},
			{
				"userId": "GxloHn9wFkRFYYHXSuTj56kXd0q2",
				"answerId": "fbe9594e-d27d-468c-83b7-90a6b2da7c6c"
			},
			{
				"answerId": "088a9051-a7ac-47fb-ae24-12273b1822db",
				"userId": "qBHCpnXFOLZsdzcHbKzvkqP6Uck1"
			},
			{
				"answerId": "2212308e-b29a-4462-8923-eef9504007a4",
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2"
			},
			{
				"userId": "H2uBO669vaZ80jwDe7zzxmKbUV02",
				"answerId": "88a1b79b-5872-4875-a1b8-ace934d1e7b4"
			}
		],
		"id": "a3c7bb28-ad2b-4085-beec-f399f4324ab9",
		"correctAnswers": [
			{
				"value": "To overcome browser inconsistencies",
				"id": "2212308e-b29a-4462-8923-eef9504007a4"
			},
			{
				"value": "They are more performant than default DOM events",
				"id": "88a1b79b-5872-4875-a1b8-ace934d1e7b4"
			}
		],
		"answers": [
			{
				"value": "It’s just something that comes with React: The React team wanted to reinvent the wheel and be “the” modern framework because they believe the web can do better. They created their own DOM API, with features like: jsx, components, app generator (create-react-app), lifecycles and Synthetic Events",
				"id": "ee6f4eb7-eefa-4e03-b4af-bb17ba720893",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"id": "088a9051-a7ac-47fb-ae24-12273b1822db",
				"value": "To expand on the default browser event system with custom events the React team came with like onInput or onBrowserClose",
				"type": "radio"
			},
			{
				"type": "radio",
				"value": "To overcome browser inconsistencies",
				"placeholder": "Add option",
				"id": "2212308e-b29a-4462-8923-eef9504007a4",
				"blockType": "text"
			},
			{
				"id": "88a1b79b-5872-4875-a1b8-ace934d1e7b4",
				"placeholder": "Add option",
				"value": "They are more performant than default DOM events",
				"blockType": "text",
				"type": "radio"
			},
			{
				"id": "86ee6730-ab47-4642-85e0-24cb617708f9",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"value": "They are actually “fake” events to use as mocks in your tests with react testing library (hence “synthetic”)"
			},
			{
				"value": "Synthetic events are a wrapper around native events only used in development to prevent firing native DOM events in development. Synthetic events allows for some features in debugging to which makes it much more easy and efficient",
				"placeholder": "Add option",
				"id": "fbe9594e-d27d-468c-83b7-90a6b2da7c6c",
				"type": "radio",
				"blockType": "text"
			},
			{
				"type": "radio",
				"id": "34cf86e6-a785-44af-b932-15c2c1e4408d",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "Synthetic events was just the name of a React Amsterdam conference back in 2017 because the conference was in the light of “artificial intelligence” talks with React. As merchandise they also gave away syntethic t-shirts and a blue synthetic React bag, which made the reference"
			}
		],
		"pollNumber": 92,
		"category": "react",
		"question": "In React, development goes rapid, synthetic events are built-in, do you know why they are added?",
		"type": "radio",
		"openingTime": 1663229990982,
		"status": "closed"
	},
	{
		"answers": [
			{
				"id": "21375381-d724-4bf6-8f4a-8c715a8248ca",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"value": ":not(:last-child)"
			},
			{
				"placeholder": "Add option",
				"id": "394511ae-6620-4b55-be17-6cc05c778740",
				"type": "radio",
				"blockType": "text",
				"value": ":where:not(:last-child)"
			},
			{
				"type": "radio",
				"id": "3e42411d-4f7e-4073-a00b-973ac6b7be2e",
				"placeholder": "Add option",
				"value": ":where:is:not(:last-child)",
				"blockType": "text"
			},
			{
				"type": "radio",
				"blockType": "text",
				"id": "1c774d1e-3211-421b-a149-466b4ad9946e",
				"placeholder": "Add option",
				"value": "::but(:last-child)"
			},
			{
				"placeholder": "Add option",
				"value": "::before:last-child",
				"type": "radio",
				"blockType": "text",
				"id": "d3523a73-1dc9-4fea-923e-d1a542e0772c"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"id": "ff3f9837-34c4-4be2-a061-e5567d55e358",
				"value": "::after:second-last-child",
				"blockType": "text"
			},
			{
				"id": "089d5012-6d9c-458b-963d-e1fa75469b73",
				"value": ":not(::tail)",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text"
			},
			{
				"value": "::last",
				"id": "3ad72993-de69-4569-97a9-77c0dc86bd90",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"value": ":is:not(:last-child)",
				"blockType": "text",
				"type": "radio",
				"id": "8678357c-b6be-4336-90cf-96405ced6087",
				"placeholder": "Add option"
			},
			{
				"id": "ee6f4eb7-eefa-4e03-b4af-bb17ba720893",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"value": "It’s not possible with psuedo classes and it’s therefore mandatory to add a “.last” class to the last element and then style it"
			}
		],
		"status": "closed",
		"question": "In CSS, there is a psuedo class combo to prevent elements from being selected, now how do you select all list items but leave the last one unaffected?",
		"id": "1bfeb8d2-6f2d-4182-96ba-f9710e56b9b7",
		"category": "css",
		"openingTime": null,
		"codeBlock": "",
		"voted": [],
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{
				"value": "fixed",
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0"
			},
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{
				"value": "<weak>",
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73"
			},
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"value": "Temporal API"
			},
			{
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61",
				"value": "<dbz>"
			},
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1",
				"value": "<card>"
			},
			{
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b",
				"value": "<vue>"
			},
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3",
				"value": "Methods like call(), apply()and bind() can refer thisto any object"
			},
			{
				"value": "“this” is determined on how a function is called",
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0"
			},
			{
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers"
			},
			{
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a",
				"value": "line-height"
			},
			{
				"value": "Block level elements take the width of the entire row",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary"
			},
			{
				"value": "color",
				"id": "9eadd81b-a378-414a-827b-7c9d105b1ca3"
			},
			{
				"value": "hidden",
				"id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc"
			},
			{
				"id": "db1d4d07-16ed-4031-8fe4-b5f502063844",
				"value": "radio"
			},
			{
				"id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8",
				"value": "reset"
			},
			{
				"value": "flex-wrap",
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3"
			},
			{
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b",
				"value": "The margins will collapse, meaning that the margin of the biggest element will win "
			},
			{
				"value": "debugger",
				"id": "d987a018-4259-438f-8baa-67cb031c3591"
			},
			{
				"value": "It occurred because you are trying to call a value as a function but the value is not a function",
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f"
			},
			{
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f",
				"value": "block scope"
			},
			{
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a",
				"value": "function scope"
			},
			{
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096",
				"value": "lexical scope"
			},
			{
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2",
				"value": "module scope"
			},
			{
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f",
				"value": "global scope"
			},
			{
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe",
				"value": "It is not recommended because it opens a security leak, eval is evil"
			},
			{
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e",
				"value": "ternary operator"
			},
			{
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5",
				"value": "When you are using TypeScript but don’t really need the types"
			},
			{
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a",
				"value": "When you’re working on simple/small applications (<1000 lines of code)"
			},
			{
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76",
				"value": "When run-time errors are contextually more informative (depends on the project)"
			},
			{
				"value": "When your codebase is at a level it needs flexibility at every level",
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1"
			},
			{
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713",
				"value": "When your “Navi” intellisense suggests “any” "
			},
			{
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story",
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15"
			},
			{
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913",
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)"
			},
			{
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b",
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly"
			},
			{
				"value": "Optimistic UI",
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5"
			},
			{
				"value": "<noscript>",
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2"
			},
			{
				"value": "Strawperson > Proposal > Draft > Candidate > Finished",
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914"
			},
			{
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304",
				"value": "LocalStorage persists across browsers"
			},
			{
				"id": "14000f03-3405-4e5e-b231-81b45faa6654",
				"value": "SessionStorage will be removed when a browser is closed"
			},
			{
				"id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c",
				"value": "^"
			},
			{
				"value": "When writing directions (foreign languages) matter ",
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264"
			},
			{
				"value": "try",
				"id": "04cfe937-2a1c-4e21-adf4-949835c0d764"
			},
			{
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14",
				"value": "finally"
			},
			{
				"value": "throw",
				"id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3"
			},
			{
				"id": "7767b333-639a-40e7-904d-158fe4127d37",
				"value": "Semantic tags are important for users with screen readers"
			},
			{
				"value": "Semantic tags show developer’s intent",
				"id": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450"
			},
			{
				"id": "8c26881c-c657-4e4a-a454-635e6b3a4d62",
				"value": ".map doesn’t run when the array is empty"
			},
			{
				"value": "When you have heavy computations doing the same thing ",
				"id": "7d065da6-592b-4283-8438-18d90ec2f0b6"
			},
			{
				"value": "Nothing: You can perfectly do this request",
				"id": "c8582033-1847-4175-99bd-d02ea8819c9b"
			},
			{
				"value": "It builds confidence in your code because you can run it whenever you make changes in code",
				"id": "6ae45a37-d353-4d95-8c94-c516c45b431c"
			},
			{
				"id": "314a6b8f-b5f0-443e-adab-d2b36587befc",
				"value": "Lifting state up"
			},
			{
				"value": "accent-color",
				"id": "bf70be23-42b6-4ab8-bde7-f961bd5ca747"
			},
			{
				"id": "4cea1053-afcb-4661-844f-8ed4ed3a3af4",
				"value": "jsx"
			},
			{
				"value": "div:nth-child(even) {\n    background-color: #f2f2f2\n}",
				"id": "6bfaf8dd-fbbd-4014-9a32-38c06263c506"
			},
			{
				"id": "fa3ec186-bf05-454a-8220-9e00938fae7b",
				"value": "div:nth-child(odd) {\n    background-color: #f2f2f2\n}"
			},
			{
				"value": "when the screen is 991px wide",
				"id": "fd61dea8-1af4-42e5-851a-55c2c75c9ace"
			},
			{
				"id": "eb0405f2-613b-428f-93bb-be609586738c",
				"value": "when the screen is smaller than 992px"
			},
			{
				"id": "21375381-d724-4bf6-8f4a-8c715a8248ca",
				"value": ":not(:last-child)"
			}
		],
		"pollNumber": 91,
		"type": "radio"
	},
	{
		"category": "html",
		"question": "In HTML, tooltips are often seen in a user interface, what is required to create the simplest tooltip in this case?",
		"type": "radio",
		"status": "closed",
		"openingTime": 1662706464970,
		"correctAnswers": [
			{
				"id": "1c774d1e-3211-421b-a149-466b4ad9946e",
				"value": "With an attribute applied on an element called “title” "
			}
		],
		"voted": [
			{
				"userId": "2kDmBd1QNJS0iz9jlmALbdtRw642",
				"answerId": "3e42411d-4f7e-4073-a00b-973ac6b7be2e"
			}
		],
		"pollNumber": 90,
		"answers": [
			{
				"value": "CSS code is atleast required for a simple tooltip",
				"id": "21375381-d724-4bf6-8f4a-8c715a8248ca",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"id": "394511ae-6620-4b55-be17-6cc05c778740",
				"blockType": "text",
				"value": "JS code is atleast required for a simple tooltip",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"value": "With bootstrap or any kind of CSS framework is required for a tooltip",
				"type": "radio",
				"id": "3e42411d-4f7e-4073-a00b-973ac6b7be2e",
				"blockType": "text"
			},
			{
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "1c774d1e-3211-421b-a149-466b4ad9946e",
				"value": "With an attribute applied on an element called “title” "
			},
			{
				"id": "d3523a73-1dc9-4fea-923e-d1a542e0772c",
				"type": "radio",
				"value": "With the psuedo element ::tooltip",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": "With the <tooltip> element",
				"type": "radio",
				"id": "ff3f9837-34c4-4be2-a061-e5567d55e358"
			}
		],
		"id": "d32e4d8e-07c9-49d7-8a95-a68abfab8e6e",
		"codeBlock": ""
	},
	{
		"codeBlock": "@media screen and (max-width: 992px) { \n\tbody { \n\t\tbackground-color: peachpuff\n\t}  \n};\n\n\nbody {\n   background-color: papayawhip\n}",
		"voted": [],
		"type": "checkbox",
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{
				"value": "fixed",
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0"
			},
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{
				"value": "<weak>",
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73"
			},
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"value": "Temporal API"
			},
			{
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			},
			{
				"value": "The effect is an infinite loop, due to circularity ",
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a"
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{
				"value": "<dbz>",
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61"
			},
			{
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d",
				"value": "<react>"
			},
			{
				"value": "<card>",
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1"
			},
			{
				"value": "<vue>",
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b"
			},
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }",
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"value": "Methods like call(), apply()and bind() can refer thisto any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			},
			{
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers"
			},
			{
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a",
				"value": "line-height"
			},
			{
				"value": "Block level elements take the width of the entire row",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary"
			},
			{
				"id": "9eadd81b-a378-414a-827b-7c9d105b1ca3",
				"value": "color"
			},
			{
				"value": "hidden",
				"id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc"
			},
			{
				"value": "radio",
				"id": "db1d4d07-16ed-4031-8fe4-b5f502063844"
			},
			{
				"value": "reset",
				"id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8"
			},
			{
				"value": "flex-wrap",
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3"
			},
			{
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b",
				"value": "The margins will collapse, meaning that the margin of the biggest element will win "
			},
			{
				"value": "debugger",
				"id": "d987a018-4259-438f-8baa-67cb031c3591"
			},
			{
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f",
				"value": "It occurred because you are trying to call a value as a function but the value is not a function"
			},
			{
				"value": "block scope",
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f"
			},
			{
				"value": "function scope",
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a"
			},
			{
				"value": "lexical scope",
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096"
			},
			{
				"value": "module scope",
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2"
			},
			{
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f",
				"value": "global scope"
			},
			{
				"value": "It is not recommended because it opens a security leak, eval is evil",
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe"
			},
			{
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e",
				"value": "ternary operator"
			},
			{
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5",
				"value": "When you are using TypeScript but don’t really need the types"
			},
			{
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a",
				"value": "When you’re working on simple/small applications (<1000 lines of code)"
			},
			{
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76",
				"value": "When run-time errors are contextually more informative (depends on the project)"
			},
			{
				"value": "When your codebase is at a level it needs flexibility at every level",
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1"
			},
			{
				"value": "When your “Navi” intellisense suggests “any” ",
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713"
			},
			{
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story",
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15"
			},
			{
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913",
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)"
			},
			{
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b",
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly"
			},
			{
				"value": "Optimistic UI",
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5"
			},
			{
				"value": "<noscript>",
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2"
			},
			{
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914",
				"value": "Strawperson > Proposal > Draft > Candidate > Finished"
			},
			{
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304",
				"value": "LocalStorage persists across browsers"
			},
			{
				"id": "14000f03-3405-4e5e-b231-81b45faa6654",
				"value": "SessionStorage will be removed when a browser is closed"
			},
			{
				"id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c",
				"value": "^"
			},
			{
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264",
				"value": "When writing directions (foreign languages) matter "
			},
			{
				"id": "04cfe937-2a1c-4e21-adf4-949835c0d764",
				"value": "try"
			},
			{
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14",
				"value": "finally"
			},
			{
				"id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3",
				"value": "throw"
			},
			{
				"id": "7767b333-639a-40e7-904d-158fe4127d37",
				"value": "Semantic tags are important for users with screen readers"
			},
			{
				"id": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450",
				"value": "Semantic tags show developer’s intent"
			},
			{
				"id": "8c26881c-c657-4e4a-a454-635e6b3a4d62",
				"value": ".map doesn’t run when the array is empty"
			},
			{
				"value": "When you have heavy computations doing the same thing ",
				"id": "7d065da6-592b-4283-8438-18d90ec2f0b6"
			},
			{
				"value": "Nothing: You can perfectly do this request",
				"id": "c8582033-1847-4175-99bd-d02ea8819c9b"
			},
			{
				"id": "6ae45a37-d353-4d95-8c94-c516c45b431c",
				"value": "It builds confidence in your code because you can run it whenever you make changes in code"
			},
			{
				"value": "Lifting state up",
				"id": "314a6b8f-b5f0-443e-adab-d2b36587befc"
			},
			{
				"id": "bf70be23-42b6-4ab8-bde7-f961bd5ca747",
				"value": "accent-color"
			},
			{
				"value": "jsx",
				"id": "4cea1053-afcb-4661-844f-8ed4ed3a3af4"
			},
			{
				"value": "div:nth-child(even) {\n    background-color: #f2f2f2\n}",
				"id": "6bfaf8dd-fbbd-4014-9a32-38c06263c506"
			},
			{
				"id": "fa3ec186-bf05-454a-8220-9e00938fae7b",
				"value": "div:nth-child(odd) {\n    background-color: #f2f2f2\n}"
			},
			{
				"id": "fd61dea8-1af4-42e5-851a-55c2c75c9ace",
				"value": "when the screen is 991px wide"
			},
			{
				"value": "when the screen is smaller than 992px",
				"id": "eb0405f2-613b-428f-93bb-be609586738c"
			}
		],
		"question": "In CSS, media queries helps you deliver styles for each device, now when will this background-color change to peachpuff to be precise? ",
		"openingTime": null,
		"category": "css",
		"id": "b30f6f4f-541c-4cc0-95bc-df8d7fca1d2a",
		"status": "needs-revision",
		"pollNumber": 89,
		"answers": [
			{
				"blockType": "text",
				"value": "when the screen is 992px wide (?)",
				"id": "166645f8-d2fd-415b-b7ca-3a7ace480b36",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"blockType": "text",
				"value": "when the screen is 993px wide ",
				"id": "5195293c-dce4-430c-941b-3b79453255e8",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "6ea5764c-64b0-448c-9a5c-1deb64b32e38",
				"value": "only on screens which are exactly 991px wide",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": "when the screen is 991px wide",
				"type": "radio",
				"id": "fd61dea8-1af4-42e5-851a-55c2c75c9ace"
			},
			{
				"placeholder": "Add option",
				"value": "when the screen is smaller than 992px",
				"type": "radio",
				"blockType": "text",
				"id": "eb0405f2-613b-428f-93bb-be609586738c"
			},
			{
				"placeholder": "Add option",
				"value": "only on screens which are exactly 992px wide",
				"id": "21375381-d724-4bf6-8f4a-8c715a8248ca",
				"type": "radio",
				"blockType": "text"
			}
		]
	},
	{
		"codeBlock": "",
		"category": "css",
		"type": "checkbox",
		"question": "In CSS, zebra’s also have stripes, how can you create an effect that look alikes?",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0",
				"value": "fixed"
			},
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{
				"value": "<weak>",
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73"
			},
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61",
				"value": "<dbz>"
			},
			{
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d",
				"value": "<react>"
			},
			{
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1",
				"value": "<card>"
			},
			{
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b",
				"value": "<vue>"
			},
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}",
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"value": "Methods like call(), apply()and bind() can refer thisto any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			},
			{
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers"
			},
			{
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a",
				"value": "line-height"
			},
			{
				"value": "Block level elements take the width of the entire row",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary",
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694"
			},
			{
				"value": "color",
				"id": "9eadd81b-a378-414a-827b-7c9d105b1ca3"
			},
			{
				"id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc",
				"value": "hidden"
			},
			{
				"value": "radio",
				"id": "db1d4d07-16ed-4031-8fe4-b5f502063844"
			},
			{
				"value": "reset",
				"id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8"
			},
			{
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3",
				"value": "flex-wrap"
			},
			{
				"value": "The margins will collapse, meaning that the margin of the biggest element will win ",
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b"
			},
			{
				"value": "debugger",
				"id": "d987a018-4259-438f-8baa-67cb031c3591"
			},
			{
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f",
				"value": "It occurred because you are trying to call a value as a function but the value is not a function"
			},
			{
				"value": "block scope",
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f"
			},
			{
				"value": "function scope",
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a"
			},
			{
				"value": "lexical scope",
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096"
			},
			{
				"value": "module scope",
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2"
			},
			{
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f",
				"value": "global scope"
			},
			{
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe",
				"value": "It is not recommended because it opens a security leak, eval is evil"
			},
			{
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e",
				"value": "ternary operator"
			},
			{
				"value": "When you are using TypeScript but don’t really need the types",
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5"
			},
			{
				"value": "When you’re working on simple/small applications (<1000 lines of code)",
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a"
			},
			{
				"value": "When run-time errors are contextually more informative (depends on the project)",
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76"
			},
			{
				"value": "When your codebase is at a level it needs flexibility at every level",
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1"
			},
			{
				"value": "When your “Navi” intellisense suggests “any” ",
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713"
			},
			{
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story",
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15"
			},
			{
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)",
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913"
			},
			{
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly",
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b"
			},
			{
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5",
				"value": "Optimistic UI"
			},
			{
				"value": "<noscript>",
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2"
			},
			{
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914",
				"value": "Strawperson > Proposal > Draft > Candidate > Finished"
			},
			{
				"value": "LocalStorage persists across browsers",
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304"
			},
			{
				"value": "SessionStorage will be removed when a browser is closed",
				"id": "14000f03-3405-4e5e-b231-81b45faa6654"
			},
			{
				"id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c",
				"value": "^"
			},
			{
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264",
				"value": "When writing directions (foreign languages) matter "
			},
			{
				"value": "try",
				"id": "04cfe937-2a1c-4e21-adf4-949835c0d764"
			},
			{
				"value": "finally",
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14"
			},
			{
				"id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3",
				"value": "throw"
			},
			{
				"id": "7767b333-639a-40e7-904d-158fe4127d37",
				"value": "Semantic tags are important for users with screen readers"
			},
			{
				"id": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450",
				"value": "Semantic tags show developer’s intent"
			},
			{
				"id": "8c26881c-c657-4e4a-a454-635e6b3a4d62",
				"value": ".map doesn’t run when the array is empty"
			},
			{
				"id": "7d065da6-592b-4283-8438-18d90ec2f0b6",
				"value": "When you have heavy computations doing the same thing "
			},
			{
				"id": "c8582033-1847-4175-99bd-d02ea8819c9b",
				"value": "Nothing: You can perfectly do this request"
			},
			{
				"id": "6ae45a37-d353-4d95-8c94-c516c45b431c",
				"value": "It builds confidence in your code because you can run it whenever you make changes in code"
			},
			{
				"id": "314a6b8f-b5f0-443e-adab-d2b36587befc",
				"value": "Lifting state up"
			},
			{
				"id": "bf70be23-42b6-4ab8-bde7-f961bd5ca747",
				"value": "accent-color"
			},
			{
				"value": "jsx",
				"id": "4cea1053-afcb-4661-844f-8ed4ed3a3af4"
			},
			{
				"id": "6bfaf8dd-fbbd-4014-9a32-38c06263c506",
				"value": "div:nth-child(even) {\n    background-color: #f2f2f2\n}"
			},
			{
				"value": "div:nth-child(odd) {\n    background-color: #f2f2f2\n}",
				"id": "fa3ec186-bf05-454a-8220-9e00938fae7b"
			}
		],
		"status": "needs-revision",
		"openingTime": null,
		"answers": [
			{
				"type": "radio",
				"value": "div:nth-child(even) {\n    background-color: #f2f2f2\n}",
				"blockType": "code",
				"id": "6bfaf8dd-fbbd-4014-9a32-38c06263c506",
				"placeholder": "Add option"
			},
			{
				"blockType": "code",
				"placeholder": "Add option",
				"type": "radio",
				"id": "fa3ec186-bf05-454a-8220-9e00938fae7b",
				"value": "div:nth-child(odd) {\n    background-color: #f2f2f2\n}"
			},
			{
				"placeholder": "Add option",
				"value": "Just use a table tag, it will have that effect automatically",
				"id": "166645f8-d2fd-415b-b7ca-3a7ace480b36",
				"type": "radio",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "39e67c3d-86b0-4d0c-9f4f-cd93a9625794",
				"value": "div { @apply var(--zebra) }",
				"blockType": "code"
			},
			{
				"blockType": "text",
				"value": "div:odd-child {     background-color: #f2f2f2 }",
				"placeholder": "Add option",
				"id": "5195293c-dce4-430c-941b-3b79453255e8",
				"type": "radio"
			}
		],
		"pollNumber": 88,
		"voted": [],
		"id": "7ff3d89a-1a67-4d02-b79b-40c2b79fbe36"
	},
	{
		"answers": [
			{
				"value": "onClick={handleClick} check",
				"id": "4cea1053-afcb-4661-844f-8ed4ed3a3af4",
				"type": "radio",
				"blockType": "code",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"value": "onClick={handleClick(e)}",
				"blockType": "code",
				"type": "radio",
				"id": "da93489a-4e9c-415a-979a-8da8851c6a78"
			},
			{
				"id": "1e2f5025-752f-4cab-a52b-8ac75b0d4059",
				"type": "radio",
				"placeholder": "Add option",
				"value": "click(function(e) {})",
				"blockType": "code"
			},
			{
				"id": "66b6fc7b-cda2-44c3-be4e-809739720545",
				"value": "onclick={(e) ⇒ handleClick(e)}",
				"blockType": "code",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"id": "6bfaf8dd-fbbd-4014-9a32-38c06263c506",
				"value": "onClick={handleClick.bind(e)}",
				"placeholder": "Add option",
				"blockType": "code",
				"type": "radio"
			},
			{
				"value": "onClick={(e) ⇒ handleClick(e)}",
				"type": "radio",
				"placeholder": "Add option",
				"id": "fa3ec186-bf05-454a-8220-9e00938fae7b",
				"blockType": "code"
			}
		],
		"type": "radio",
		"id": "d10cccce-1c3f-492f-b98d-dcd5ead53331",
		"category": "react",
		"status": "needs-revision",
		"voted": [],
		"codeBlock": "",
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{
				"value": "fixed",
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0"
			},
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73",
				"value": "<weak>"
			},
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url"
			},
			{
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe",
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"value": "The effect is an infinite loop, due to circularity ",
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a"
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61",
				"value": "<dbz>"
			},
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1",
				"value": "<card>"
			},
			{
				"value": "<vue>",
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b"
			},
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }",
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3",
				"value": "Methods like call(), apply()and bind() can refer thisto any object"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			},
			{
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers"
			},
			{
				"value": "line-height",
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a"
			},
			{
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d",
				"value": "Block level elements take the width of the entire row"
			},
			{
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary",
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694"
			},
			{
				"value": "color",
				"id": "9eadd81b-a378-414a-827b-7c9d105b1ca3"
			},
			{
				"id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc",
				"value": "hidden"
			},
			{
				"value": "radio",
				"id": "db1d4d07-16ed-4031-8fe4-b5f502063844"
			},
			{
				"value": "reset",
				"id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8"
			},
			{
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3",
				"value": "flex-wrap"
			},
			{
				"value": "The margins will collapse, meaning that the margin of the biggest element will win ",
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b"
			},
			{
				"id": "d987a018-4259-438f-8baa-67cb031c3591",
				"value": "debugger"
			},
			{
				"value": "It occurred because you are trying to call a value as a function but the value is not a function",
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f"
			},
			{
				"value": "block scope",
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f"
			},
			{
				"value": "function scope",
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a"
			},
			{
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096",
				"value": "lexical scope"
			},
			{
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2",
				"value": "module scope"
			},
			{
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f",
				"value": "global scope"
			},
			{
				"value": "It is not recommended because it opens a security leak, eval is evil",
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe"
			},
			{
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e",
				"value": "ternary operator"
			},
			{
				"value": "When you are using TypeScript but don’t really need the types",
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5"
			},
			{
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a",
				"value": "When you’re working on simple/small applications (<1000 lines of code)"
			},
			{
				"value": "When run-time errors are contextually more informative (depends on the project)",
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76"
			},
			{
				"value": "When your codebase is at a level it needs flexibility at every level",
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1"
			},
			{
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713",
				"value": "When your “Navi” intellisense suggests “any” "
			},
			{
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15",
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story"
			},
			{
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913",
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)"
			},
			{
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly",
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b"
			},
			{
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5",
				"value": "Optimistic UI"
			},
			{
				"value": "<noscript>",
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2"
			},
			{
				"value": "Strawperson > Proposal > Draft > Candidate > Finished",
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914"
			},
			{
				"value": "LocalStorage persists across browsers",
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304"
			},
			{
				"value": "SessionStorage will be removed when a browser is closed",
				"id": "14000f03-3405-4e5e-b231-81b45faa6654"
			},
			{
				"value": "^",
				"id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c"
			},
			{
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264",
				"value": "When writing directions (foreign languages) matter "
			},
			{
				"id": "04cfe937-2a1c-4e21-adf4-949835c0d764",
				"value": "try"
			},
			{
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14",
				"value": "finally"
			},
			{
				"value": "throw",
				"id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3"
			},
			{
				"value": "Semantic tags are important for users with screen readers",
				"id": "7767b333-639a-40e7-904d-158fe4127d37"
			},
			{
				"value": "Semantic tags show developer’s intent",
				"id": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450"
			},
			{
				"id": "8c26881c-c657-4e4a-a454-635e6b3a4d62",
				"value": ".map doesn’t run when the array is empty"
			},
			{
				"value": "When you have heavy computations doing the same thing ",
				"id": "7d065da6-592b-4283-8438-18d90ec2f0b6"
			},
			{
				"value": "Nothing: You can perfectly do this request",
				"id": "c8582033-1847-4175-99bd-d02ea8819c9b"
			},
			{
				"value": "It builds confidence in your code because you can run it whenever you make changes in code",
				"id": "6ae45a37-d353-4d95-8c94-c516c45b431c"
			},
			{
				"id": "314a6b8f-b5f0-443e-adab-d2b36587befc",
				"value": "Lifting state up"
			},
			{
				"value": "accent-color",
				"id": "bf70be23-42b6-4ab8-bde7-f961bd5ca747"
			},
			{
				"value": "jsx",
				"id": "4cea1053-afcb-4661-844f-8ed4ed3a3af4"
			},
			{
				"value": "onClick={(e) ⇒ handleClick(e)}",
				"id": "fa3ec186-bf05-454a-8220-9e00938fae7b"
			}
		],
		"pollNumber": 87,
		"openingTime": null,
		"question": "Various answers are listed and you have just one to pick, in React, how can you pass event arguments with an on click? "
	},
	{
		"answers": [
			{
				"id": "e1b685bc-4167-4d70-a308-1cc61b9f60ef",
				"blockType": "text",
				"value": "tsx",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"id": "91314ced-3e7f-476b-93f7-c3b52e364be2",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "HTML"
			},
			{
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "10a2baee-5df3-4076-b928-83b799d79411",
				"value": "elements"
			},
			{
				"value": "components",
				"placeholder": "Add option",
				"type": "radio",
				"id": "5e8a699f-cec6-496b-a5aa-41c6498078af",
				"blockType": "text"
			},
			{
				"value": "fragments",
				"id": "0f1ea07c-68ff-4586-a7ba-4cc6bd7cdd11",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text"
			},
			{
				"type": "radio",
				"id": "4ad60bfa-c521-4944-b29a-c9a14fcffc67",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "synthetic HTML"
			},
			{
				"value": "strings",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"id": "8ce7a62e-757c-4f60-9f8d-3050d033159e"
			},
			{
				"value": "XML",
				"type": "radio",
				"placeholder": "Add option",
				"id": "2f123b31-3617-4e5c-89cd-13ed06c15359",
				"blockType": "text"
			},
			{
				"id": "1fbd9309-e03e-4f11-b107-cca12c51ad98",
				"placeholder": "Add option",
				"value": "jQuery",
				"type": "radio",
				"blockType": "text"
			},
			{
				"value": "jsx",
				"placeholder": "Add option",
				"id": "4cea1053-afcb-4661-844f-8ed4ed3a3af4",
				"type": "radio",
				"blockType": "text"
			},
			{
				"type": "radio",
				"id": "da93489a-4e9c-415a-979a-8da8851c6a78",
				"placeholder": "Add option",
				"value": "Virtual DOM elements",
				"blockType": "text"
			}
		],
		"category": "react",
		"id": "2825169a-8ff3-4e85-b180-144dfe949fe1",
		"correctAnswers": [
			{
				"value": "jsx",
				"id": "4cea1053-afcb-4661-844f-8ed4ed3a3af4"
			}
		],
		"type": "radio",
		"pollNumber": 86,
		"openingTime": 1662970082474,
		"codeBlock": "",
		"voted": [
			{
				"answerId": "e1b685bc-4167-4d70-a308-1cc61b9f60ef",
				"userId": "GxloHn9wFkRFYYHXSuTj56kXd0q2"
			},
			{
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1",
				"answerId": "4cea1053-afcb-4661-844f-8ed4ed3a3af4"
			},
			{
				"answerId": "4cea1053-afcb-4661-844f-8ed4ed3a3af4",
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292"
			},
			{
				"answerId": "4cea1053-afcb-4661-844f-8ed4ed3a3af4",
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2"
			},
			{
				"answerId": "4cea1053-afcb-4661-844f-8ed4ed3a3af4",
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3"
			},
			{
				"userId": "btmzQ2h02aa7NwgpOFMGvGSgcv62",
				"answerId": "4cea1053-afcb-4661-844f-8ed4ed3a3af4"
			},
			{
				"answerId": "4cea1053-afcb-4661-844f-8ed4ed3a3af4",
				"userId": "B762i26QM7Y275I0w2uAtklg3Gx1"
			},
			{
				"userId": "qBHCpnXFOLZsdzcHbKzvkqP6Uck1",
				"answerId": "4cea1053-afcb-4661-844f-8ed4ed3a3af4"
			},
			{
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2",
				"answerId": "4cea1053-afcb-4661-844f-8ed4ed3a3af4"
			}
		],
		"status": "closed",
		"question": "In React, markup and JS is what you apply, what is the name of the syntax that renders UI?"
	},
	{
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{
				"value": "fixed",
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0"
			},
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73",
				"value": "<weak>"
			},
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url"
			},
			{
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe",
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{
				"value": "<dbz>",
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61"
			},
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{
				"value": "<card>",
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1"
			},
			{
				"value": "<vue>",
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b"
			},
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3",
				"value": "Methods like call(), apply()and bind() can refer thisto any object"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			},
			{
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers",
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65"
			},
			{
				"value": "line-height",
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a"
			},
			{
				"value": "Block level elements take the width of the entire row",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary",
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694"
			},
			{
				"id": "9eadd81b-a378-414a-827b-7c9d105b1ca3",
				"value": "color"
			},
			{
				"value": "hidden",
				"id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc"
			},
			{
				"id": "db1d4d07-16ed-4031-8fe4-b5f502063844",
				"value": "radio"
			},
			{
				"value": "reset",
				"id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8"
			},
			{
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3",
				"value": "flex-wrap"
			},
			{
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b",
				"value": "The margins will collapse, meaning that the margin of the biggest element will win "
			},
			{
				"value": "debugger",
				"id": "d987a018-4259-438f-8baa-67cb031c3591"
			},
			{
				"value": "It occurred because you are trying to call a value as a function but the value is not a function",
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f"
			},
			{
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f",
				"value": "block scope"
			},
			{
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a",
				"value": "function scope"
			},
			{
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096",
				"value": "lexical scope"
			},
			{
				"value": "module scope",
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2"
			},
			{
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f",
				"value": "global scope"
			},
			{
				"value": "It is not recommended because it opens a security leak, eval is evil",
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe"
			},
			{
				"value": "ternary operator",
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e"
			},
			{
				"value": "When you are using TypeScript but don’t really need the types",
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5"
			},
			{
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a",
				"value": "When you’re working on simple/small applications (<1000 lines of code)"
			},
			{
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76",
				"value": "When run-time errors are contextually more informative (depends on the project)"
			},
			{
				"value": "When your codebase is at a level it needs flexibility at every level",
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1"
			},
			{
				"value": "When your “Navi” intellisense suggests “any” ",
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713"
			},
			{
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15",
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story"
			},
			{
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913",
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)"
			},
			{
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b",
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly"
			},
			{
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5",
				"value": "Optimistic UI"
			},
			{
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2",
				"value": "<noscript>"
			},
			{
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914",
				"value": "Strawperson > Proposal > Draft > Candidate > Finished"
			},
			{
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304",
				"value": "LocalStorage persists across browsers"
			},
			{
				"value": "SessionStorage will be removed when a browser is closed",
				"id": "14000f03-3405-4e5e-b231-81b45faa6654"
			},
			{
				"value": "^",
				"id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c"
			},
			{
				"value": "When writing directions (foreign languages) matter ",
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264"
			},
			{
				"id": "04cfe937-2a1c-4e21-adf4-949835c0d764",
				"value": "try"
			},
			{
				"value": "finally",
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14"
			},
			{
				"id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3",
				"value": "throw"
			},
			{
				"id": "7767b333-639a-40e7-904d-158fe4127d37",
				"value": "Semantic tags are important for users with screen readers"
			},
			{
				"id": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450",
				"value": "Semantic tags show developer’s intent"
			},
			{
				"value": ".map doesn’t run when the array is empty",
				"id": "8c26881c-c657-4e4a-a454-635e6b3a4d62"
			},
			{
				"value": "When you have heavy computations doing the same thing ",
				"id": "7d065da6-592b-4283-8438-18d90ec2f0b6"
			},
			{
				"value": "Nothing: You can perfectly do this request",
				"id": "c8582033-1847-4175-99bd-d02ea8819c9b"
			},
			{
				"value": "It builds confidence in your code because you can run it whenever you make changes in code",
				"id": "6ae45a37-d353-4d95-8c94-c516c45b431c"
			},
			{
				"value": "Lifting state up",
				"id": "314a6b8f-b5f0-443e-adab-d2b36587befc"
			},
			{
				"id": "bf70be23-42b6-4ab8-bde7-f961bd5ca747",
				"value": "accent-color"
			}
		],
		"category": "css",
		"status": "closed",
		"pollNumber": 85,
		"question": "In CSS, UI controls are mostly hard to style, now what is the name of the CSS property that eases styling UI controls and make you smile? ",
		"type": "radio",
		"codeBlock": "",
		"id": "b09135d6-f2dc-45a0-b821-1b4f73ec9e1e",
		"answers": [
			{
				"placeholder": "Add option",
				"id": "bf70be23-42b6-4ab8-bde7-f961bd5ca747",
				"blockType": "text",
				"type": "radio",
				"value": "accent-color"
			},
			{
				"id": "b76fb707-c575-4684-b3ff-9d3a51cf829c",
				"placeholder": "Add option",
				"value": "form-color",
				"type": "radio",
				"blockType": "text"
			},
			{
				"id": "04f74bd2-de8b-4190-a52c-f4298e30acb0",
				"value": "background-color",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio"
			},
			{
				"value": "color",
				"placeholder": "Add option",
				"id": "31b4db08-5352-47af-a76a-a9797d2c9d5a",
				"blockType": "text",
				"type": "radio"
			},
			{
				"value": "CSS variables",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"id": "b9e9ecde-f0cd-48ec-8d00-f1c73096b28e"
			},
			{
				"placeholder": "Add option",
				"id": "e44f90fe-5787-4422-9889-72ed874c7717",
				"blockType": "text",
				"value": "It's a SASS mixin",
				"type": "radio"
			},
			{
				"id": "e1b685bc-4167-4d70-a308-1cc61b9f60ef",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "ui-color"
			}
		],
		"openingTime": 1664178549610,
		"voted": [
			{
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1",
				"answerId": "bf70be23-42b6-4ab8-bde7-f961bd5ca747"
			},
			{
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292",
				"answerId": "e44f90fe-5787-4422-9889-72ed874c7717"
			},
			{
				"userId": "GxloHn9wFkRFYYHXSuTj56kXd0q2",
				"answerId": "bf70be23-42b6-4ab8-bde7-f961bd5ca747"
			},
			{
				"answerId": "bf70be23-42b6-4ab8-bde7-f961bd5ca747",
				"userId": "aWI6X9i1RugALHJ7ILr8Xp4baIW2"
			},
			{
				"answerId": "bf70be23-42b6-4ab8-bde7-f961bd5ca747",
				"userId": "y0Vb464iCdeVzfBJBZzCjCIZIi72"
			},
			{
				"answerId": "b9e9ecde-f0cd-48ec-8d00-f1c73096b28e",
				"userId": "kfrkjsbashYfl1sD2PgVGXcpND63"
			},
			{
				"userId": "H2uBO669vaZ80jwDe7zzxmKbUV02",
				"answerId": "04f74bd2-de8b-4190-a52c-f4298e30acb0"
			},
			{
				"answerId": "bf70be23-42b6-4ab8-bde7-f961bd5ca747",
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1"
			},
			{
				"userId": "B762i26QM7Y275I0w2uAtklg3Gx1",
				"answerId": "bf70be23-42b6-4ab8-bde7-f961bd5ca747"
			},
			{
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2",
				"answerId": "bf70be23-42b6-4ab8-bde7-f961bd5ca747"
			}
		]
	},
	{
		"category": "react",
		"answers": [
			{
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"id": "185d717e-5336-4020-a92e-d949bf26f8e2",
				"value": "Redux "
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"value": "Context",
				"id": "e603b6e0-78de-46b9-a341-cf73fc06451e"
			},
			{
				"id": "314a6b8f-b5f0-443e-adab-d2b36587befc",
				"placeholder": "Add option",
				"value": "Lifting state up",
				"type": "radio",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"type": "radio",
				"id": "44124c59-24e4-4742-ae6e-4a5aa37dd592",
				"placeholder": "Add option",
				"value": "LocalStorage"
			},
			{
				"value": "Hooks",
				"placeholder": "Add option",
				"id": "090bfeb2-f91b-42fb-a50b-19ded47dbe63",
				"type": "radio",
				"blockType": "text"
			},
			{
				"id": "1af4fbc6-916c-45f6-83b7-f81a156804b3",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"value": "Firebase"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"id": "3a72fc48-3823-479a-a2e2-e0f521bdd026",
				"value": "IndexedDB"
			},
			{
				"value": "React-query",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "ee2a5f6e-7bcd-45c9-98cb-e3ed41529dc4",
				"type": "radio"
			},
			{
				"id": "bf70be23-42b6-4ab8-bde7-f961bd5ca747",
				"value": "useState",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text"
			}
		],
		"question": "In React, state management can be hard I admit, when component B and C require state to be in sync, what approach would be the best fit? ",
		"codeBlock": "",
		"id": "f92edbaf-00e5-49c6-8685-259c585db243",
		"type": "radio",
		"voted": [
			{
				"answerId": "bf70be23-42b6-4ab8-bde7-f961bd5ca747",
				"userId": "GxloHn9wFkRFYYHXSuTj56kXd0q2"
			},
			{
				"userId": "aWI6X9i1RugALHJ7ILr8Xp4baIW2",
				"answerId": "e603b6e0-78de-46b9-a341-cf73fc06451e"
			},
			{
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1",
				"answerId": "314a6b8f-b5f0-443e-adab-d2b36587befc"
			},
			{
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1",
				"answerId": "314a6b8f-b5f0-443e-adab-d2b36587befc"
			},
			{
				"answerId": "314a6b8f-b5f0-443e-adab-d2b36587befc",
				"userId": "y0Vb464iCdeVzfBJBZzCjCIZIi72"
			},
			{
				"answerId": "314a6b8f-b5f0-443e-adab-d2b36587befc",
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292"
			},
			{
				"answerId": "bf70be23-42b6-4ab8-bde7-f961bd5ca747",
				"userId": "kfrkjsbashYfl1sD2PgVGXcpND63"
			},
			{
				"answerId": "314a6b8f-b5f0-443e-adab-d2b36587befc",
				"userId": "8O6cHx6IxmTUXaMnXhxcQ2HFgEV2"
			},
			{
				"answerId": "314a6b8f-b5f0-443e-adab-d2b36587befc",
				"userId": "B762i26QM7Y275I0w2uAtklg3Gx1"
			},
			{
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2",
				"answerId": "314a6b8f-b5f0-443e-adab-d2b36587befc"
			},
			{
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2",
				"answerId": "314a6b8f-b5f0-443e-adab-d2b36587befc"
			},
			{
				"answerId": "185d717e-5336-4020-a92e-d949bf26f8e2",
				"userId": "btmzQ2h02aa7NwgpOFMGvGSgcv62"
			},
			{
				"userId": "bksg6W8mYZamOArxMiK2pn3UlGe2",
				"answerId": "e603b6e0-78de-46b9-a341-cf73fc06451e"
			}
		],
		"pollNumber": 84,
		"openingTime": 1663919646053,
		"status": "closed",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{
				"value": "fixed",
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0"
			},
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73",
				"value": "<weak>"
			},
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"value": "Temporal API"
			},
			{
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url"
			},
			{
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe",
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"value": "The effect is an infinite loop, due to circularity ",
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a"
			},
			{
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a",
				"value": "<apple>"
			},
			{
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61",
				"value": "<dbz>"
			},
			{
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d",
				"value": "<react>"
			},
			{
				"value": "<card>",
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1"
			},
			{
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b",
				"value": "<vue>"
			},
			{
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b",
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }",
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"value": "Methods like call(), apply()and bind() can refer thisto any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			},
			{
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers"
			},
			{
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a",
				"value": "line-height"
			},
			{
				"value": "Block level elements take the width of the entire row",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary"
			},
			{
				"value": "color",
				"id": "9eadd81b-a378-414a-827b-7c9d105b1ca3"
			},
			{
				"value": "hidden",
				"id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc"
			},
			{
				"id": "db1d4d07-16ed-4031-8fe4-b5f502063844",
				"value": "radio"
			},
			{
				"value": "reset",
				"id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8"
			},
			{
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3",
				"value": "flex-wrap"
			},
			{
				"value": "The margins will collapse, meaning that the margin of the biggest element will win ",
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b"
			},
			{
				"id": "d987a018-4259-438f-8baa-67cb031c3591",
				"value": "debugger"
			},
			{
				"value": "It occurred because you are trying to call a value as a function but the value is not a function",
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f"
			},
			{
				"value": "block scope",
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f"
			},
			{
				"value": "function scope",
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a"
			},
			{
				"value": "lexical scope",
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096"
			},
			{
				"value": "module scope",
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2"
			},
			{
				"value": "global scope",
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f"
			},
			{
				"value": "It is not recommended because it opens a security leak, eval is evil",
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe"
			},
			{
				"value": "ternary operator",
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e"
			},
			{
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5",
				"value": "When you are using TypeScript but don’t really need the types"
			},
			{
				"value": "When you’re working on simple/small applications (<1000 lines of code)",
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a"
			},
			{
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76",
				"value": "When run-time errors are contextually more informative (depends on the project)"
			},
			{
				"value": "When your codebase is at a level it needs flexibility at every level",
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1"
			},
			{
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713",
				"value": "When your “Navi” intellisense suggests “any” "
			},
			{
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15",
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story"
			},
			{
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)",
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913"
			},
			{
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b",
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly"
			},
			{
				"value": "Optimistic UI",
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5"
			},
			{
				"value": "<noscript>",
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2"
			},
			{
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914",
				"value": "Strawperson > Proposal > Draft > Candidate > Finished"
			},
			{
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304",
				"value": "LocalStorage persists across browsers"
			},
			{
				"value": "SessionStorage will be removed when a browser is closed",
				"id": "14000f03-3405-4e5e-b231-81b45faa6654"
			},
			{
				"value": "^",
				"id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c"
			},
			{
				"value": "When writing directions (foreign languages) matter ",
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264"
			},
			{
				"id": "04cfe937-2a1c-4e21-adf4-949835c0d764",
				"value": "try"
			},
			{
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14",
				"value": "finally"
			},
			{
				"id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3",
				"value": "throw"
			},
			{
				"value": "Semantic tags are important for users with screen readers",
				"id": "7767b333-639a-40e7-904d-158fe4127d37"
			},
			{
				"id": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450",
				"value": "Semantic tags show developer’s intent"
			},
			{
				"id": "8c26881c-c657-4e4a-a454-635e6b3a4d62",
				"value": ".map doesn’t run when the array is empty"
			},
			{
				"value": "When you have heavy computations doing the same thing ",
				"id": "7d065da6-592b-4283-8438-18d90ec2f0b6"
			},
			{
				"id": "c8582033-1847-4175-99bd-d02ea8819c9b",
				"value": "Nothing: You can perfectly do this request"
			},
			{
				"value": "It builds confidence in your code because you can run it whenever you make changes in code",
				"id": "6ae45a37-d353-4d95-8c94-c516c45b431c"
			},
			{
				"id": "314a6b8f-b5f0-443e-adab-d2b36587befc",
				"value": "Lifting state up"
			}
		]
	},
	{
		"type": "checkbox",
		"voted": [
			{
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1",
				"answerId": "6ae45a37-d353-4d95-8c94-c516c45b431c"
			},
			{
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1",
				"answerId": "185d717e-5336-4020-a92e-d949bf26f8e2"
			},
			{
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2",
				"answerId": "6ae45a37-d353-4d95-8c94-c516c45b431c"
			},
			{
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2",
				"answerId": "185d717e-5336-4020-a92e-d949bf26f8e2"
			},
			{
				"answerId": "6ae45a37-d353-4d95-8c94-c516c45b431c",
				"userId": "y0Vb464iCdeVzfBJBZzCjCIZIi72"
			},
			{
				"userId": "y0Vb464iCdeVzfBJBZzCjCIZIi72",
				"answerId": "185d717e-5336-4020-a92e-d949bf26f8e2"
			},
			{
				"answerId": "fc94832d-7483-4cb9-9e94-7454dabfc79c",
				"userId": "y0Vb464iCdeVzfBJBZzCjCIZIi72"
			},
			{
				"answerId": "6ae45a37-d353-4d95-8c94-c516c45b431c",
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292"
			},
			{
				"answerId": "fc94832d-7483-4cb9-9e94-7454dabfc79c",
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292"
			},
			{
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292",
				"answerId": "185d717e-5336-4020-a92e-d949bf26f8e2"
			},
			{
				"answerId": "6ae45a37-d353-4d95-8c94-c516c45b431c",
				"userId": "aWI6X9i1RugALHJ7ILr8Xp4baIW2"
			},
			{
				"userId": "aWI6X9i1RugALHJ7ILr8Xp4baIW2",
				"answerId": "fb1eff26-e17f-4160-9a92-d3c77bff4fe1"
			},
			{
				"answerId": "fc94832d-7483-4cb9-9e94-7454dabfc79c",
				"userId": "aWI6X9i1RugALHJ7ILr8Xp4baIW2"
			},
			{
				"answerId": "6ae45a37-d353-4d95-8c94-c516c45b431c",
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1"
			},
			{
				"answerId": "185d717e-5336-4020-a92e-d949bf26f8e2",
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1"
			},
			{
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2",
				"answerId": "6ae45a37-d353-4d95-8c94-c516c45b431c"
			},
			{
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2",
				"answerId": "185d717e-5336-4020-a92e-d949bf26f8e2"
			},
			{
				"userId": "kfrkjsbashYfl1sD2PgVGXcpND63",
				"answerId": "fc94832d-7483-4cb9-9e94-7454dabfc79c"
			},
			{
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3",
				"answerId": "c17ec993-a73d-466f-9e20-01735b25768a"
			},
			{
				"answerId": "185d717e-5336-4020-a92e-d949bf26f8e2",
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3"
			},
			{
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3",
				"answerId": "1a7d45d3-0e45-4d14-8256-962e7d57eb68"
			},
			{
				"answerId": "185d717e-5336-4020-a92e-d949bf26f8e2",
				"userId": "qBHCpnXFOLZsdzcHbKzvkqP6Uck1"
			},
			{
				"answerId": "6ae45a37-d353-4d95-8c94-c516c45b431c",
				"userId": "btmzQ2h02aa7NwgpOFMGvGSgcv62"
			},
			{
				"answerId": "185d717e-5336-4020-a92e-d949bf26f8e2",
				"userId": "btmzQ2h02aa7NwgpOFMGvGSgcv62"
			},
			{
				"userId": "btmzQ2h02aa7NwgpOFMGvGSgcv62",
				"answerId": "fb1eff26-e17f-4160-9a92-d3c77bff4fe1"
			}
		],
		"category": "javascript",
		"status": "closed",
		"codeBlock": "",
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0",
				"value": "fixed"
			},
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73",
				"value": "<weak>"
			},
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a",
				"value": "<apple>"
			},
			{
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61",
				"value": "<dbz>"
			},
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1",
				"value": "<card>"
			},
			{
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b",
				"value": "<vue>"
			},
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			},
			{
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e",
				"value": "arrow functions doesn’t have a “this” context"
			},
			{
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3",
				"value": "Methods like call(), apply()and bind() can refer thisto any object"
			},
			{
				"value": "“this” is determined on how a function is called",
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0"
			},
			{
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers",
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65"
			},
			{
				"value": "line-height",
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a"
			},
			{
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d",
				"value": "Block level elements take the width of the entire row"
			},
			{
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary",
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694"
			},
			{
				"value": "color",
				"id": "9eadd81b-a378-414a-827b-7c9d105b1ca3"
			},
			{
				"id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc",
				"value": "hidden"
			},
			{
				"value": "radio",
				"id": "db1d4d07-16ed-4031-8fe4-b5f502063844"
			},
			{
				"id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8",
				"value": "reset"
			},
			{
				"value": "flex-wrap",
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3"
			},
			{
				"value": "The margins will collapse, meaning that the margin of the biggest element will win ",
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b"
			},
			{
				"value": "debugger",
				"id": "d987a018-4259-438f-8baa-67cb031c3591"
			},
			{
				"value": "It occurred because you are trying to call a value as a function but the value is not a function",
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f"
			},
			{
				"value": "block scope",
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f"
			},
			{
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a",
				"value": "function scope"
			},
			{
				"value": "lexical scope",
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096"
			},
			{
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2",
				"value": "module scope"
			},
			{
				"value": "global scope",
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f"
			},
			{
				"value": "It is not recommended because it opens a security leak, eval is evil",
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe"
			},
			{
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e",
				"value": "ternary operator"
			},
			{
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5",
				"value": "When you are using TypeScript but don’t really need the types"
			},
			{
				"value": "When you’re working on simple/small applications (<1000 lines of code)",
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a"
			},
			{
				"value": "When run-time errors are contextually more informative (depends on the project)",
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76"
			},
			{
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1",
				"value": "When your codebase is at a level it needs flexibility at every level"
			},
			{
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713",
				"value": "When your “Navi” intellisense suggests “any” "
			},
			{
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15",
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story"
			},
			{
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913",
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)"
			},
			{
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b",
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly"
			},
			{
				"value": "Optimistic UI",
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5"
			},
			{
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2",
				"value": "<noscript>"
			},
			{
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914",
				"value": "Strawperson > Proposal > Draft > Candidate > Finished"
			},
			{
				"value": "LocalStorage persists across browsers",
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304"
			},
			{
				"value": "SessionStorage will be removed when a browser is closed",
				"id": "14000f03-3405-4e5e-b231-81b45faa6654"
			},
			{
				"value": "^",
				"id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c"
			},
			{
				"value": "When writing directions (foreign languages) matter ",
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264"
			},
			{
				"value": "try",
				"id": "04cfe937-2a1c-4e21-adf4-949835c0d764"
			},
			{
				"value": "finally",
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14"
			},
			{
				"id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3",
				"value": "throw"
			},
			{
				"id": "7767b333-639a-40e7-904d-158fe4127d37",
				"value": "Semantic tags are important for users with screen readers"
			},
			{
				"id": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450",
				"value": "Semantic tags show developer’s intent"
			},
			{
				"id": "8c26881c-c657-4e4a-a454-635e6b3a4d62",
				"value": ".map doesn’t run when the array is empty"
			},
			{
				"id": "7d065da6-592b-4283-8438-18d90ec2f0b6",
				"value": "When you have heavy computations doing the same thing "
			},
			{
				"value": "Nothing: You can perfectly do this request",
				"id": "c8582033-1847-4175-99bd-d02ea8819c9b"
			},
			{
				"value": "It builds confidence in your code because you can run it whenever you make changes in code",
				"id": "6ae45a37-d353-4d95-8c94-c516c45b431c"
			},
			{
				"value": "It will probably reduce code maintenance",
				"id": "185d717e-5336-4020-a92e-d949bf26f8e2"
			}
		],
		"answers": [
			{
				"id": "fc94832d-7483-4cb9-9e94-7454dabfc79c",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "To encapsulate your code ",
				"type": "radio"
			},
			{
				"id": "c17ec993-a73d-466f-9e20-01735b25768a",
				"blockType": "text",
				"value": "It’s a mandatory step to fulfill the needs for a CI/CD pipeline process, before going to production",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"blockType": "text",
				"value": "We do it because It actually is a requirement when working with agile scrum: Each sprint we don’t have to go to production, but we should strive to writing tests to successfully conclude a sprint",
				"placeholder": "Add option",
				"type": "radio",
				"id": "1a7d45d3-0e45-4d14-8256-962e7d57eb68"
			},
			{
				"blockType": "text",
				"id": "764d758c-5b6d-49c8-9dc3-2a67465006f8",
				"value": "It helps increasing your LoC and code coverage, which reflects your activity and shows your commitment and is important for measuring individual performance in the team and the company ",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"value": "It builds confidence in your code because you can run it whenever you make changes in code",
				"id": "6ae45a37-d353-4d95-8c94-c516c45b431c"
			},
			{
				"type": "radio",
				"id": "fb1eff26-e17f-4160-9a92-d3c77bff4fe1",
				"placeholder": "Add option",
				"value": "It’s just code etiquette we all adhere to, e.g: at casual companies, tests are often not required, but if the company is more corporate, etiquettes like this have to be followed",
				"blockType": "text"
			},
			{
				"type": "radio",
				"id": "0bbb4a23-3f2e-4447-83ae-bf65d2cfefc0",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "It is only beneficial when you don’t have manual testers in you team"
			},
			{
				"blockType": "text",
				"id": "c237e49e-b5ee-4136-b417-136aa85ccd27",
				"value": "It’s a way to guide visual impaired developers in codebases and help them get familiar with it",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"blockType": "text",
				"value": "It will probably reduce code maintenance",
				"placeholder": "Add option",
				"id": "185d717e-5336-4020-a92e-d949bf26f8e2",
				"type": "radio"
			}
		],
		"question": "In JS, ensuring code quality is no jest, what are reasons can you give why we should test?",
		"openingTime": 1664355438997,
		"id": "1211c8ea-4e02-4d3e-9495-3606e6780610",
		"pollNumber": 83
	},
	{
		"openingTime": 1663749409090,
		"question": "In Web, when JS code is served from `http://oodoo.nl/marcianosr/pull-requests` and does a fetch request to `http://oodoo.nl/oodoo-copilot` via HTTP, what problem will you run into for free? ",
		"codeBlock": "",
		"answers": [
			{
				"id": "14c3f63f-195c-4fa3-8005-80a9b16b5d4f",
				"blockType": "text",
				"type": "radio",
				"value": "CORS (ofCORS!): because cross-origin requests are not allowed",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"value": "Nothing: You can perfectly do this request",
				"placeholder": "Add option",
				"id": "c8582033-1847-4175-99bd-d02ea8819c9b",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"value": "Your website will crash because it will get stuck in a request loop",
				"id": "c8c405d1-6b0c-4d5a-8b35-1fcdcaa78611"
			},
			{
				"value": "You’ll run into auth errors ",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "74620b9c-6293-4195-ae09-c60b90e35712",
				"type": "radio"
			},
			{
				"id": "863e5af3-c60f-497e-98fc-065d2314abe0",
				"value": "If your IP is exposed, it will let Oodoo administrators know a request is done to their server because making requests to an URL without the owner(s) knowing may get you in trouble",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"id": "2ac209c6-2776-494d-a7cf-2535f68201a1",
				"blockType": "text",
				"type": "radio",
				"value": "It will work, but throw a warning message in the console, because HTTP is used"
			},
			{
				"blockType": "text",
				"type": "radio",
				"value": "It will not work, and throw an error message in the console, because HTTP is used and violates the security policy",
				"id": "7b480290-a9a0-4eb4-b012-beeeeb5ae5ea",
				"placeholder": "Add option"
			},
			{
				"id": "fc94832d-7483-4cb9-9e94-7454dabfc79c",
				"blockType": "text",
				"value": "It depends on what is returned by HTTP: if the page exists and returns a 200, it’ll be fine, however if the code contains 400’s or 500’s, you’ll get the concerned HTTP status as return (which is seen in the network inspector)",
				"placeholder": "Add option",
				"type": "radio"
			}
		],
		"category": "general-frontend",
		"correctAnswers": [
			{
				"value": "Nothing: You can perfectly do this request",
				"id": "c8582033-1847-4175-99bd-d02ea8819c9b"
			}
		],
		"status": "closed",
		"pollNumber": 82,
		"voted": [
			{
				"answerId": "2ac209c6-2776-494d-a7cf-2535f68201a1",
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2"
			},
			{
				"answerId": "c8582033-1847-4175-99bd-d02ea8819c9b",
				"userId": "kfrkjsbashYfl1sD2PgVGXcpND63"
			},
			{
				"answerId": "2ac209c6-2776-494d-a7cf-2535f68201a1",
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292"
			},
			{
				"answerId": "14c3f63f-195c-4fa3-8005-80a9b16b5d4f",
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1"
			},
			{
				"userId": "GxloHn9wFkRFYYHXSuTj56kXd0q2",
				"answerId": "14c3f63f-195c-4fa3-8005-80a9b16b5d4f"
			},
			{
				"userId": "y0Vb464iCdeVzfBJBZzCjCIZIi72",
				"answerId": "fc94832d-7483-4cb9-9e94-7454dabfc79c"
			},
			{
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1",
				"answerId": "c8582033-1847-4175-99bd-d02ea8819c9b"
			},
			{
				"answerId": "fc94832d-7483-4cb9-9e94-7454dabfc79c",
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3"
			},
			{
				"userId": "aWI6X9i1RugALHJ7ILr8Xp4baIW2",
				"answerId": "7b480290-a9a0-4eb4-b012-beeeeb5ae5ea"
			},
			{
				"answerId": "c8582033-1847-4175-99bd-d02ea8819c9b",
				"userId": "qBHCpnXFOLZsdzcHbKzvkqP6Uck1"
			},
			{
				"userId": "B762i26QM7Y275I0w2uAtklg3Gx1",
				"answerId": "2ac209c6-2776-494d-a7cf-2535f68201a1"
			}
		],
		"type": "radio",
		"id": "dfb8ecd4-f6ab-4847-bc75-f8518e371b39"
	},
	{
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0",
				"value": "fixed"
			},
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73",
				"value": "<weak>"
			},
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe",
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"value": "The effect is an infinite loop, due to circularity ",
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a"
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61",
				"value": "<dbz>"
			},
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1",
				"value": "<card>"
			},
			{
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b",
				"value": "<vue>"
			},
			{
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b",
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"value": "Methods like call(), apply()and bind() can refer thisto any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"value": "“this” is determined on how a function is called",
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0"
			},
			{
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers",
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65"
			},
			{
				"value": "line-height",
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a"
			},
			{
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d",
				"value": "Block level elements take the width of the entire row"
			},
			{
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary"
			},
			{
				"id": "9eadd81b-a378-414a-827b-7c9d105b1ca3",
				"value": "color"
			},
			{
				"value": "hidden",
				"id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc"
			},
			{
				"id": "db1d4d07-16ed-4031-8fe4-b5f502063844",
				"value": "radio"
			},
			{
				"id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8",
				"value": "reset"
			},
			{
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3",
				"value": "flex-wrap"
			},
			{
				"value": "The margins will collapse, meaning that the margin of the biggest element will win ",
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b"
			},
			{
				"id": "d987a018-4259-438f-8baa-67cb031c3591",
				"value": "debugger"
			},
			{
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f",
				"value": "It occurred because you are trying to call a value as a function but the value is not a function"
			},
			{
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f",
				"value": "block scope"
			},
			{
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a",
				"value": "function scope"
			},
			{
				"value": "lexical scope",
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096"
			},
			{
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2",
				"value": "module scope"
			},
			{
				"value": "global scope",
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f"
			},
			{
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe",
				"value": "It is not recommended because it opens a security leak, eval is evil"
			},
			{
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e",
				"value": "ternary operator"
			},
			{
				"value": "When you are using TypeScript but don’t really need the types",
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5"
			},
			{
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a",
				"value": "When you’re working on simple/small applications (<1000 lines of code)"
			},
			{
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76",
				"value": "When run-time errors are contextually more informative (depends on the project)"
			},
			{
				"value": "When your codebase is at a level it needs flexibility at every level",
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1"
			},
			{
				"value": "When your “Navi” intellisense suggests “any” ",
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713"
			},
			{
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15",
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story"
			},
			{
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913",
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)"
			},
			{
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b",
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly"
			},
			{
				"value": "Optimistic UI",
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5"
			},
			{
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2",
				"value": "<noscript>"
			},
			{
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914",
				"value": "Strawperson > Proposal > Draft > Candidate > Finished"
			},
			{
				"value": "LocalStorage persists across browsers",
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304"
			},
			{
				"id": "14000f03-3405-4e5e-b231-81b45faa6654",
				"value": "SessionStorage will be removed when a browser is closed"
			},
			{
				"id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c",
				"value": "^"
			},
			{
				"value": "When writing directions (foreign languages) matter ",
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264"
			},
			{
				"value": "try",
				"id": "04cfe937-2a1c-4e21-adf4-949835c0d764"
			},
			{
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14",
				"value": "finally"
			},
			{
				"id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3",
				"value": "throw"
			},
			{
				"value": "Semantic tags are important for users with screen readers",
				"id": "7767b333-639a-40e7-904d-158fe4127d37"
			},
			{
				"id": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450",
				"value": "Semantic tags show developer’s intent"
			},
			{
				"value": ".map doesn’t run when the array is empty",
				"id": "8c26881c-c657-4e4a-a454-635e6b3a4d62"
			},
			{
				"value": "When you have heavy computations doing the same thing ",
				"id": "7d065da6-592b-4283-8438-18d90ec2f0b6"
			},
			{
				"value": "A nodelist of document nodes",
				"id": "14c3f63f-195c-4fa3-8005-80a9b16b5d4f"
			}
		],
		"codeBlock": "",
		"openingTime": null,
		"pollNumber": 81,
		"category": "javascript",
		"type": "radio",
		"id": "212e5f4d-88bc-43e3-a517-db2e430fe118",
		"question": "In JS, the DOM API contains querySelectorAll, what will be returned when you give this function a call? ",
		"answers": [
			{
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "An array of document nodes",
				"id": "79f2a624-4ec5-41b2-a711-984cb76b5e41"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "e4ad5b01-976b-4ecd-a9e7-f9ff41713111",
				"blockType": "text",
				"value": "An object of document nodes "
			},
			{
				"blockType": "text",
				"id": "82fba6ff-b288-4c0a-83ee-4970f1e75b33",
				"placeholder": "Add option",
				"value": "A set of document nodes ",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"value": "A list of document nodes wrapped in <li>",
				"id": "c4c0881e-9186-4bf4-a324-6a23d272cd83",
				"blockType": "text",
				"type": "radio"
			},
			{
				"blockType": "text",
				"type": "radio",
				"value": "A list of divs",
				"placeholder": "Add option",
				"id": "4b3c466c-f2c5-4f53-a81a-4220afb985d6"
			},
			{
				"blockType": "text",
				"id": "9ba787df-c87c-46b5-aea2-4559f8f23d24",
				"value": "null",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"value": "A nodelist of document nodes",
				"blockType": "text",
				"type": "radio",
				"id": "14c3f63f-195c-4fa3-8005-80a9b16b5d4f"
			}
		],
		"status": "closed",
		"voted": [
			{
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1",
				"answerId": "14c3f63f-195c-4fa3-8005-80a9b16b5d4f"
			},
			{
				"answerId": "79f2a624-4ec5-41b2-a711-984cb76b5e41",
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2"
			},
			{
				"userId": "aWI6X9i1RugALHJ7ILr8Xp4baIW2",
				"answerId": "14c3f63f-195c-4fa3-8005-80a9b16b5d4f"
			},
			{
				"answerId": "14c3f63f-195c-4fa3-8005-80a9b16b5d4f",
				"userId": "kfrkjsbashYfl1sD2PgVGXcpND63"
			},
			{
				"answerId": "14c3f63f-195c-4fa3-8005-80a9b16b5d4f",
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2"
			},
			{
				"answerId": "14c3f63f-195c-4fa3-8005-80a9b16b5d4f",
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292"
			},
			{
				"answerId": "14c3f63f-195c-4fa3-8005-80a9b16b5d4f",
				"userId": "GxloHn9wFkRFYYHXSuTj56kXd0q2"
			},
			{
				"userId": "XYkYvhODvjg1pLVfqtFXAGZxuCj1",
				"answerId": "e4ad5b01-976b-4ecd-a9e7-f9ff41713111"
			},
			{
				"answerId": "14c3f63f-195c-4fa3-8005-80a9b16b5d4f",
				"userId": "btmzQ2h02aa7NwgpOFMGvGSgcv62"
			},
			{
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3",
				"answerId": "14c3f63f-195c-4fa3-8005-80a9b16b5d4f"
			},
			{
				"answerId": "79f2a624-4ec5-41b2-a711-984cb76b5e41",
				"userId": "e9SDIhaJ4bQzCoIVN56dHmmJM3I3"
			},
			{
				"userId": "1at5cLzMWad6Kb4bXJGzbuCIe383",
				"answerId": "79f2a624-4ec5-41b2-a711-984cb76b5e41"
			},
			{
				"userId": "qBHCpnXFOLZsdzcHbKzvkqP6Uck1",
				"answerId": "79f2a624-4ec5-41b2-a711-984cb76b5e41"
			}
		]
	},
	{
		"voted": [
			{
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292",
				"answerId": "4f1091d4-e4b1-4876-a779-58d9b08e1ea5"
			},
			{
				"answerId": "7d065da6-592b-4283-8438-18d90ec2f0b6",
				"userId": "GxloHn9wFkRFYYHXSuTj56kXd0q2"
			},
			{
				"userId": "GxloHn9wFkRFYYHXSuTj56kXd0q2",
				"answerId": "4f1091d4-e4b1-4876-a779-58d9b08e1ea5"
			},
			{
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1",
				"answerId": "7d065da6-592b-4283-8438-18d90ec2f0b6"
			},
			{
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1",
				"answerId": "8c26881c-c657-4e4a-a454-635e6b3a4d62"
			},
			{
				"answerId": "7680be63-8a37-427a-a262-ab87151ad6ff",
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1"
			},
			{
				"answerId": "7d065da6-592b-4283-8438-18d90ec2f0b6",
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1"
			},
			{
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3",
				"answerId": "4f1091d4-e4b1-4876-a779-58d9b08e1ea5"
			},
			{
				"answerId": "7d065da6-592b-4283-8438-18d90ec2f0b6",
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2"
			},
			{
				"userId": "B762i26QM7Y275I0w2uAtklg3Gx1",
				"answerId": "7d065da6-592b-4283-8438-18d90ec2f0b6"
			},
			{
				"answerId": "4f1091d4-e4b1-4876-a779-58d9b08e1ea5",
				"userId": "btmzQ2h02aa7NwgpOFMGvGSgcv62"
			},
			{
				"answerId": "7d065da6-592b-4283-8438-18d90ec2f0b6",
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2"
			}
		],
		"status": "closed",
		"pollNumber": 80,
		"correctAnswers": [
			{
				"value": "When you have heavy computations doing the same thing ",
				"id": "7d065da6-592b-4283-8438-18d90ec2f0b6"
			},
			{
				"id": "8c26881c-c657-4e4a-a454-635e6b3a4d62",
				"value": "When your function is pure "
			}
		],
		"answers": [
			{
				"blockType": "text",
				"value": "Memoization should by default be applied on all computations to improve the expense of allocated memory when writing code",
				"type": "radio",
				"placeholder": "Add option",
				"id": "a047b356-f2f1-4a1b-8cb3-fd5f506c18a8"
			},
			{
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "When you notice your UI reacts very slow",
				"id": "7680be63-8a37-427a-a262-ab87151ad6ff"
			},
			{
				"blockType": "text",
				"type": "radio",
				"value": "Memoization is actually the process of storing values in variables which means values are “remembered” or to stay with the term: “memorized/memoized”; Values are “memorized” in computer memory, so basically it’s always applied without realizing it",
				"id": "4f1091d4-e4b1-4876-a779-58d9b08e1ea5",
				"placeholder": "Add option"
			},
			{
				"value": "Memoization is not dedicated to JS only: it’s a “human cognition technique” researched and encouraged by neuroscientists and often used by programmers when they want to study something new concepts or a new programming language efficiently",
				"id": "d90e1c21-4888-4044-801e-4f85696dff29",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"value": "When memory leaks occur memoization is used to fix the memory leaks ",
				"blockType": "text",
				"id": "627a48ad-744e-4d2b-8566-1ea16db2e819",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"id": "7d065da6-592b-4283-8438-18d90ec2f0b6",
				"value": "When you have heavy computations doing the same thing "
			},
			{
				"placeholder": "Add option",
				"value": "You don’t manually: When storing variables in JS, your allocating memory, which is what “memoization” is",
				"blockType": "text",
				"id": "02e418cb-7fcb-4550-b127-c812b6809817",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": "When your function is pure ",
				"id": "8c26881c-c657-4e4a-a454-635e6b3a4d62",
				"type": "radio"
			}
		],
		"question": "In JS, memoization is a technique often applied, in what context is the use of memoization justified?  ",
		"codeBlock": "",
		"category": "javascript",
		"type": "checkbox",
		"openingTime": 1663745190977,
		"id": "345a656b-71f7-4f35-9a45-cd03e8a6c849"
	},
	{
		"id": "fe664a79-7cf5-48e2-92d9-8c5780a79cba",
		"openingTime": null,
		"voted": [],
		"category": "javascript",
		"answers": [
			{
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"id": "a047b356-f2f1-4a1b-8cb3-fd5f506c18a8",
				"value": ".map creates an array for each element it loops over"
			},
			{
				"type": "radio",
				"id": "7680be63-8a37-427a-a262-ab87151ad6ff",
				"blockType": "text",
				"value": ".map always creates a new array as return value",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"id": "4f1091d4-e4b1-4876-a779-58d9b08e1ea5",
				"blockType": "text",
				"placeholder": "Add option",
				"value": ".map should always be preferred over for and forEach because .map is immutable"
			},
			{
				"id": "d90e1c21-4888-4044-801e-4f85696dff29",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"value": ".map can be used on array and array-like (e.g node lists) items"
			},
			{
				"blockType": "text",
				"type": "radio",
				"id": "627a48ad-744e-4d2b-8566-1ea16db2e819",
				"value": " .map is a higher order function used to transform data",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"type": "radio",
				"value": ".map is a higher order function used to filter items in your array for example ",
				"placeholder": "Add option",
				"id": "7d065da6-592b-4283-8438-18d90ec2f0b6"
			},
			{
				"id": "02e418cb-7fcb-4550-b127-c812b6809817",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"value": ".map is a function google came with"
			},
			{
				"value": ".map doesn’t run when the array is empty",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"id": "8c26881c-c657-4e4a-a454-635e6b3a4d62"
			},
			{
				"id": "79f2a624-4ec5-41b2-a711-984cb76b5e41",
				"blockType": "text",
				"type": "radio",
				"value": ".map mutates the array you are working with",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"value": ".map returns the data type you return in your callback function e.g: when returning an object, you’ll get an object as result",
				"type": "radio",
				"id": "824fed95-1577-4e79-9756-45d6b016cad0"
			},
			{
				"id": "a48f211d-2155-46c1-b73d-badb6a4dba7c",
				"blockType": "text",
				"value": ".map is not a browser standard yet, and has to be babelified",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"id": "f86a9e34-ff32-4ba2-81af-e7075262f400",
				"blockType": "text",
				"placeholder": "Add option",
				"value": ".map and .forEach are the same; it doesn’t really matter what you use",
				"type": "radio"
			}
		],
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{
				"value": "fixed",
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0"
			},
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73",
				"value": "<weak>"
			},
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"value": "Temporal API"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe",
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{
				"value": "<dbz>",
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61"
			},
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1",
				"value": "<card>"
			},
			{
				"value": "<vue>",
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b"
			},
			{
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b",
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3",
				"value": "Methods like call(), apply()and bind() can refer thisto any object"
			},
			{
				"value": "“this” is determined on how a function is called",
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0"
			},
			{
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers",
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65"
			},
			{
				"value": "line-height",
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a"
			},
			{
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d",
				"value": "Block level elements take the width of the entire row"
			},
			{
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary"
			},
			{
				"id": "9eadd81b-a378-414a-827b-7c9d105b1ca3",
				"value": "color"
			},
			{
				"value": "hidden",
				"id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc"
			},
			{
				"value": "radio",
				"id": "db1d4d07-16ed-4031-8fe4-b5f502063844"
			},
			{
				"id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8",
				"value": "reset"
			},
			{
				"value": "flex-wrap",
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3"
			},
			{
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b",
				"value": "The margins will collapse, meaning that the margin of the biggest element will win "
			},
			{
				"value": "debugger",
				"id": "d987a018-4259-438f-8baa-67cb031c3591"
			},
			{
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f",
				"value": "It occurred because you are trying to call a value as a function but the value is not a function"
			},
			{
				"value": "block scope",
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f"
			},
			{
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a",
				"value": "function scope"
			},
			{
				"value": "lexical scope",
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096"
			},
			{
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2",
				"value": "module scope"
			},
			{
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f",
				"value": "global scope"
			},
			{
				"value": "It is not recommended because it opens a security leak, eval is evil",
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe"
			},
			{
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e",
				"value": "ternary operator"
			},
			{
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5",
				"value": "When you are using TypeScript but don’t really need the types"
			},
			{
				"value": "When you’re working on simple/small applications (<1000 lines of code)",
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a"
			},
			{
				"value": "When run-time errors are contextually more informative (depends on the project)",
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76"
			},
			{
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1",
				"value": "When your codebase is at a level it needs flexibility at every level"
			},
			{
				"value": "When your “Navi” intellisense suggests “any” ",
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713"
			},
			{
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story",
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15"
			},
			{
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)",
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913"
			},
			{
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b",
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly"
			},
			{
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5",
				"value": "Optimistic UI"
			},
			{
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2",
				"value": "<noscript>"
			},
			{
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914",
				"value": "Strawperson > Proposal > Draft > Candidate > Finished"
			},
			{
				"value": "LocalStorage persists across browsers",
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304"
			},
			{
				"value": "SessionStorage will be removed when a browser is closed",
				"id": "14000f03-3405-4e5e-b231-81b45faa6654"
			},
			{
				"id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c",
				"value": "^"
			},
			{
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264",
				"value": "When writing directions (foreign languages) matter "
			},
			{
				"value": "try",
				"id": "04cfe937-2a1c-4e21-adf4-949835c0d764"
			},
			{
				"value": "finally",
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14"
			},
			{
				"id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3",
				"value": "throw"
			},
			{
				"value": "Semantic tags are important for users with screen readers",
				"id": "7767b333-639a-40e7-904d-158fe4127d37"
			},
			{
				"value": "Semantic tags show developer’s intent",
				"id": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450"
			},
			{
				"id": "7680be63-8a37-427a-a262-ab87151ad6ff",
				"value": ".map always creates a new array as return value"
			},
			{
				"value": " .map is a higher order function used to transform data",
				"id": "627a48ad-744e-4d2b-8566-1ea16db2e819"
			},
			{
				"id": "8c26881c-c657-4e4a-a454-635e6b3a4d62",
				"value": ".map doesn’t run when the array is empty"
			}
		],
		"codeBlock": "",
		"type": "checkbox",
		"pollNumber": 79,
		"question": "In JS, for this question seasoned developers can take a nap, name some facts to be aware of when using .map?",
		"status": "new"
	},
	{
		"voted": [],
		"category": "css",
		"codeBlock": "",
		"openingTime": null,
		"pollNumber": 78,
		"type": "radio",
		"status": "new",
		"question": "In CSS, flexbox has a property flex-shrink, now how does this work, do you think? ",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{
				"value": "fixed",
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0"
			},
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73",
				"value": "<weak>"
			},
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"value": "Temporal API"
			},
			{
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{
				"value": "<dbz>",
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61"
			},
			{
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d",
				"value": "<react>"
			},
			{
				"value": "<card>",
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1"
			},
			{
				"value": "<vue>",
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b"
			},
			{
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b",
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			},
			{
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e",
				"value": "arrow functions doesn’t have a “this” context"
			},
			{
				"value": "Methods like call(), apply()and bind() can refer thisto any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			},
			{
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers",
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65"
			},
			{
				"value": "line-height",
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a"
			},
			{
				"value": "Block level elements take the width of the entire row",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary"
			},
			{
				"value": "color",
				"id": "9eadd81b-a378-414a-827b-7c9d105b1ca3"
			},
			{
				"id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc",
				"value": "hidden"
			},
			{
				"id": "db1d4d07-16ed-4031-8fe4-b5f502063844",
				"value": "radio"
			},
			{
				"id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8",
				"value": "reset"
			},
			{
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3",
				"value": "flex-wrap"
			},
			{
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b",
				"value": "The margins will collapse, meaning that the margin of the biggest element will win "
			},
			{
				"id": "d987a018-4259-438f-8baa-67cb031c3591",
				"value": "debugger"
			},
			{
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f",
				"value": "It occurred because you are trying to call a value as a function but the value is not a function"
			},
			{
				"value": "block scope",
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f"
			},
			{
				"value": "function scope",
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a"
			},
			{
				"value": "lexical scope",
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096"
			},
			{
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2",
				"value": "module scope"
			},
			{
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f",
				"value": "global scope"
			},
			{
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe",
				"value": "It is not recommended because it opens a security leak, eval is evil"
			},
			{
				"value": "ternary operator",
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e"
			},
			{
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5",
				"value": "When you are using TypeScript but don’t really need the types"
			},
			{
				"value": "When you’re working on simple/small applications (<1000 lines of code)",
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a"
			},
			{
				"value": "When run-time errors are contextually more informative (depends on the project)",
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76"
			},
			{
				"value": "When your codebase is at a level it needs flexibility at every level",
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1"
			},
			{
				"value": "When your “Navi” intellisense suggests “any” ",
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713"
			},
			{
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story",
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15"
			},
			{
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)",
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913"
			},
			{
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly",
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b"
			},
			{
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5",
				"value": "Optimistic UI"
			},
			{
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2",
				"value": "<noscript>"
			},
			{
				"value": "Strawperson > Proposal > Draft > Candidate > Finished",
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914"
			},
			{
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304",
				"value": "LocalStorage persists across browsers"
			},
			{
				"value": "SessionStorage will be removed when a browser is closed",
				"id": "14000f03-3405-4e5e-b231-81b45faa6654"
			},
			{
				"id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c",
				"value": "^"
			},
			{
				"value": "When writing directions (foreign languages) matter ",
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264"
			},
			{
				"id": "04cfe937-2a1c-4e21-adf4-949835c0d764",
				"value": "try"
			},
			{
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14",
				"value": "finally"
			},
			{
				"id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3",
				"value": "throw"
			},
			{
				"value": "Semantic tags are important for users with screen readers",
				"id": "7767b333-639a-40e7-904d-158fe4127d37"
			},
			{
				"id": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450",
				"value": "Semantic tags show developer’s intent"
			},
			{
				"id": "7d065da6-592b-4283-8438-18d90ec2f0b6",
				"value": "It specifies how much a flex item will shrink relatively to other flex items "
			}
		],
		"id": "c00e3ab7-4fdc-4c16-b824-cbce65cd833b",
		"answers": [
			{
				"id": "a047b356-f2f1-4a1b-8cb3-fd5f506c18a8",
				"type": "radio",
				"value": "It specifies the amount of space a flex item can occupy when hitting the built-in browser breakpoint",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"value": "It allows you to shrink elements with a factor based on the given width / height. If a given element is 100px wide, the default flex-shrink value is 1. When you change it to 2, it will be 200px ",
				"id": "7680be63-8a37-427a-a262-ab87151ad6ff"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "4f1091d4-e4b1-4876-a779-58d9b08e1ea5",
				"blockType": "text",
				"value": "It specifies that your container is responsive "
			},
			{
				"blockType": "text",
				"id": "d90e1c21-4888-4044-801e-4f85696dff29",
				"type": "radio",
				"value": "It ensures the flex items will shrink until it’s content width",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"blockType": "text",
				"value": "It ensures all flex items will stay on a single line",
				"placeholder": "Add option",
				"id": "627a48ad-744e-4d2b-8566-1ea16db2e819"
			},
			{
				"placeholder": "Add option",
				"value": "It specifies how much a flex item will shrink relatively to other flex items ",
				"id": "7d065da6-592b-4283-8438-18d90ec2f0b6",
				"type": "radio",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"value": "It allows resizing elements on the 2d plane",
				"id": "02e418cb-7fcb-4550-b127-c812b6809817"
			},
			{
				"id": "8c26881c-c657-4e4a-a454-635e6b3a4d62",
				"type": "radio",
				"value": "It allows to shrink the screen size off the users device",
				"placeholder": "Add option",
				"blockType": "text"
			}
		]
	},
	{
		"pollNumber": 77,
		"category": "javascript",
		"answers": [
			{
				"value": "true",
				"id": "a047b356-f2f1-4a1b-8cb3-fd5f506c18a8",
				"blockType": "code",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"value": "false",
				"blockType": "code",
				"type": "radio",
				"id": "7680be63-8a37-427a-a262-ab87151ad6ff",
				"placeholder": "Add option"
			}
		],
		"id": "9b72e07f-c09d-4cc9-8f0d-e450076ce60d",
		"voted": [],
		"question": "In JS, `10 < 20 < 30` is either truthy or falsey, will the result be?",
		"type": "radio",
		"openingTime": null,
		"status": "new",
		"codeBlock": "",
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0",
				"value": "fixed"
			},
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73",
				"value": "<weak>"
			},
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe",
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			},
			{
				"value": "The effect is an infinite loop, due to circularity ",
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a"
			},
			{
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a",
				"value": "<apple>"
			},
			{
				"value": "<dbz>",
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61"
			},
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{
				"value": "<card>",
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1"
			},
			{
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b",
				"value": "<vue>"
			},
			{
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b",
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there"
			},
			{
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}",
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16"
			},
			{
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }",
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3",
				"value": "Methods like call(), apply()and bind() can refer thisto any object"
			},
			{
				"value": "“this” is determined on how a function is called",
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0"
			},
			{
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers"
			},
			{
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a",
				"value": "line-height"
			},
			{
				"value": "Block level elements take the width of the entire row",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary",
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694"
			},
			{
				"id": "9eadd81b-a378-414a-827b-7c9d105b1ca3",
				"value": "color"
			},
			{
				"id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc",
				"value": "hidden"
			},
			{
				"id": "db1d4d07-16ed-4031-8fe4-b5f502063844",
				"value": "radio"
			},
			{
				"value": "reset",
				"id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8"
			},
			{
				"value": "flex-wrap",
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3"
			},
			{
				"value": "The margins will collapse, meaning that the margin of the biggest element will win ",
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b"
			},
			{
				"value": "debugger",
				"id": "d987a018-4259-438f-8baa-67cb031c3591"
			},
			{
				"value": "It occurred because you are trying to call a value as a function but the value is not a function",
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f"
			},
			{
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f",
				"value": "block scope"
			},
			{
				"value": "function scope",
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a"
			},
			{
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096",
				"value": "lexical scope"
			},
			{
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2",
				"value": "module scope"
			},
			{
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f",
				"value": "global scope"
			},
			{
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe",
				"value": "It is not recommended because it opens a security leak, eval is evil"
			},
			{
				"value": "ternary operator",
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e"
			},
			{
				"value": "When you are using TypeScript but don’t really need the types",
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5"
			},
			{
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a",
				"value": "When you’re working on simple/small applications (<1000 lines of code)"
			},
			{
				"value": "When run-time errors are contextually more informative (depends on the project)",
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76"
			},
			{
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1",
				"value": "When your codebase is at a level it needs flexibility at every level"
			},
			{
				"value": "When your “Navi” intellisense suggests “any” ",
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713"
			},
			{
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15",
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story"
			},
			{
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)",
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913"
			},
			{
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b",
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly"
			},
			{
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5",
				"value": "Optimistic UI"
			},
			{
				"value": "<noscript>",
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2"
			},
			{
				"value": "Strawperson > Proposal > Draft > Candidate > Finished",
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914"
			},
			{
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304",
				"value": "LocalStorage persists across browsers"
			},
			{
				"id": "14000f03-3405-4e5e-b231-81b45faa6654",
				"value": "SessionStorage will be removed when a browser is closed"
			},
			{
				"value": "^",
				"id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c"
			},
			{
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264",
				"value": "When writing directions (foreign languages) matter "
			},
			{
				"id": "04cfe937-2a1c-4e21-adf4-949835c0d764",
				"value": "try"
			},
			{
				"value": "finally",
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14"
			},
			{
				"id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3",
				"value": "throw"
			},
			{
				"value": "Semantic tags are important for users with screen readers",
				"id": "7767b333-639a-40e7-904d-158fe4127d37"
			},
			{
				"id": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450",
				"value": "Semantic tags show developer’s intent"
			},
			{
				"value": "false",
				"id": "7680be63-8a37-427a-a262-ab87151ad6ff"
			}
		]
	},
	{
		"pollNumber": 76,
		"voted": [],
		"category": "javascript",
		"question": "In JS, when the output of `false === \"false\"` is `false` , `true === “true”` is `false`, NaN == NaN is `false`,  what will the output of `true == “true”` bring you? ",
		"status": "closed",
		"type": "radio",
		"codeBlock": "",
		"openingTime": null,
		"answers": [
			{
				"blockType": "code",
				"placeholder": "Add option",
				"id": "a047b356-f2f1-4a1b-8cb3-fd5f506c18a8",
				"type": "radio",
				"value": "true"
			},
			{
				"type": "radio",
				"id": "7680be63-8a37-427a-a262-ab87151ad6ff",
				"blockType": "code",
				"value": "false",
				"placeholder": "Add option"
			}
		],
		"id": "f429bf4d-13a9-47e0-8e35-428a0f58c41c",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{
				"value": "fixed",
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0"
			},
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73",
				"value": "<weak>"
			},
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{
				"value": "<dbz>",
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61"
			},
			{
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d",
				"value": "<react>"
			},
			{
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1",
				"value": "<card>"
			},
			{
				"value": "<vue>",
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b"
			},
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }",
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"value": "Methods like call(), apply()and bind() can refer thisto any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"value": "“this” is determined on how a function is called",
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0"
			},
			{
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers"
			},
			{
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a",
				"value": "line-height"
			},
			{
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d",
				"value": "Block level elements take the width of the entire row"
			},
			{
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary"
			},
			{
				"id": "9eadd81b-a378-414a-827b-7c9d105b1ca3",
				"value": "color"
			},
			{
				"value": "hidden",
				"id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc"
			},
			{
				"value": "radio",
				"id": "db1d4d07-16ed-4031-8fe4-b5f502063844"
			},
			{
				"value": "reset",
				"id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8"
			},
			{
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3",
				"value": "flex-wrap"
			},
			{
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b",
				"value": "The margins will collapse, meaning that the margin of the biggest element will win "
			},
			{
				"id": "d987a018-4259-438f-8baa-67cb031c3591",
				"value": "debugger"
			},
			{
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f",
				"value": "It occurred because you are trying to call a value as a function but the value is not a function"
			},
			{
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f",
				"value": "block scope"
			},
			{
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a",
				"value": "function scope"
			},
			{
				"value": "lexical scope",
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096"
			},
			{
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2",
				"value": "module scope"
			},
			{
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f",
				"value": "global scope"
			},
			{
				"value": "It is not recommended because it opens a security leak, eval is evil",
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe"
			},
			{
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e",
				"value": "ternary operator"
			},
			{
				"value": "When you are using TypeScript but don’t really need the types",
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5"
			},
			{
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a",
				"value": "When you’re working on simple/small applications (<1000 lines of code)"
			},
			{
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76",
				"value": "When run-time errors are contextually more informative (depends on the project)"
			},
			{
				"value": "When your codebase is at a level it needs flexibility at every level",
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1"
			},
			{
				"value": "When your “Navi” intellisense suggests “any” ",
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713"
			},
			{
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story",
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15"
			},
			{
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913",
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)"
			},
			{
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly",
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b"
			},
			{
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5",
				"value": "Optimistic UI"
			},
			{
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2",
				"value": "<noscript>"
			},
			{
				"value": "Strawperson > Proposal > Draft > Candidate > Finished",
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914"
			},
			{
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304",
				"value": "LocalStorage persists across browsers"
			},
			{
				"id": "14000f03-3405-4e5e-b231-81b45faa6654",
				"value": "SessionStorage will be removed when a browser is closed"
			},
			{
				"id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c",
				"value": "^"
			},
			{
				"value": "When writing directions (foreign languages) matter ",
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264"
			},
			{
				"value": "try",
				"id": "04cfe937-2a1c-4e21-adf4-949835c0d764"
			},
			{
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14",
				"value": "finally"
			},
			{
				"value": "throw",
				"id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3"
			},
			{
				"value": "Semantic tags are important for users with screen readers",
				"id": "7767b333-639a-40e7-904d-158fe4127d37"
			},
			{
				"id": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450",
				"value": "Semantic tags show developer’s intent"
			},
			{
				"value": "false",
				"id": "7680be63-8a37-427a-a262-ab87151ad6ff"
			}
		]
	},
	{
		"voted": [
			{
				"answerId": "418dc3a9-94e6-46a9-b7c5-124933a65946",
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2"
			},
			{
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2",
				"answerId": "7767b333-639a-40e7-904d-158fe4127d37"
			},
			{
				"answerId": "4d6a5a08-4551-4485-b2e6-c718e6f49344",
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2"
			},
			{
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2",
				"answerId": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450"
			},
			{
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2",
				"answerId": "0a223e3f-a2ee-431c-9aa4-2a328d3fe8ea"
			},
			{
				"answerId": "a047b356-f2f1-4a1b-8cb3-fd5f506c18a8",
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2"
			},
			{
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292",
				"answerId": "418dc3a9-94e6-46a9-b7c5-124933a65946"
			},
			{
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292",
				"answerId": "f7d38bb0-a355-4f89-9722-8d258cedd5c2"
			},
			{
				"answerId": "7767b333-639a-40e7-904d-158fe4127d37",
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292"
			},
			{
				"answerId": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450",
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292"
			},
			{
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292",
				"answerId": "4d6a5a08-4551-4485-b2e6-c718e6f49344"
			},
			{
				"answerId": "418dc3a9-94e6-46a9-b7c5-124933a65946",
				"userId": "btmzQ2h02aa7NwgpOFMGvGSgcv62"
			},
			{
				"userId": "aWI6X9i1RugALHJ7ILr8Xp4baIW2",
				"answerId": "7767b333-639a-40e7-904d-158fe4127d37"
			},
			{
				"answerId": "418dc3a9-94e6-46a9-b7c5-124933a65946",
				"userId": "aWI6X9i1RugALHJ7ILr8Xp4baIW2"
			},
			{
				"userId": "B762i26QM7Y275I0w2uAtklg3Gx1",
				"answerId": "f7d38bb0-a355-4f89-9722-8d258cedd5c2"
			},
			{
				"userId": "B762i26QM7Y275I0w2uAtklg3Gx1",
				"answerId": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450"
			},
			{
				"userId": "GxloHn9wFkRFYYHXSuTj56kXd0q2",
				"answerId": "418dc3a9-94e6-46a9-b7c5-124933a65946"
			},
			{
				"userId": "GxloHn9wFkRFYYHXSuTj56kXd0q2",
				"answerId": "7767b333-639a-40e7-904d-158fe4127d37"
			},
			{
				"answerId": "7767b333-639a-40e7-904d-158fe4127d37",
				"userId": "y0Vb464iCdeVzfBJBZzCjCIZIi72"
			},
			{
				"answerId": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450",
				"userId": "y0Vb464iCdeVzfBJBZzCjCIZIi72"
			},
			{
				"answerId": "a047b356-f2f1-4a1b-8cb3-fd5f506c18a8",
				"userId": "kfrkjsbashYfl1sD2PgVGXcpND63"
			},
			{
				"answerId": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450",
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1"
			},
			{
				"answerId": "418dc3a9-94e6-46a9-b7c5-124933a65946",
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1"
			},
			{
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1",
				"answerId": "7767b333-639a-40e7-904d-158fe4127d37"
			},
			{
				"answerId": "418dc3a9-94e6-46a9-b7c5-124933a65946",
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3"
			},
			{
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1",
				"answerId": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450"
			}
		],
		"question": "In HTML, semantic tags it’s what it’s all about, what benefits of writing semantic tags can you name without doubt?",
		"answers": [
			{
				"blockType": "text",
				"value": "Semantic tags have display flex by default, which encourages the use of semantic tags and makes styling easier",
				"type": "radio",
				"placeholder": "Add option",
				"id": "a5a37123-8eb8-4055-ab9f-495c97e48d5e"
			},
			{
				"id": "418dc3a9-94e6-46a9-b7c5-124933a65946",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"value": "Semantic tags are important to SEO; page ranking is influenced"
			},
			{
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"value": "Semantic tags increases performance of page rendering because the browser can skim easier through meaningful tags than when having a forest of <divs>",
				"id": "f7d38bb0-a355-4f89-9722-8d258cedd5c2"
			},
			{
				"id": "925d5135-b6f0-4346-93af-f974b886fcee",
				"type": "radio",
				"value": "Semantic tags can’t be ignored because the browser compiler will throw an error at runtime when semantic tags are not used in the right place",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"id": "1bb74571-4eec-4493-a039-0971a27f75e4",
				"placeholder": "Add option",
				"value": "Apps that use semantic tags will be marked as more trustworthy",
				"type": "radio"
			},
			{
				"type": "radio",
				"id": "7767b333-639a-40e7-904d-158fe4127d37",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "Semantic tags are important for users with screen readers"
			},
			{
				"id": "4d6a5a08-4551-4485-b2e6-c718e6f49344",
				"value": "Using semantic tags are way to enhance your styling and help to scope your CSS code",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio"
			},
			{
				"type": "radio",
				"blockType": "text",
				"value": "Semantic tags show developer’s intent",
				"placeholder": "Add option",
				"id": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450"
			},
			{
				"value": "Semantic tags are there to style your page according to the concerned tag. E.g, <form> will provide a styled form without any CSS needed",
				"id": "0a223e3f-a2ee-431c-9aa4-2a328d3fe8ea",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"id": "a047b356-f2f1-4a1b-8cb3-fd5f506c18a8",
				"value": "Semantic tags have better browser support ",
				"type": "radio"
			}
		],
		"codeBlock": "",
		"type": "checkbox",
		"id": "b44146a5-55bb-481c-8da2-e3b60cea3630",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{
				"value": "fixed",
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0"
			},
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73",
				"value": "<weak>"
			},
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url"
			},
			{
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe",
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a",
				"value": "<apple>"
			},
			{
				"value": "<dbz>",
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61"
			},
			{
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d",
				"value": "<react>"
			},
			{
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1",
				"value": "<card>"
			},
			{
				"value": "<vue>",
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b"
			},
			{
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b",
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there"
			},
			{
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}",
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"value": "Methods like call(), apply()and bind() can refer thisto any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			},
			{
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers"
			},
			{
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a",
				"value": "line-height"
			},
			{
				"value": "Block level elements take the width of the entire row",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary"
			},
			{
				"id": "9eadd81b-a378-414a-827b-7c9d105b1ca3",
				"value": "color"
			},
			{
				"value": "hidden",
				"id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc"
			},
			{
				"id": "db1d4d07-16ed-4031-8fe4-b5f502063844",
				"value": "radio"
			},
			{
				"id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8",
				"value": "reset"
			},
			{
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3",
				"value": "flex-wrap"
			},
			{
				"value": "The margins will collapse, meaning that the margin of the biggest element will win ",
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b"
			},
			{
				"value": "debugger",
				"id": "d987a018-4259-438f-8baa-67cb031c3591"
			},
			{
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f",
				"value": "It occurred because you are trying to call a value as a function but the value is not a function"
			},
			{
				"value": "block scope",
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f"
			},
			{
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a",
				"value": "function scope"
			},
			{
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096",
				"value": "lexical scope"
			},
			{
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2",
				"value": "module scope"
			},
			{
				"value": "global scope",
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f"
			},
			{
				"value": "It is not recommended because it opens a security leak, eval is evil",
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe"
			},
			{
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e",
				"value": "ternary operator"
			},
			{
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5",
				"value": "When you are using TypeScript but don’t really need the types"
			},
			{
				"value": "When you’re working on simple/small applications (<1000 lines of code)",
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a"
			},
			{
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76",
				"value": "When run-time errors are contextually more informative (depends on the project)"
			},
			{
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1",
				"value": "When your codebase is at a level it needs flexibility at every level"
			},
			{
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713",
				"value": "When your “Navi” intellisense suggests “any” "
			},
			{
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story",
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15"
			},
			{
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913",
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)"
			},
			{
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly",
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b"
			},
			{
				"value": "Optimistic UI",
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5"
			},
			{
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2",
				"value": "<noscript>"
			},
			{
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914",
				"value": "Strawperson > Proposal > Draft > Candidate > Finished"
			},
			{
				"value": "LocalStorage persists across browsers",
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304"
			},
			{
				"id": "14000f03-3405-4e5e-b231-81b45faa6654",
				"value": "SessionStorage will be removed when a browser is closed"
			},
			{
				"id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c",
				"value": "^"
			},
			{
				"value": "When writing directions (foreign languages) matter ",
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264"
			},
			{
				"value": "try",
				"id": "04cfe937-2a1c-4e21-adf4-949835c0d764"
			},
			{
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14",
				"value": "finally"
			},
			{
				"value": "throw",
				"id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3"
			},
			{
				"id": "7767b333-639a-40e7-904d-158fe4127d37",
				"value": "Semantic tags are important for users with screen readers"
			},
			{
				"id": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450",
				"value": "Semantic tags show developer’s intent"
			},
			{
				"value": "Semantic tags are important to SEO; page ranking is influenced",
				"id": "418dc3a9-94e6-46a9-b7c5-124933a65946"
			}
		],
		"status": "closed",
		"openingTime": 1663834813577,
		"pollNumber": 75,
		"category": "html"
	},
	{
		"voted": [],
		"type": "checkbox",
		"openingTime": null,
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0",
				"value": "fixed"
			},
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73",
				"value": "<weak>"
			},
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a",
				"value": "<apple>"
			},
			{
				"value": "<dbz>",
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61"
			},
			{
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d",
				"value": "<react>"
			},
			{
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1",
				"value": "<card>"
			},
			{
				"value": "<vue>",
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b"
			},
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }",
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9"
			},
			{
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e",
				"value": "arrow functions doesn’t have a “this” context"
			},
			{
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3",
				"value": "Methods like call(), apply()and bind() can refer thisto any object"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			},
			{
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers"
			},
			{
				"value": "line-height",
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a"
			},
			{
				"value": "Block level elements take the width of the entire row",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary"
			},
			{
				"id": "9eadd81b-a378-414a-827b-7c9d105b1ca3",
				"value": "color"
			},
			{
				"id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc",
				"value": "hidden"
			},
			{
				"value": "radio",
				"id": "db1d4d07-16ed-4031-8fe4-b5f502063844"
			},
			{
				"id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8",
				"value": "reset"
			},
			{
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3",
				"value": "flex-wrap"
			},
			{
				"value": "The margins will collapse, meaning that the margin of the biggest element will win ",
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b"
			},
			{
				"value": "debugger",
				"id": "d987a018-4259-438f-8baa-67cb031c3591"
			},
			{
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f",
				"value": "It occurred because you are trying to call a value as a function but the value is not a function"
			},
			{
				"value": "block scope",
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f"
			},
			{
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a",
				"value": "function scope"
			},
			{
				"value": "lexical scope",
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096"
			},
			{
				"value": "module scope",
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2"
			},
			{
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f",
				"value": "global scope"
			},
			{
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe",
				"value": "It is not recommended because it opens a security leak, eval is evil"
			},
			{
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e",
				"value": "ternary operator"
			},
			{
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5",
				"value": "When you are using TypeScript but don’t really need the types"
			},
			{
				"value": "When you’re working on simple/small applications (<1000 lines of code)",
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a"
			},
			{
				"value": "When run-time errors are contextually more informative (depends on the project)",
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76"
			},
			{
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1",
				"value": "When your codebase is at a level it needs flexibility at every level"
			},
			{
				"value": "When your “Navi” intellisense suggests “any” ",
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713"
			},
			{
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story",
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15"
			},
			{
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913",
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)"
			},
			{
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b",
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly"
			},
			{
				"value": "Optimistic UI",
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5"
			},
			{
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2",
				"value": "<noscript>"
			},
			{
				"value": "Strawperson > Proposal > Draft > Candidate > Finished",
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914"
			},
			{
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304",
				"value": "LocalStorage persists across browsers"
			},
			{
				"value": "SessionStorage will be removed when a browser is closed",
				"id": "14000f03-3405-4e5e-b231-81b45faa6654"
			},
			{
				"value": "^",
				"id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c"
			},
			{
				"value": "When writing directions (foreign languages) matter ",
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264"
			},
			{
				"id": "04cfe937-2a1c-4e21-adf4-949835c0d764",
				"value": "try"
			},
			{
				"value": "finally",
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14"
			},
			{
				"id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3",
				"value": "throw"
			}
		],
		"question": "In JS, errors can be endowed, what statements in error handling are allowed?",
		"codeBlock": "",
		"answers": [
			{
				"value": "try",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "04cfe937-2a1c-4e21-adf4-949835c0d764"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"value": "catch",
				"blockType": "text",
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264"
			},
			{
				"type": "radio",
				"blockType": "text",
				"value": "begin",
				"id": "bcf20a6e-46f7-46ab-9dc4-a65c95501e01",
				"placeholder": "Add option"
			},
			{
				"value": "finally",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14"
			},
			{
				"value": "if",
				"id": "65f569d4-ffcd-4d40-94a4-d1b950a74b6c",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"id": "cef17f4d-641d-4617-b588-e979ed6e3849",
				"value": "else",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"id": "1475ecac-1c5d-49a7-b4de-04f5154c3212",
				"value": "switch",
				"blockType": "text",
				"type": "radio"
			},
			{
				"id": "d9493059-81cd-4ef0-8ae8-5cdcdbbd4c5f",
				"type": "radio",
				"blockType": "text",
				"value": "kick",
				"placeholder": "Add option"
			},
			{
				"id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3",
				"placeholder": "Add option",
				"value": "throw",
				"blockType": "text",
				"type": "radio"
			},
			{
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "f3589dbb-96c8-4c5c-8c26-e255f790f13a",
				"value": "ensure"
			},
			{
				"blockType": "text",
				"id": "922ab3fd-f593-4070-8a66-7fd94169aba8",
				"type": "radio",
				"placeholder": "Add option",
				"value": "promise"
			},
			{
				"blockType": "text",
				"value": "async",
				"id": "61b353e3-c02f-47c3-a88b-96a0c232671e",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"id": "a5a37123-8eb8-4055-ab9f-495c97e48d5e",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "await"
			}
		],
		"category": "javascript",
		"pollNumber": 74,
		"status": "closed",
		"id": "f669edd7-b5f5-4cb3-9342-bd43d7537d48"
	},
	{
		"status": "new",
		"id": "e166d4f7-ba63-458a-bdc1-4093e4011815",
		"answers": [
			{
				"type": "radio",
				"placeholder": "Add option",
				"value": "Function error",
				"blockType": "text",
				"id": "04cfe937-2a1c-4e21-adf4-949835c0d764"
			},
			{
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "SyntaxError"
			},
			{
				"blockType": "text",
				"type": "radio",
				"value": "TypeError",
				"id": "bcf20a6e-46f7-46ab-9dc4-a65c95501e01",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"value": "UnexpectedError",
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14",
				"type": "radio",
				"blockType": "text"
			},
			{
				"value": "CallbackError",
				"blockType": "text",
				"id": "65f569d4-ffcd-4d40-94a4-d1b950a74b6c",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"id": "cef17f4d-641d-4617-b588-e979ed6e3849",
				"type": "radio",
				"placeholder": "Add option",
				"value": "undefined"
			},
			{
				"value": "null",
				"blockType": "text",
				"id": "1475ecac-1c5d-49a7-b4de-04f5154c3212",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"id": "d9493059-81cd-4ef0-8ae8-5cdcdbbd4c5f",
				"type": "radio",
				"value": "RangeError",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3",
				"value": "UriError",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio"
			},
			{
				"type": "radio",
				"id": "f3589dbb-96c8-4c5c-8c26-e255f790f13a",
				"value": "ReferenceError",
				"placeholder": "Add option",
				"blockType": "text"
			}
		],
		"voted": [],
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{
				"value": "fixed",
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0"
			},
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{
				"value": "<weak>",
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73"
			},
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"value": "Temporal API"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61",
				"value": "<dbz>"
			},
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1",
				"value": "<card>"
			},
			{
				"value": "<vue>",
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b"
			},
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3",
				"value": "Methods like call(), apply()and bind() can refer thisto any object"
			},
			{
				"value": "“this” is determined on how a function is called",
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0"
			},
			{
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers",
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65"
			},
			{
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a",
				"value": "line-height"
			},
			{
				"value": "Block level elements take the width of the entire row",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary"
			},
			{
				"value": "color",
				"id": "9eadd81b-a378-414a-827b-7c9d105b1ca3"
			},
			{
				"id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc",
				"value": "hidden"
			},
			{
				"value": "radio",
				"id": "db1d4d07-16ed-4031-8fe4-b5f502063844"
			},
			{
				"value": "reset",
				"id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8"
			},
			{
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3",
				"value": "flex-wrap"
			},
			{
				"value": "The margins will collapse, meaning that the margin of the biggest element will win ",
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b"
			},
			{
				"id": "d987a018-4259-438f-8baa-67cb031c3591",
				"value": "debugger"
			},
			{
				"value": "It occurred because you are trying to call a value as a function but the value is not a function",
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f"
			},
			{
				"value": "block scope",
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f"
			},
			{
				"value": "function scope",
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a"
			},
			{
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096",
				"value": "lexical scope"
			},
			{
				"value": "module scope",
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2"
			},
			{
				"value": "global scope",
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f"
			},
			{
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe",
				"value": "It is not recommended because it opens a security leak, eval is evil"
			},
			{
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e",
				"value": "ternary operator"
			},
			{
				"value": "When you are using TypeScript but don’t really need the types",
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5"
			},
			{
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a",
				"value": "When you’re working on simple/small applications (<1000 lines of code)"
			},
			{
				"value": "When run-time errors are contextually more informative (depends on the project)",
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76"
			},
			{
				"value": "When your codebase is at a level it needs flexibility at every level",
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1"
			},
			{
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713",
				"value": "When your “Navi” intellisense suggests “any” "
			},
			{
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story",
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15"
			},
			{
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913",
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)"
			},
			{
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly",
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b"
			},
			{
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5",
				"value": "Optimistic UI"
			},
			{
				"value": "<noscript>",
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2"
			},
			{
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914",
				"value": "Strawperson > Proposal > Draft > Candidate > Finished"
			},
			{
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304",
				"value": "LocalStorage persists across browsers"
			},
			{
				"id": "14000f03-3405-4e5e-b231-81b45faa6654",
				"value": "SessionStorage will be removed when a browser is closed"
			},
			{
				"id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c",
				"value": "^"
			},
			{
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264",
				"value": "When writing directions (foreign languages) matter "
			}
		],
		"question": "In JS, errors will annoy you to the bone, what type of error from the following code will be thrown? ",
		"category": "javascript",
		"type": "radio",
		"openingTime": null,
		"codeBlock": "callFunction());",
		"pollNumber": 73
	},
	{
		"id": "97c35fa2-acea-4736-a65f-16d18515173e",
		"pollNumber": 72,
		"openingTime": null,
		"type": "radio",
		"voted": [],
		"answers": [
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": "When we want to use conditionals in CSS",
				"type": "radio",
				"id": "04cfe937-2a1c-4e21-adf4-949835c0d764"
			},
			{
				"type": "radio",
				"blockType": "text",
				"value": "When writing directions (foreign languages) matter ",
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264",
				"placeholder": "Add option"
			},
			{
				"id": "bcf20a6e-46f7-46ab-9dc4-a65c95501e01",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "When we want to enhance CSS with JS ",
				"type": "radio"
			},
			{
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14",
				"value": "Logical properties are used in css-in-js to style your components based on JS logic "
			},
			{
				"blockType": "text",
				"value": "When you want to debug your CSS ",
				"placeholder": "Add option",
				"type": "radio",
				"id": "65f569d4-ffcd-4d40-94a4-d1b950a74b6c"
			},
			{
				"blockType": "text",
				"type": "radio",
				"value": "When you need math in CSS for cool (physics) animations/3d or complex grid layouts (calculate widths/heights/distances/gaps )",
				"id": "cef17f4d-641d-4617-b588-e979ed6e3849",
				"placeholder": "Add option"
			}
		],
		"question": "In CSS, logical properties have a place, do you know a situation where we should use them with grace? ",
		"status": "closed",
		"codeBlock": "",
		"category": "css",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{
				"value": "fixed",
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0"
			},
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73",
				"value": "<weak>"
			},
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe",
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"value": "The effect is an infinite loop, due to circularity ",
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a"
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61",
				"value": "<dbz>"
			},
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1",
				"value": "<card>"
			},
			{
				"value": "<vue>",
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b"
			},
			{
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b",
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there"
			},
			{
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}",
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16"
			},
			{
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }",
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9"
			},
			{
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e",
				"value": "arrow functions doesn’t have a “this” context"
			},
			{
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3",
				"value": "Methods like call(), apply()and bind() can refer thisto any object"
			},
			{
				"value": "“this” is determined on how a function is called",
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0"
			},
			{
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers",
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65"
			},
			{
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a",
				"value": "line-height"
			},
			{
				"value": "Block level elements take the width of the entire row",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary"
			},
			{
				"id": "9eadd81b-a378-414a-827b-7c9d105b1ca3",
				"value": "color"
			},
			{
				"value": "hidden",
				"id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc"
			},
			{
				"id": "db1d4d07-16ed-4031-8fe4-b5f502063844",
				"value": "radio"
			},
			{
				"value": "reset",
				"id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8"
			},
			{
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3",
				"value": "flex-wrap"
			},
			{
				"value": "The margins will collapse, meaning that the margin of the biggest element will win ",
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b"
			},
			{
				"value": "debugger",
				"id": "d987a018-4259-438f-8baa-67cb031c3591"
			},
			{
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f",
				"value": "It occurred because you are trying to call a value as a function but the value is not a function"
			},
			{
				"value": "block scope",
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f"
			},
			{
				"value": "function scope",
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a"
			},
			{
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096",
				"value": "lexical scope"
			},
			{
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2",
				"value": "module scope"
			},
			{
				"value": "global scope",
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f"
			},
			{
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe",
				"value": "It is not recommended because it opens a security leak, eval is evil"
			},
			{
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e",
				"value": "ternary operator"
			},
			{
				"value": "When you are using TypeScript but don’t really need the types",
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5"
			},
			{
				"value": "When you’re working on simple/small applications (<1000 lines of code)",
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a"
			},
			{
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76",
				"value": "When run-time errors are contextually more informative (depends on the project)"
			},
			{
				"value": "When your codebase is at a level it needs flexibility at every level",
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1"
			},
			{
				"value": "When your “Navi” intellisense suggests “any” ",
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713"
			},
			{
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story",
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15"
			},
			{
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)",
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913"
			},
			{
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b",
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly"
			},
			{
				"value": "Optimistic UI",
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5"
			},
			{
				"value": "<noscript>",
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2"
			},
			{
				"value": "Strawperson > Proposal > Draft > Candidate > Finished",
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914"
			},
			{
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304",
				"value": "LocalStorage persists across browsers"
			},
			{
				"value": "SessionStorage will be removed when a browser is closed",
				"id": "14000f03-3405-4e5e-b231-81b45faa6654"
			},
			{
				"value": "^",
				"id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c"
			},
			{
				"value": "When writing directions (foreign languages) matter ",
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264"
			}
		]
	},
	{
		"codeBlock": "",
		"question": "In JS, what you often see are package managers which is no baloney, what token do you need next to your version to update minor/patches only? ",
		"status": "closed",
		"answers": [
			{
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "-",
				"id": "732e43e6-4eb9-4083-b759-938b6023bea2"
			},
			{
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"id": "4d5e079d-88e5-4c8c-af29-34412001e333",
				"value": "_"
			},
			{
				"blockType": "text",
				"id": "fc434f61-8698-483b-89bf-424672eb4793",
				"type": "radio",
				"placeholder": "Add option",
				"value": "~"
			},
			{
				"id": "65c565fc-586c-4af9-b635-dbfd39b78aad",
				"type": "radio",
				"value": "Nothing, it won’t upgrade packages unless you explicitly run an upgrade command from the concerned package manager",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"value": "^",
				"blockType": "text",
				"type": "radio",
				"id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c"
			},
			{
				"id": "4cf1a3f1-2b4d-4548-8ef6-cd0a9ec4965c",
				"value": "🚧",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text"
			},
			{
				"type": "radio",
				"value": ">",
				"placeholder": "Add option",
				"id": "376a09b5-6e09-46aa-891c-fcac946f512e",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"value": "!",
				"type": "radio",
				"blockType": "text",
				"id": "d546aa34-e83c-43be-acb6-3886940d2afe"
			},
			{
				"blockType": "text",
				"type": "radio",
				"id": "949a77b0-0dba-499b-a13c-299ff2693f00",
				"value": "⚠️",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"value": "lock",
				"id": "334c898f-5ac5-4693-9979-ec69dfb2c550",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": "🔒",
				"type": "radio",
				"id": "04cfe937-2a1c-4e21-adf4-949835c0d764"
			}
		],
		"category": "javascript",
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{
				"value": "fixed",
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0"
			},
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{
				"value": "<weak>",
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73"
			},
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url"
			},
			{
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe",
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a",
				"value": "<apple>"
			},
			{
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61",
				"value": "<dbz>"
			},
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1",
				"value": "<card>"
			},
			{
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b",
				"value": "<vue>"
			},
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"value": "Methods like call(), apply()and bind() can refer thisto any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			},
			{
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers"
			},
			{
				"value": "line-height",
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a"
			},
			{
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d",
				"value": "Block level elements take the width of the entire row"
			},
			{
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary"
			},
			{
				"value": "color",
				"id": "9eadd81b-a378-414a-827b-7c9d105b1ca3"
			},
			{
				"id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc",
				"value": "hidden"
			},
			{
				"value": "radio",
				"id": "db1d4d07-16ed-4031-8fe4-b5f502063844"
			},
			{
				"value": "reset",
				"id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8"
			},
			{
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3",
				"value": "flex-wrap"
			},
			{
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b",
				"value": "The margins will collapse, meaning that the margin of the biggest element will win "
			},
			{
				"id": "d987a018-4259-438f-8baa-67cb031c3591",
				"value": "debugger"
			},
			{
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f",
				"value": "It occurred because you are trying to call a value as a function but the value is not a function"
			},
			{
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f",
				"value": "block scope"
			},
			{
				"value": "function scope",
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a"
			},
			{
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096",
				"value": "lexical scope"
			},
			{
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2",
				"value": "module scope"
			},
			{
				"value": "global scope",
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f"
			},
			{
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe",
				"value": "It is not recommended because it opens a security leak, eval is evil"
			},
			{
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e",
				"value": "ternary operator"
			},
			{
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5",
				"value": "When you are using TypeScript but don’t really need the types"
			},
			{
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a",
				"value": "When you’re working on simple/small applications (<1000 lines of code)"
			},
			{
				"value": "When run-time errors are contextually more informative (depends on the project)",
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76"
			},
			{
				"value": "When your codebase is at a level it needs flexibility at every level",
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1"
			},
			{
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713",
				"value": "When your “Navi” intellisense suggests “any” "
			},
			{
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15",
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story"
			},
			{
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)",
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913"
			},
			{
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b",
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly"
			},
			{
				"value": "Optimistic UI",
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5"
			},
			{
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2",
				"value": "<noscript>"
			},
			{
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914",
				"value": "Strawperson > Proposal > Draft > Candidate > Finished"
			},
			{
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304",
				"value": "LocalStorage persists across browsers"
			},
			{
				"value": "SessionStorage will be removed when a browser is closed",
				"id": "14000f03-3405-4e5e-b231-81b45faa6654"
			},
			{
				"value": "^",
				"id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c"
			}
		],
		"id": "10706652-477b-4596-9ebb-8e23ab9d5635",
		"openingTime": null,
		"type": "checkbox",
		"voted": [],
		"pollNumber": 71
	},
	{
		"type": "checkbox",
		"status": "new",
		"question": "In Web, browser storages are not unthinkable, now come with some localStorage and sessionStorage facts and bring them on the table!",
		"openingTime": null,
		"answers": [
			{
				"blockType": "text",
				"placeholder": "Add option",
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304",
				"type": "radio",
				"value": "LocalStorage persists across browsers"
			},
			{
				"blockType": "text",
				"value": "SessionStorage will be removed when a browser is closed",
				"type": "radio",
				"placeholder": "Add option",
				"id": "14000f03-3405-4e5e-b231-81b45faa6654"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"id": "b0ff5a57-7f2e-43d5-b7bc-9da13a80b823",
				"value": "LocalStorage is sharable across browsers",
				"blockType": "text"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"id": "1b6c820b-250d-42cb-85cb-0c434d04f798",
				"value": "LocalStorage is sharable via other devices",
				"blockType": "text"
			},
			{
				"type": "radio",
				"value": "SessionStorage persists across tabs",
				"id": "01b4dcc4-e2af-4830-874f-c8be0c1fc5d2",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"id": "1dcdae73-6623-42dd-bce1-1a3a2539888c",
				"value": "SessionStorage and LocalStorage are the same, but just different terms per browser because browsers added their own implementation (just like with the browser compilers)",
				"blockType": "text"
			},
			{
				"value": "SessionStorage is state synced with the server",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"id": "40d3ba66-fc41-4981-a232-21f0e3161ff4"
			},
			{
				"value": "SessionState is the same as a cookie",
				"placeholder": "Add option",
				"id": "828053ff-e5fe-413e-966e-d568f08e821f",
				"blockType": "text",
				"type": "radio"
			},
			{
				"id": "0efaf544-5cbb-4a71-bf78-ae61c6634758",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"value": "LocalStorage can’t be removed by the user"
			},
			{
				"blockType": "text",
				"id": "732e43e6-4eb9-4083-b759-938b6023bea2",
				"value": "LocalStorage is client-side, whereas SessionStorage is server-side",
				"placeholder": "Add option",
				"type": "radio"
			}
		],
		"codeBlock": "",
		"id": "44f18753-110b-43a9-a6b5-7cffd11a0792",
		"category": "general-frontend",
		"voted": [],
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{
				"value": "fixed",
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0"
			},
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{
				"value": "<weak>",
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73"
			},
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"value": "Temporal API"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			},
			{
				"value": "The effect is an infinite loop, due to circularity ",
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a"
			},
			{
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a",
				"value": "<apple>"
			},
			{
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61",
				"value": "<dbz>"
			},
			{
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d",
				"value": "<react>"
			},
			{
				"value": "<card>",
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1"
			},
			{
				"value": "<vue>",
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b"
			},
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }",
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"value": "Methods like call(), apply()and bind() can refer thisto any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"value": "“this” is determined on how a function is called",
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0"
			},
			{
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers",
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65"
			},
			{
				"value": "line-height",
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a"
			},
			{
				"value": "Block level elements take the width of the entire row",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary",
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694"
			},
			{
				"value": "color",
				"id": "9eadd81b-a378-414a-827b-7c9d105b1ca3"
			},
			{
				"id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc",
				"value": "hidden"
			},
			{
				"id": "db1d4d07-16ed-4031-8fe4-b5f502063844",
				"value": "radio"
			},
			{
				"id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8",
				"value": "reset"
			},
			{
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3",
				"value": "flex-wrap"
			},
			{
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b",
				"value": "The margins will collapse, meaning that the margin of the biggest element will win "
			},
			{
				"id": "d987a018-4259-438f-8baa-67cb031c3591",
				"value": "debugger"
			},
			{
				"value": "It occurred because you are trying to call a value as a function but the value is not a function",
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f"
			},
			{
				"value": "block scope",
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f"
			},
			{
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a",
				"value": "function scope"
			},
			{
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096",
				"value": "lexical scope"
			},
			{
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2",
				"value": "module scope"
			},
			{
				"value": "global scope",
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f"
			},
			{
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe",
				"value": "It is not recommended because it opens a security leak, eval is evil"
			},
			{
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e",
				"value": "ternary operator"
			},
			{
				"value": "When you are using TypeScript but don’t really need the types",
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5"
			},
			{
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a",
				"value": "When you’re working on simple/small applications (<1000 lines of code)"
			},
			{
				"value": "When run-time errors are contextually more informative (depends on the project)",
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76"
			},
			{
				"value": "When your codebase is at a level it needs flexibility at every level",
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1"
			},
			{
				"value": "When your “Navi” intellisense suggests “any” ",
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713"
			},
			{
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15",
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story"
			},
			{
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)",
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913"
			},
			{
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b",
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly"
			},
			{
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5",
				"value": "Optimistic UI"
			},
			{
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2",
				"value": "<noscript>"
			},
			{
				"value": "Strawperson > Proposal > Draft > Candidate > Finished",
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914"
			},
			{
				"value": "LocalStorage persists across browsers",
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304"
			},
			{
				"value": "SessionStorage will be removed when a browser is closed",
				"id": "14000f03-3405-4e5e-b231-81b45faa6654"
			}
		],
		"pollNumber": 70
	},
	{
		"openingTime": null,
		"answers": [
			{
				"value": "Initialized > Proposal > Concept > Almost-ready > Ready ",
				"id": "fb1abdbe-9f41-456c-b21c-e6f56416c8e1",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": "Make the dough > roll the dough > add chocolate chips > Bake ",
				"type": "radio",
				"id": "75e579c1-d269-4575-a1c7-9d2eb1fe1a75"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"id": "6edf4add-1024-4dd0-a0ac-036a70b32216",
				"type": "radio",
				"value": "Development > Test > Acceptance > Production "
			},
			{
				"blockType": "text",
				"id": "d0913b53-99a2-4190-9427-efb65f8a9c3e",
				"type": "radio",
				"placeholder": "Add option",
				"value": "Development > Production "
			},
			{
				"placeholder": "Add option",
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914",
				"blockType": "text",
				"type": "radio",
				"value": "Strawperson > Proposal > Draft > Candidate > Finished"
			},
			{
				"value": "Development > Refinement > Development > Sprint Planning > Development > Sprint Demo >  Release ",
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option"
			}
		],
		"question": "ECMAScript releases features in a stages process, what are the names of the stages you might know or have to guess? ",
		"type": "radio",
		"codeBlock": "Why is this relevant? It’s good to know what stages there are, mostly looking at packages.",
		"voted": [],
		"pollNumber": 69,
		"status": "new",
		"id": "11b07060-1529-48cc-bfa2-ed9f5ffaad60",
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{
				"value": "fixed",
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0"
			},
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{
				"value": "<weak>",
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73"
			},
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url"
			},
			{
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe",
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a",
				"value": "<apple>"
			},
			{
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61",
				"value": "<dbz>"
			},
			{
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d",
				"value": "<react>"
			},
			{
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1",
				"value": "<card>"
			},
			{
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b",
				"value": "<vue>"
			},
			{
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b",
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }",
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9"
			},
			{
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e",
				"value": "arrow functions doesn’t have a “this” context"
			},
			{
				"value": "Methods like call(), apply()and bind() can refer thisto any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			},
			{
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers"
			},
			{
				"value": "line-height",
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a"
			},
			{
				"value": "Block level elements take the width of the entire row",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary"
			},
			{
				"value": "color",
				"id": "9eadd81b-a378-414a-827b-7c9d105b1ca3"
			},
			{
				"id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc",
				"value": "hidden"
			},
			{
				"value": "radio",
				"id": "db1d4d07-16ed-4031-8fe4-b5f502063844"
			},
			{
				"id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8",
				"value": "reset"
			},
			{
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3",
				"value": "flex-wrap"
			},
			{
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b",
				"value": "The margins will collapse, meaning that the margin of the biggest element will win "
			},
			{
				"id": "d987a018-4259-438f-8baa-67cb031c3591",
				"value": "debugger"
			},
			{
				"value": "It occurred because you are trying to call a value as a function but the value is not a function",
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f"
			},
			{
				"value": "block scope",
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f"
			},
			{
				"value": "function scope",
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a"
			},
			{
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096",
				"value": "lexical scope"
			},
			{
				"value": "module scope",
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2"
			},
			{
				"value": "global scope",
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f"
			},
			{
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe",
				"value": "It is not recommended because it opens a security leak, eval is evil"
			},
			{
				"value": "ternary operator",
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e"
			},
			{
				"value": "When you are using TypeScript but don’t really need the types",
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5"
			},
			{
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a",
				"value": "When you’re working on simple/small applications (<1000 lines of code)"
			},
			{
				"value": "When run-time errors are contextually more informative (depends on the project)",
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76"
			},
			{
				"value": "When your codebase is at a level it needs flexibility at every level",
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1"
			},
			{
				"value": "When your “Navi” intellisense suggests “any” ",
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713"
			},
			{
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15",
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story"
			},
			{
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)",
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913"
			},
			{
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly",
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b"
			},
			{
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5",
				"value": "Optimistic UI"
			},
			{
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2",
				"value": "<noscript>"
			},
			{
				"value": "Strawperson > Proposal > Draft > Candidate > Finished",
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914"
			}
		],
		"category": "general-frontend"
	},
	{
		"voted": [
			{
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2",
				"answerId": "1666b3f4-eed3-4307-9811-d231a5d474c2"
			},
			{
				"answerId": "1666b3f4-eed3-4307-9811-d231a5d474c2",
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292"
			},
			{
				"answerId": "1666b3f4-eed3-4307-9811-d231a5d474c2",
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1"
			},
			{
				"answerId": "1666b3f4-eed3-4307-9811-d231a5d474c2",
				"userId": "GxloHn9wFkRFYYHXSuTj56kXd0q2"
			},
			{
				"answerId": "1666b3f4-eed3-4307-9811-d231a5d474c2",
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2"
			},
			{
				"answerId": "1666b3f4-eed3-4307-9811-d231a5d474c2",
				"userId": "btmzQ2h02aa7NwgpOFMGvGSgcv62"
			},
			{
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3",
				"answerId": "1666b3f4-eed3-4307-9811-d231a5d474c2"
			},
			{
				"userId": "1at5cLzMWad6Kb4bXJGzbuCIe383",
				"answerId": "2f09710d-a607-4a2c-a824-177731b89078"
			},
			{
				"answerId": "1666b3f4-eed3-4307-9811-d231a5d474c2",
				"userId": "qBHCpnXFOLZsdzcHbKzvkqP6Uck1"
			}
		],
		"type": "radio",
		"id": "ddd0c88f-555b-444c-acf0-e3ef3e82efd5",
		"answers": [
			{
				"id": "b0167e8d-9b19-49f4-ad68-6368015b452a",
				"value": "<nojavascript>",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "code"
			},
			{
				"blockType": "text",
				"value": "You can do it by adding the classname “.no-js” ",
				"placeholder": "Add option",
				"id": "6af4a0c6-ab5f-418a-b402-0b83aebbef94",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": "CSS has a property for it called “script” which takes values “no-script” and “apply”",
				"id": "2f09710d-a607-4a2c-a824-177731b89078",
				"type": "radio"
			},
			{
				"blockType": "code",
				"placeholder": "Add option",
				"type": "radio",
				"value": "<script disabled>",
				"id": "487a7e91-4305-4e50-b30d-ab7745102756"
			},
			{
				"id": "735dcdbb-bcac-44b4-b3a3-b42827503f96",
				"blockType": "code",
				"placeholder": "Add option",
				"value": "<script no=”yes”> ",
				"type": "radio"
			},
			{
				"type": "radio",
				"id": "eccc3cae-2dd0-4739-ba29-33a4aecaf1df",
				"blockType": "code",
				"placeholder": "Add option",
				"value": "<script yes=”no”> "
			},
			{
				"blockType": "code",
				"placeholder": "Add option",
				"type": "radio",
				"value": "<script type=”text”> ",
				"id": "3aee7979-9b2c-4279-8809-85412985a8bb"
			},
			{
				"blockType": "code",
				"type": "radio",
				"placeholder": "Add option",
				"value": "<noscript>",
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": "With a condition: <script> if (window.user.javascript === false) </script> ",
				"id": "fc1d7092-852e-49f0-bc07-ca193de8459c",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"id": "a385399f-df2f-4274-98d7-23cf98ffd64c",
				"type": "radio",
				"value": "That’s not possible",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"id": "fb1abdbe-9f41-456c-b21c-e6f56416c8e1",
				"blockType": "text",
				"type": "radio",
				"value": "It’s possible with a special React component <NoScript />"
			}
		],
		"status": "closed",
		"correctAnswers": [
			{
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2",
				"value": "<noscript>"
			}
		],
		"category": "html",
		"openingTime": 1662710082474,
		"pollNumber": 68,
		"codeBlock": "",
		"question": "In HTML, there is a tag that renders when turned off in the browser scripts are not supported, what tag am I looking for and if you answer this correctly will get you awarded? "
	},
	{
		"answers": [
			{
				"placeholder": "Add option",
				"value": "Client-side rendering ",
				"id": "271d009f-003d-43cc-a089-34ef16da5a03",
				"type": "radio",
				"blockType": "text"
			},
			{
				"id": "6e2706aa-a1f8-47ab-bfa3-106e2c220578",
				"value": "Server-side rendering ",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"value": "Response handling ",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "dfb20745-5a98-4645-a3ab-e9c32306beef"
			},
			{
				"value": "Reactive programming ",
				"id": "1e3b5f48-7b60-40ea-8096-0ad21cb9ff5b",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"id": "c0741c27-729f-4899-a1a5-527a585ae0fc",
				"value": "Modern web UI ",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"blockType": "text",
				"type": "radio",
				"value": "Optimistic UI",
				"placeholder": "Add option",
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5"
			},
			{
				"placeholder": "Add option",
				"value": "React UI",
				"id": "b2ede620-a52f-421c-832d-22e4d7173a83",
				"type": "radio",
				"blockType": "text"
			},
			{
				"type": "radio",
				"value": "Agile UI ",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "8b7e3740-3792-499f-8a59-da347f56413b"
			},
			{
				"value": "Directives",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"id": "6afd1b86-792d-43e9-b9bb-50f8535f6856"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"id": "13b85b70-7fed-4c94-a30a-0e13068300d4",
				"value": "Observables",
				"type": "radio"
			},
			{
				"value": "Long polling",
				"id": "1596d29d-3179-491b-a9b0-f04d4dbaf653",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"id": "d6071439-6397-49d8-b8eb-3ab3b0f59937",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"value": "Perceived performance"
			},
			{
				"value": "User experience enhancing",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"id": "b0167e8d-9b19-49f4-ad68-6368015b452a"
			}
		],
		"category": "general-frontend",
		"codeBlock": "",
		"correctAnswers": [
			{
				"value": "Optimistic UI",
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5"
			}
		],
		"openingTime": 1663319990982,
		"type": "radio",
		"question": "In Frontend, translating user experience to the browser is an important task to focus on, what is the technique called where interfaces are updated before a backend request is done? ",
		"voted": [
			{
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2",
				"answerId": "d6071439-6397-49d8-b8eb-3ab3b0f59937"
			},
			{
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1",
				"answerId": "0d98a726-af17-439c-9c4c-85c6dd6d26e5"
			},
			{
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3",
				"answerId": "271d009f-003d-43cc-a089-34ef16da5a03"
			},
			{
				"answerId": "271d009f-003d-43cc-a089-34ef16da5a03",
				"userId": "B762i26QM7Y275I0w2uAtklg3Gx1"
			},
			{
				"answerId": "0d98a726-af17-439c-9c4c-85c6dd6d26e5",
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292"
			},
			{
				"userId": "GxloHn9wFkRFYYHXSuTj56kXd0q2",
				"answerId": "271d009f-003d-43cc-a089-34ef16da5a03"
			},
			{
				"answerId": "271d009f-003d-43cc-a089-34ef16da5a03",
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2"
			},
			{
				"userId": "btmzQ2h02aa7NwgpOFMGvGSgcv62",
				"answerId": "0d98a726-af17-439c-9c4c-85c6dd6d26e5"
			},
			{
				"answerId": "0d98a726-af17-439c-9c4c-85c6dd6d26e5",
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1"
			}
		],
		"pollNumber": 67,
		"status": "closed",
		"id": "090e2a73-ea09-45fd-a8d1-5e82e941e8a0"
	},
	{
		"voted": [],
		"type": "radio",
		"status": "closed",
		"question": "WARNING! In TS, different types are offered of which there are many, what would be a good use case to use “any”?  ",
		"category": "typescript",
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{
				"value": "fixed",
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0"
			},
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{
				"value": "<weak>",
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73"
			},
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			},
			{
				"value": "The effect is an infinite loop, due to circularity ",
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a"
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61",
				"value": "<dbz>"
			},
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{
				"value": "<card>",
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1"
			},
			{
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b",
				"value": "<vue>"
			},
			{
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b",
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }",
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9"
			},
			{
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e",
				"value": "arrow functions doesn’t have a “this” context"
			},
			{
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3",
				"value": "Methods like call(), apply()and bind() can refer thisto any object"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			},
			{
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers",
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65"
			},
			{
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a",
				"value": "line-height"
			},
			{
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d",
				"value": "Block level elements take the width of the entire row"
			},
			{
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary"
			},
			{
				"value": "color",
				"id": "9eadd81b-a378-414a-827b-7c9d105b1ca3"
			},
			{
				"value": "hidden",
				"id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc"
			},
			{
				"id": "db1d4d07-16ed-4031-8fe4-b5f502063844",
				"value": "radio"
			},
			{
				"value": "reset",
				"id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8"
			},
			{
				"value": "flex-wrap",
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3"
			},
			{
				"value": "The margins will collapse, meaning that the margin of the biggest element will win ",
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b"
			},
			{
				"value": "debugger",
				"id": "d987a018-4259-438f-8baa-67cb031c3591"
			},
			{
				"value": "It occurred because you are trying to call a value as a function but the value is not a function",
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f"
			},
			{
				"value": "block scope",
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f"
			},
			{
				"value": "function scope",
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a"
			},
			{
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096",
				"value": "lexical scope"
			},
			{
				"value": "module scope",
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2"
			},
			{
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f",
				"value": "global scope"
			},
			{
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe",
				"value": "It is not recommended because it opens a security leak, eval is evil"
			},
			{
				"value": "ternary operator",
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e"
			},
			{
				"value": "When you have tests, linters and code climate, usage of any is valid",
				"id": "dfb20745-5a98-4645-a3ab-e9c32306beef"
			},
			{
				"value": "When you already know upfront that this code is going to be refactored or changed often",
				"id": "6e2706aa-a1f8-47ab-bfa3-106e2c220578"
			},
			{
				"id": "271d009f-003d-43cc-a089-34ef16da5a03",
				"value": "When the code is written in a defensive way and when comments are self-documenting, “any” should be acceptable"
			},
			{
				"value": "When you are using TypeScript but don’t really need the types",
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5"
			},
			{
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a",
				"value": "When you’re working on simple/small applications (<1000 lines of code)"
			},
			{
				"value": "When run-time errors are contextually more informative (depends on the project)",
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76"
			},
			{
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1",
				"value": "When your codebase is at a level it needs flexibility at every level"
			},
			{
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713",
				"value": "When your “Navi” intellisense suggests “any” "
			},
			{
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story",
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15"
			},
			{
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)",
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913"
			},
			{
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly",
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b"
			}
		],
		"openingTime": null,
		"answers": [
			{
				"placeholder": "Add option",
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly",
				"blockType": "text",
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b",
				"type": "radio"
			},
			{
				"type": "radio",
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)",
				"blockType": "text",
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story",
				"blockType": "text",
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"value": "When your “Navi” intellisense suggests “any” ",
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"value": "When your codebase is at a level it needs flexibility at every level",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1"
			},
			{
				"placeholder": "Add option",
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76",
				"type": "radio",
				"blockType": "text",
				"value": "When run-time errors are contextually more informative (depends on the project)"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": "When you’re working on simple/small applications (<1000 lines of code)",
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a",
				"type": "radio"
			},
			{
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5",
				"value": "When you are using TypeScript but don’t really need the types",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"value": "When the code is written in a defensive way and when comments are self-documenting, “any” should be acceptable",
				"blockType": "text",
				"id": "271d009f-003d-43cc-a089-34ef16da5a03",
				"type": "radio"
			},
			{
				"id": "6e2706aa-a1f8-47ab-bfa3-106e2c220578",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "When you already know upfront that this code is going to be refactored or changed often",
				"type": "radio"
			},
			{
				"value": "When you have tests, linters and code climate, usage of any is valid",
				"placeholder": "Add option",
				"type": "radio",
				"id": "dfb20745-5a98-4645-a3ab-e9c32306beef",
				"blockType": "text"
			}
		],
		"codeBlock": "",
		"pollNumber": 66,
		"id": "0b676f0e-505e-47c6-9404-39d10ab32b66"
	},
	{
		"openingTime": null,
		"id": "823550ad-081c-4d89-a431-e9267f781946",
		"type": "radio",
		"voted": [],
		"category": "javascript",
		"codeBlock": "isAuthenticated ? \"Hallo, welkom bij Oodoo! Uw database verloopt over 20 dagen.\" : \"Toegangsfout: Deze beperking is te wijten aan de volgende regels (\"'Activiteit' (mail.activity) records\")\"",
		"pollNumber": 65,
		"question": "See the following JS on your screen, what is this technique called you must have seen?",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{
				"value": "fixed",
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0"
			},
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73",
				"value": "<weak>"
			},
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url"
			},
			{
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe",
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61",
				"value": "<dbz>"
			},
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1",
				"value": "<card>"
			},
			{
				"value": "<vue>",
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b"
			},
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}",
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"value": "Methods like call(), apply()and bind() can refer thisto any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"value": "“this” is determined on how a function is called",
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0"
			},
			{
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers"
			},
			{
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a",
				"value": "line-height"
			},
			{
				"value": "Block level elements take the width of the entire row",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary",
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694"
			},
			{
				"value": "color",
				"id": "9eadd81b-a378-414a-827b-7c9d105b1ca3"
			},
			{
				"value": "hidden",
				"id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc"
			},
			{
				"id": "db1d4d07-16ed-4031-8fe4-b5f502063844",
				"value": "radio"
			},
			{
				"value": "reset",
				"id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8"
			},
			{
				"value": "flex-wrap",
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3"
			},
			{
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b",
				"value": "The margins will collapse, meaning that the margin of the biggest element will win "
			},
			{
				"value": "debugger",
				"id": "d987a018-4259-438f-8baa-67cb031c3591"
			},
			{
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f",
				"value": "It occurred because you are trying to call a value as a function but the value is not a function"
			},
			{
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f",
				"value": "block scope"
			},
			{
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a",
				"value": "function scope"
			},
			{
				"value": "lexical scope",
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096"
			},
			{
				"value": "module scope",
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2"
			},
			{
				"value": "global scope",
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f"
			},
			{
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe",
				"value": "It is not recommended because it opens a security leak, eval is evil"
			},
			{
				"value": "ternary operator",
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e"
			}
		],
		"status": "closed",
		"answers": [
			{
				"blockType": "text",
				"id": "27b84cf5-494b-4ed3-a12a-b37fa4bf68cd",
				"type": "radio",
				"placeholder": "Add option",
				"value": "variadic function"
			},
			{
				"value": "ternary operator",
				"blockType": "text",
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"value": "OAuth 2.0",
				"id": "5a740d2a-6aca-4e4c-9d48-d0970b770cd2",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"value": "functional programming",
				"id": "c7a2dfaa-36c7-442a-9580-5d02cec83e85",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio"
			},
			{
				"value": "variable assignment",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"id": "da31646b-a569-43fa-897a-1c9ae81a7b37"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "c9f8a104-30e9-4ee9-8c95-353adca9a9b4",
				"blockType": "text",
				"value": "this technique is called invalid JavaScript"
			},
			{
				"value": "react conditional",
				"type": "radio",
				"id": "3c3335c3-7133-4557-8465-d0af717816f3",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"value": "nullish coalescing",
				"blockType": "text",
				"id": "d2c502aa-66c9-4d59-95b3-effb65213b16",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b",
				"value": "optional chaining",
				"blockType": "text"
			}
		]
	},
	{
		"category": "javascript",
		"status": "closed",
		"answers": [
			{
				"placeholder": "Add option",
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe",
				"value": "It is not recommended because it opens a security leak, eval is evil",
				"blockType": "text",
				"type": "radio"
			},
			{
				"value": "You don’t use it because it’s a special function used by the JIT compiler to make your JS more performant when it’s runs in the browser",
				"type": "radio",
				"id": "d49bfb2e-a053-4814-ad31-b7d3ca2fe9bb",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"value": "It’s used, but not so much because it makes code less readable. It is only used if code needs to be really performant, like in (older) JS environments where functional programming style is even too heavy",
				"id": "7a110f32-e82b-4222-bf77-4c2699b1b902",
				"type": "radio",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"id": "533d9424-3ef2-4626-9ed9-b7babab3fc9c",
				"blockType": "text",
				"value": "It’s just a function used for regular expressions",
				"type": "radio"
			},
			{
				"type": "radio",
				"id": "71935f3d-8ea0-4b15-948c-03368628db3a",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "It’s a useful function when you want to parse CSS styles in your JavaScript e.g when you don’t use CSS modules. It provides a ready-made object (much like the CSS modules “styles” object)"
			},
			{
				"type": "radio",
				"blockType": "text",
				"id": "b4ca60b8-63d5-4a3a-b1fc-a67bb9045ae3",
				"value": "It’s a function used by build tools and uglifiers to provide the fastest build times and hot module reloads",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"type": "radio",
				"value": "It’s not recommended because it’s deprecated",
				"placeholder": "Add option",
				"id": "c6e7f307-7f3f-44f5-9303-dda528d81b7f"
			},
			{
				"type": "radio",
				"blockType": "text",
				"id": "27b84cf5-494b-4ed3-a12a-b37fa4bf68cd",
				"placeholder": "Add option",
				"value": "It’s only used for older browsers when code is transpiled because JS runs way faster when code is ran in eval"
			}
		],
		"type": "radio",
		"codeBlock": "",
		"question": "In JS, why would you recommend the use of eval, to other developers as function fundamental?",
		"voted": [],
		"pollNumber": 64,
		"openingTime": null,
		"id": "8834b276-24b8-4567-9478-93d80a4fa8f1",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{
				"value": "fixed",
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0"
			},
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73",
				"value": "<weak>"
			},
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe",
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61",
				"value": "<dbz>"
			},
			{
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d",
				"value": "<react>"
			},
			{
				"value": "<card>",
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1"
			},
			{
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b",
				"value": "<vue>"
			},
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }",
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9"
			},
			{
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e",
				"value": "arrow functions doesn’t have a “this” context"
			},
			{
				"value": "Methods like call(), apply()and bind() can refer thisto any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			},
			{
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers",
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65"
			},
			{
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a",
				"value": "line-height"
			},
			{
				"value": "Block level elements take the width of the entire row",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary",
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694"
			},
			{
				"id": "9eadd81b-a378-414a-827b-7c9d105b1ca3",
				"value": "color"
			},
			{
				"value": "hidden",
				"id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc"
			},
			{
				"id": "db1d4d07-16ed-4031-8fe4-b5f502063844",
				"value": "radio"
			},
			{
				"id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8",
				"value": "reset"
			},
			{
				"value": "flex-wrap",
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3"
			},
			{
				"value": "The margins will collapse, meaning that the margin of the biggest element will win ",
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b"
			},
			{
				"value": "debugger",
				"id": "d987a018-4259-438f-8baa-67cb031c3591"
			},
			{
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f",
				"value": "It occurred because you are trying to call a value as a function but the value is not a function"
			},
			{
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f",
				"value": "block scope"
			},
			{
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a",
				"value": "function scope"
			},
			{
				"value": "lexical scope",
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096"
			},
			{
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2",
				"value": "module scope"
			},
			{
				"value": "global scope",
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f"
			},
			{
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe",
				"value": "It is not recommended because it opens a security leak, eval is evil"
			}
		]
	},
	{
		"category": "javascript",
		"id": "851e9030-bd5f-4245-a026-c31eb8ab1a46",
		"status": "new",
		"answers": [
			{
				"value": "block scope",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"value": "function scope",
				"blockType": "text",
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "dc7ac71c-7532-4e29-883e-588f8e36617f",
				"blockType": "text",
				"value": "run-time scope"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"id": "81f2b46d-812e-4dc3-80b7-c70946695122",
				"type": "radio",
				"value": "inline-block scope"
			},
			{
				"id": "1d3f8784-6cbc-47f6-96ae-2a620a78b1eb",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "colono scope"
			},
			{
				"value": "\"this\" scope",
				"type": "radio",
				"placeholder": "Add option",
				"id": "7f766d76-8042-4eb1-9c51-64685db82ef5",
				"blockType": "text"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"value": "object scope",
				"blockType": "text",
				"id": "c2df9801-a137-40ae-9b62-e4fafd96bda0"
			},
			{
				"type": "radio",
				"value": "MVP scope",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "b366ad87-359c-417b-938b-69055ba0880a"
			},
			{
				"value": "dynamic scope",
				"id": "b9b7fa73-1458-4aa0-a5e8-72171ee93cf2",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096",
				"value": "lexical scope"
			},
			{
				"type": "radio",
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "module scope"
			},
			{
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"value": "global scope",
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f"
			},
			{
				"id": "afc85054-6567-41fa-8392-a0153ad3b4b6",
				"placeholder": "Add option",
				"value": "variable scope",
				"type": "radio",
				"blockType": "text"
			},
			{
				"type": "radio",
				"value": "react scope ",
				"blockType": "text",
				"id": "88b8516d-c705-4e91-aadd-62b2332f69e1",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"type": "radio",
				"value": "micro scope",
				"id": "108c4292-94d1-462b-8a43-853bff8b04cc",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"value": "app scope",
				"blockType": "text",
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe"
			}
		],
		"type": "checkbox",
		"voted": [],
		"codeBlock": "",
		"question": "In JS, scopes are important to know, but with what kind of scopes does JS go?",
		"pollNumber": 63,
		"openingTime": null,
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0",
				"value": "fixed"
			},
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73",
				"value": "<weak>"
			},
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"value": "Temporal API"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61",
				"value": "<dbz>"
			},
			{
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d",
				"value": "<react>"
			},
			{
				"value": "<card>",
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1"
			},
			{
				"value": "<vue>",
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b"
			},
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}",
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16"
			},
			{
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }",
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9"
			},
			{
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e",
				"value": "arrow functions doesn’t have a “this” context"
			},
			{
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3",
				"value": "Methods like call(), apply()and bind() can refer thisto any object"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			},
			{
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers"
			},
			{
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a",
				"value": "line-height"
			},
			{
				"value": "Block level elements take the width of the entire row",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary",
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694"
			},
			{
				"id": "9eadd81b-a378-414a-827b-7c9d105b1ca3",
				"value": "color"
			},
			{
				"id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc",
				"value": "hidden"
			},
			{
				"id": "db1d4d07-16ed-4031-8fe4-b5f502063844",
				"value": "radio"
			},
			{
				"value": "reset",
				"id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8"
			},
			{
				"value": "flex-wrap",
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3"
			},
			{
				"value": "The margins will collapse, meaning that the margin of the biggest element will win ",
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b"
			},
			{
				"value": "debugger",
				"id": "d987a018-4259-438f-8baa-67cb031c3591"
			},
			{
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f",
				"value": "It occurred because you are trying to call a value as a function but the value is not a function"
			},
			{
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f",
				"value": "block scope"
			},
			{
				"value": "function scope",
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a"
			},
			{
				"value": "lexical scope",
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096"
			},
			{
				"value": "module scope",
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2"
			},
			{
				"value": "global scope",
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f"
			}
		]
	},
	{
		"answers": [
			{
				"type": "radio",
				"blockType": "text",
				"value": "It occurred because you are trying to call a value as a function but the value is not a function",
				"placeholder": "Add option",
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f"
			},
			{
				"id": "d6259cbc-9a09-4f76-b42b-106907ded817",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"value": "It occurred because you didn’t export your React component"
			},
			{
				"id": "848216c9-32c4-4d32-b099-329cc04852f7",
				"placeholder": "Add option",
				"type": "radio",
				"value": "It occurred because you are trying to access a function before it is initialized",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"value": "It occurred because the code was not transpiled ",
				"id": "a6a06bcc-e8f7-4e68-89ac-aa33e2c93c02"
			},
			{
				"type": "radio",
				"value": "It occurred because the code was not polyfilled ",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "20ef4314-2dbf-4d87-b0c1-bdf253db172d"
			},
			{
				"blockType": "text",
				"id": "d744a6ce-e9f0-48f9-b8f4-abf21f15de0a",
				"placeholder": "Add option",
				"value": "It occurred because it is a syntax error",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"value": "It occurred because a variable name is missing ",
				"blockType": "text",
				"id": "8dc1892f-2713-4e5b-b40d-c968f1df009d"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"value": "It occurred because you forgot to include the necessary libraries",
				"id": "2195789d-bc18-4430-9918-ebb32baed75d"
			},
			{
				"id": "7abb5c29-86c7-47ab-a118-f8e0a8931741",
				"value": "It occured because you are running JS in an environment where usage of JS is limited",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"value": "It occurred because you are trying to access a property on a null object",
				"id": "739db4b7-a7d2-4f0f-8742-66f4b999a9fc"
			},
			{
				"blockType": "text",
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f",
				"type": "radio",
				"placeholder": "Add option",
				"value": "It occured because it’s not adhering the JS syntax"
			}
		],
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{
				"value": "fixed",
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0"
			},
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73",
				"value": "<weak>"
			},
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe",
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{
				"value": "<dbz>",
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61"
			},
			{
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d",
				"value": "<react>"
			},
			{
				"value": "<card>",
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1"
			},
			{
				"value": "<vue>",
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b"
			},
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}",
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"value": "Methods like call(), apply()and bind() can refer thisto any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"value": "“this” is determined on how a function is called",
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0"
			},
			{
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers"
			},
			{
				"value": "line-height",
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a"
			},
			{
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d",
				"value": "Block level elements take the width of the entire row"
			},
			{
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary",
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694"
			},
			{
				"id": "9eadd81b-a378-414a-827b-7c9d105b1ca3",
				"value": "color"
			},
			{
				"value": "hidden",
				"id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc"
			},
			{
				"value": "radio",
				"id": "db1d4d07-16ed-4031-8fe4-b5f502063844"
			},
			{
				"id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8",
				"value": "reset"
			},
			{
				"value": "flex-wrap",
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3"
			},
			{
				"value": "The margins will collapse, meaning that the margin of the biggest element will win ",
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b"
			},
			{
				"value": "debugger",
				"id": "d987a018-4259-438f-8baa-67cb031c3591"
			},
			{
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f",
				"value": "It occurred because you are trying to call a value as a function but the value is not a function"
			}
		],
		"category": "javascript",
		"codeBlock": "(Error: \"[”FREE”, “KABISA”, “DRINKS”].toLowerCase()\" is not a function)",
		"voted": [],
		"pollNumber": 62,
		"status": "closed",
		"question": "In JS, runtime errors are caught so be assured, can you explain how the following error occurred? ",
		"id": "6359ddbd-1056-4ad5-b5c5-fe7d5f5046b7",
		"type": "radio",
		"openingTime": null
	},
	{
		"question": "For the 50th time now it’s hard to come up with a question rhyme, but what in JS is a statement that halts execution of code and allows to inspect it in the browser at runtime?",
		"voted": [],
		"id": "fba1e165-93dc-400b-9b12-474ec77ece68",
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{
				"value": "fixed",
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0"
			},
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{
				"value": "<weak>",
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73"
			},
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe",
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a",
				"value": "<apple>"
			},
			{
				"value": "<dbz>",
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61"
			},
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{
				"value": "<card>",
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1"
			},
			{
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b",
				"value": "<vue>"
			},
			{
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b",
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			},
			{
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e",
				"value": "arrow functions doesn’t have a “this” context"
			},
			{
				"value": "Methods like call(), apply()and bind() can refer thisto any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"value": "“this” is determined on how a function is called",
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0"
			},
			{
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers"
			},
			{
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a",
				"value": "line-height"
			},
			{
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d",
				"value": "Block level elements take the width of the entire row"
			},
			{
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary",
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694"
			},
			{
				"value": "color",
				"id": "9eadd81b-a378-414a-827b-7c9d105b1ca3"
			},
			{
				"id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc",
				"value": "hidden"
			},
			{
				"value": "radio",
				"id": "db1d4d07-16ed-4031-8fe4-b5f502063844"
			},
			{
				"id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8",
				"value": "reset"
			},
			{
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3",
				"value": "flex-wrap"
			},
			{
				"value": "The margins will collapse, meaning that the margin of the biggest element will win ",
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b"
			},
			{
				"value": "debugger",
				"id": "d987a018-4259-438f-8baa-67cb031c3591"
			}
		],
		"type": "radio",
		"codeBlock": "",
		"answers": [
			{
				"placeholder": "Add option",
				"id": "daa2b428-c4cb-41bc-a46c-48e458347ffd",
				"value": "inspect",
				"blockType": "text",
				"type": "radio"
			},
			{
				"value": "return",
				"blockType": "text",
				"type": "radio",
				"id": "556a98e7-253a-458e-b519-ffe42a10fd85",
				"placeholder": "Add option"
			},
			{
				"value": "break",
				"id": "d262b52e-c281-4f01-a740-4c4f659a4de7",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"value": "trace",
				"id": "b7bea478-6179-4875-8f0d-ba740aa67cf2"
			},
			{
				"blockType": "text",
				"type": "radio",
				"id": "2ffcbbb6-16fb-43b1-bbe4-b815c0b1543a",
				"placeholder": "Add option",
				"value": "console.log"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"value": "debugger",
				"id": "d987a018-4259-438f-8baa-67cb031c3591"
			},
			{
				"id": "f276807b-8f1a-44d3-b9d1-a26955372c5d",
				"value": "throw new error",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text"
			},
			{
				"id": "9585ff5c-66ad-4174-bdc9-d752e0169adb",
				"blockType": "text",
				"value": "eval",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"value": "By installing the debug.js package",
				"id": "db02c1f0-1936-4aae-80b6-ae2b9e381d02",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"value": "It’s not a JS feature but something default since Chrome 47"
			}
		],
		"status": "closed",
		"category": "javascript",
		"pollNumber": 61,
		"openingTime": null
	},
	{
		"voted": [],
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0",
				"value": "fixed"
			},
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73",
				"value": "<weak>"
			},
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{
				"value": "<dbz>",
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61"
			},
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1",
				"value": "<card>"
			},
			{
				"value": "<vue>",
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b"
			},
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}",
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16"
			},
			{
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }",
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9"
			},
			{
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e",
				"value": "arrow functions doesn’t have a “this” context"
			},
			{
				"value": "Methods like call(), apply()and bind() can refer thisto any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"value": "“this” is determined on how a function is called",
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0"
			},
			{
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers",
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65"
			},
			{
				"value": "line-height",
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a"
			},
			{
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d",
				"value": "Block level elements take the width of the entire row"
			},
			{
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary",
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694"
			},
			{
				"id": "9eadd81b-a378-414a-827b-7c9d105b1ca3",
				"value": "color"
			},
			{
				"id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc",
				"value": "hidden"
			},
			{
				"value": "radio",
				"id": "db1d4d07-16ed-4031-8fe4-b5f502063844"
			},
			{
				"id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8",
				"value": "reset"
			},
			{
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3",
				"value": "flex-wrap"
			},
			{
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b",
				"value": "The margins will collapse, meaning that the margin of the biggest element will win "
			}
		],
		"id": "ec015e3a-a0dc-4e42-8424-382475b3bd46",
		"answers": [
			{
				"placeholder": "Add option",
				"type": "radio",
				"value": "The adjacent element will dissappear",
				"blockType": "text",
				"id": "ea02ed2c-c22a-497d-983f-73000725e8a1"
			},
			{
				"id": "ae5aef4a-9ce6-42a5-b2fd-ba8d455a52b4",
				"value": "The adjacent block element will behave as inline element",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"id": "d95894eb-ee5f-42eb-9267-202468d05171",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "Nothing, it will just behave as instructed in CSS or default browser styles are applied"
			},
			{
				"placeholder": "Add option",
				"value": "The margins will collapse, meaning that the margin of the biggest element will win ",
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b",
				"blockType": "text",
				"type": "radio"
			},
			{
				"type": "radio",
				"id": "7751f427-8984-4220-a230-6b61d3602ed6",
				"placeholder": "Add option",
				"value": "The adjacent block element will be out of the document flow",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"value": "The adjacent block element will ignore all CSS rules applied",
				"blockType": "text",
				"id": "c6d8ed1a-6be3-443c-8133-e340e653c3e2"
			},
			{
				"type": "radio",
				"value": "Margins will be removed from both elements ",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "daa2b428-c4cb-41bc-a46c-48e458347ffd"
			}
		],
		"codeBlock": "",
		"question": "In CSS, when block level element margins vertically collide, what explanation from this behaviour can you provide?",
		"pollNumber": 60,
		"category": "css",
		"openingTime": null,
		"status": "closed",
		"type": "checkbox"
	},
	{
		"openingTime": null,
		"id": "e9be1513-8833-47b6-8ba9-8b3c74f1fbe8",
		"question": "For CSS devs this might be a no-brainer, but what flex property makes sure items are forced on multiple lines when they don’t fit their container?",
		"category": "css",
		"status": "closed",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{
				"value": "fixed",
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0"
			},
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{
				"value": "<weak>",
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73"
			},
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			},
			{
				"value": "The effect is an infinite loop, due to circularity ",
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a"
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61",
				"value": "<dbz>"
			},
			{
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d",
				"value": "<react>"
			},
			{
				"value": "<card>",
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1"
			},
			{
				"value": "<vue>",
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b"
			},
			{
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b",
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			},
			{
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e",
				"value": "arrow functions doesn’t have a “this” context"
			},
			{
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3",
				"value": "Methods like call(), apply()and bind() can refer thisto any object"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			},
			{
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers"
			},
			{
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a",
				"value": "line-height"
			},
			{
				"value": "Block level elements take the width of the entire row",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary",
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694"
			},
			{
				"value": "color",
				"id": "9eadd81b-a378-414a-827b-7c9d105b1ca3"
			},
			{
				"value": "hidden",
				"id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc"
			},
			{
				"value": "radio",
				"id": "db1d4d07-16ed-4031-8fe4-b5f502063844"
			},
			{
				"value": "reset",
				"id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8"
			},
			{
				"value": "flex-wrap",
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3"
			}
		],
		"pollNumber": 59,
		"codeBlock": "",
		"voted": [],
		"type": "checkbox",
		"answers": [
			{
				"id": "1ac970bf-1ff9-4a00-8e44-188c967e07d0",
				"value": "flex-contain",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "contain",
				"id": "c3801bb7-b4bb-44df-8d56-81b3ebaad941"
			},
			{
				"value": "currently not possible with flexbox but will come with CSS4",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "fcc51844-fc40-4d18-b625-41b4ae2eefbd"
			},
			{
				"blockType": "text",
				"type": "radio",
				"value": "container-wrap",
				"placeholder": "Add option",
				"id": "12ede4c4-0144-4c6b-95b1-5067200d80f7"
			},
			{
				"blockType": "text",
				"id": "c155b868-5791-4341-9a57-d49d0a88fd35",
				"value": "overflow-wrap",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"value": "flex-burrito",
				"id": "7abe8172-2794-4b9f-89d1-79668b619fcd",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"value": "apply a class “wrapper” to a html element will do it ",
				"id": "9404521e-646f-487b-90cd-b65e0963d634",
				"blockType": "text",
				"type": "radio"
			},
			{
				"id": "784a2706-f037-4210-8d5c-4431585e2bb4",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "flex-shrink",
				"type": "radio"
			},
			{
				"value": "flex-grow",
				"type": "radio",
				"blockType": "text",
				"id": "aed48ac6-c158-4399-9840-515456171f6c",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"id": "b3849543-f133-4686-a698-9b717b738796",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "flex"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"value": "flex-wrap",
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"id": "61d74de0-aa84-40fd-ab78-8462f1c38922",
				"type": "radio",
				"value": "flex-basis"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"id": "ea02ed2c-c22a-497d-983f-73000725e8a1",
				"value": "max-width",
				"type": "radio"
			}
		]
	},
	{
		"codeBlock": "",
		"question": "In HTML, input types come with a lot of various values, what are existing ones that you may already have used?",
		"type": "checkbox",
		"answers": [
			{
				"placeholder": "Add option",
				"value": "color",
				"type": "radio",
				"id": "9eadd81b-a378-414a-827b-7c9d105b1ca3",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"id": "7cb20a35-249d-44c5-b92f-3940e4135d91",
				"value": "text"
			},
			{
				"blockType": "text",
				"type": "radio",
				"value": "country",
				"placeholder": "Add option",
				"id": "bacdceab-fe62-48bb-a958-606503549537"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "5a671f46-236d-4d04-94d9-2c5a797bec87",
				"value": "message",
				"blockType": "text"
			},
			{
				"type": "radio",
				"id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc",
				"placeholder": "Add option",
				"value": "hidden",
				"blockType": "text"
			},
			{
				"type": "radio",
				"id": "db1d4d07-16ed-4031-8fe4-b5f502063844",
				"placeholder": "Add option",
				"value": "radio",
				"blockType": "text"
			},
			{
				"id": "91372ccf-4ced-4625-b1b3-a709ce7b862c",
				"value": "tv",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"value": "blank",
				"id": "f868c635-7e94-407c-8c2a-05f6acd17638",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text"
			},
			{
				"id": "326a96ff-f5f0-4c18-b902-784ab87aa97c",
				"value": "video",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio"
			},
			{
				"id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"value": "reset"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"id": "5166c210-bd60-4f1c-99d5-2c8b11e85d0c",
				"type": "radio",
				"value": "code"
			},
			{
				"value": "switch",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "284aefc7-2627-43c4-adfd-99bb1b166ed8",
				"type": "radio"
			},
			{
				"value": "gender",
				"type": "radio",
				"blockType": "text",
				"id": "63c6e93b-db1a-4e27-a370-ea495130dbfc",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"id": "1ac970bf-1ff9-4a00-8e44-188c967e07d0",
				"value": "url",
				"blockType": "text"
			}
		],
		"status": "closed",
		"category": "html",
		"id": "2d11134c-28a2-4b0b-9d5d-fcc52f363c75",
		"pollNumber": 58,
		"voted": [],
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{
				"value": "fixed",
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0"
			},
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{
				"value": "<weak>",
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73"
			},
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"value": "Temporal API"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a",
				"value": "<apple>"
			},
			{
				"value": "<dbz>",
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61"
			},
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{
				"value": "<card>",
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1"
			},
			{
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b",
				"value": "<vue>"
			},
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}",
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16"
			},
			{
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }",
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3",
				"value": "Methods like call(), apply()and bind() can refer thisto any object"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			},
			{
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers",
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65"
			},
			{
				"value": "line-height",
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a"
			},
			{
				"value": "Block level elements take the width of the entire row",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary"
			},
			{
				"id": "9eadd81b-a378-414a-827b-7c9d105b1ca3",
				"value": "color"
			},
			{
				"value": "hidden",
				"id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc"
			},
			{
				"id": "db1d4d07-16ed-4031-8fe4-b5f502063844",
				"value": "radio"
			},
			{
				"id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8",
				"value": "reset"
			},
			{
				"id": "1ac970bf-1ff9-4a00-8e44-188c967e07d0",
				"value": "url"
			}
		],
		"openingTime": null
	},
	{
		"openingTime": 1665387799196,
		"pollNumber": 57,
		"category": "html",
		"codeBlock": "",
		"id": "3110f5ab-1865-4ed2-b40b-0484c0099382",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{
				"value": "fixed",
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0"
			},
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73",
				"value": "<weak>"
			},
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe",
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"value": "The effect is an infinite loop, due to circularity ",
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a"
			},
			{
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a",
				"value": "<apple>"
			},
			{
				"value": "<dbz>",
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61"
			},
			{
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d",
				"value": "<react>"
			},
			{
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1",
				"value": "<card>"
			},
			{
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b",
				"value": "<vue>"
			},
			{
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b",
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there"
			},
			{
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}",
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16"
			},
			{
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }",
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"value": "Methods like call(), apply()and bind() can refer thisto any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			},
			{
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers",
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65"
			},
			{
				"value": "line-height",
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a"
			},
			{
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d",
				"value": "Block level elements take the width of the entire row"
			},
			{
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary"
			},
			{
				"id": "9ebc4b2b-142a-4b75-bf50-79c221fe4822",
				"value": "Setting “display:block” on an inline element will make the element block level"
			}
		],
		"question": "In HTML, elements are either block or inline, what are facts to know that’ll make your skills shine?",
		"status": "closed",
		"type": "checkbox",
		"voted": [
			{
				"answerId": "b0987f23-4b8e-4e61-b0f2-7c05849e738d",
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292"
			},
			{
				"answerId": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292"
			},
			{
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292",
				"answerId": "9ebc4b2b-142a-4b75-bf50-79c221fe4822"
			},
			{
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292",
				"answerId": "9eadd81b-a378-414a-827b-7c9d105b1ca3"
			},
			{
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2",
				"answerId": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2",
				"answerId": "cf2b5eb1-afce-40f5-8048-5bc9d7450fea"
			},
			{
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2",
				"answerId": "9ebc4b2b-142a-4b75-bf50-79c221fe4822"
			},
			{
				"answerId": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2"
			},
			{
				"answerId": "aacbda67-363e-44da-ae60-50237596814c",
				"userId": "tRLVcXr9ZXgF3A5VzwO4rrESCY32"
			},
			{
				"userId": "tRLVcXr9ZXgF3A5VzwO4rrESCY32",
				"answerId": "cf2b5eb1-afce-40f5-8048-5bc9d7450fea"
			},
			{
				"answerId": "9ebc4b2b-142a-4b75-bf50-79c221fe4822",
				"userId": "tRLVcXr9ZXgF3A5VzwO4rrESCY32"
			},
			{
				"userId": "tRLVcXr9ZXgF3A5VzwO4rrESCY32",
				"answerId": "ce4df6e8-727d-46a1-b567-9421382a9694"
			},
			{
				"answerId": "aacbda67-363e-44da-ae60-50237596814c",
				"userId": "VsNPZ5xdDgdZxTUeynrJJk5Qs5v2"
			},
			{
				"userId": "VsNPZ5xdDgdZxTUeynrJJk5Qs5v2",
				"answerId": "aef8dd8c-361b-44a1-a22f-639e1efaf0f8"
			},
			{
				"answerId": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"userId": "VsNPZ5xdDgdZxTUeynrJJk5Qs5v2"
			},
			{
				"userId": "VsNPZ5xdDgdZxTUeynrJJk5Qs5v2",
				"answerId": "9ebc4b2b-142a-4b75-bf50-79c221fe4822"
			},
			{
				"userId": "aWI6X9i1RugALHJ7ILr8Xp4baIW2",
				"answerId": "aef8dd8c-361b-44a1-a22f-639e1efaf0f8"
			},
			{
				"answerId": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"userId": "aWI6X9i1RugALHJ7ILr8Xp4baIW2"
			},
			{
				"userId": "aWI6X9i1RugALHJ7ILr8Xp4baIW2",
				"answerId": "9ebc4b2b-142a-4b75-bf50-79c221fe4822"
			},
			{
				"userId": "aWI6X9i1RugALHJ7ILr8Xp4baIW2",
				"answerId": "cf2b5eb1-afce-40f5-8048-5bc9d7450fea"
			},
			{
				"answerId": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"userId": "B762i26QM7Y275I0w2uAtklg3Gx1"
			},
			{
				"answerId": "b0987f23-4b8e-4e61-b0f2-7c05849e738d",
				"userId": "B762i26QM7Y275I0w2uAtklg3Gx1"
			},
			{
				"answerId": "cf2b5eb1-afce-40f5-8048-5bc9d7450fea",
				"userId": "B762i26QM7Y275I0w2uAtklg3Gx1"
			},
			{
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1",
				"answerId": "9ebc4b2b-142a-4b75-bf50-79c221fe4822"
			},
			{
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1",
				"answerId": "cf2b5eb1-afce-40f5-8048-5bc9d7450fea"
			},
			{
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1",
				"answerId": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"answerId": "b0987f23-4b8e-4e61-b0f2-7c05849e738d",
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2"
			},
			{
				"answerId": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2"
			},
			{
				"answerId": "9ebc4b2b-142a-4b75-bf50-79c221fe4822",
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2"
			},
			{
				"answerId": "b0987f23-4b8e-4e61-b0f2-7c05849e738d",
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3"
			},
			{
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3",
				"answerId": "ce4df6e8-727d-46a1-b567-9421382a9694"
			},
			{
				"answerId": "9ebc4b2b-142a-4b75-bf50-79c221fe4822",
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3"
			},
			{
				"userId": "kfrkjsbashYfl1sD2PgVGXcpND63",
				"answerId": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"answerId": "aacbda67-363e-44da-ae60-50237596814c",
				"userId": "kfrkjsbashYfl1sD2PgVGXcpND63"
			},
			{
				"userId": "btmzQ2h02aa7NwgpOFMGvGSgcv62",
				"answerId": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"userId": "btmzQ2h02aa7NwgpOFMGvGSgcv62",
				"answerId": "aacbda67-363e-44da-ae60-50237596814c"
			},
			{
				"userId": "btmzQ2h02aa7NwgpOFMGvGSgcv62",
				"answerId": "c99e8e72-7b8a-4350-9dcf-bc4564cf5bec"
			},
			{
				"userId": "GxloHn9wFkRFYYHXSuTj56kXd0q2",
				"answerId": "aacbda67-363e-44da-ae60-50237596814c"
			},
			{
				"answerId": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"userId": "GxloHn9wFkRFYYHXSuTj56kXd0q2"
			},
			{
				"answerId": "9ebc4b2b-142a-4b75-bf50-79c221fe4822",
				"userId": "GxloHn9wFkRFYYHXSuTj56kXd0q2"
			},
			{
				"userId": "qBHCpnXFOLZsdzcHbKzvkqP6Uck1",
				"answerId": "ce4df6e8-727d-46a1-b567-9421382a9694"
			},
			{
				"userId": "y0Vb464iCdeVzfBJBZzCjCIZIi72",
				"answerId": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"userId": "y0Vb464iCdeVzfBJBZzCjCIZIi72",
				"answerId": "ce4df6e8-727d-46a1-b567-9421382a9694"
			},
			{
				"answerId": "9ebc4b2b-142a-4b75-bf50-79c221fe4822",
				"userId": "y0Vb464iCdeVzfBJBZzCjCIZIi72"
			}
		],
		"answers": [
			{
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "Block level elements take the width of the entire row",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "aacbda67-363e-44da-ae60-50237596814c",
				"blockType": "text",
				"value": "Block level elements are the default for every element"
			},
			{
				"type": "radio",
				"blockType": "text",
				"id": "cf2b5eb1-afce-40f5-8048-5bc9d7450fea",
				"value": "Setting flex or inline-flex on an element means the element is block or inline",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"blockType": "text",
				"value": "<button> is a block level element because it’s looking like a “block”",
				"id": "8744c3e1-6516-4e94-a719-724d96a83a93",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"blockType": "text",
				"id": "aef8dd8c-361b-44a1-a22f-639e1efaf0f8",
				"placeholder": "Add option",
				"value": "When a block element is followed by an inline, they are both positioned in the same row next to each other "
			},
			{
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"type": "radio",
				"placeholder": "Add option",
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary",
				"blockType": "text"
			},
			{
				"id": "c99e8e72-7b8a-4350-9dcf-bc4564cf5bec",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"value": "A <span> with “width: 100%” will automatically become a block level element "
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": "Setting “display:block” on an inline element will make the element block level",
				"type": "radio",
				"id": "9ebc4b2b-142a-4b75-bf50-79c221fe4822"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"id": "9eadd81b-a378-414a-827b-7c9d105b1ca3",
				"value": "There is a specific CSS selector that selects only block level elements",
				"type": "radio"
			}
		]
	},
	{
		"answers": [
			{
				"blockType": "code",
				"value": "height",
				"type": "radio",
				"id": "957fb965-562c-499a-8b65-1768935101ef",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"blockType": "code",
				"type": "radio",
				"value": "padding",
				"id": "c79acdc6-183d-4ecc-a227-eead616f0dd3"
			},
			{
				"value": "margin",
				"id": "14ee8ebb-1433-4270-8d3a-6543c506c591",
				"placeholder": "Add option",
				"blockType": "code",
				"type": "radio"
			},
			{
				"value": "flexbox",
				"type": "radio",
				"blockType": "code",
				"placeholder": "Add option",
				"id": "fc43c80f-8456-4d0e-87cd-62180cd2fb05"
			},
			{
				"blockType": "code",
				"placeholder": "Add option",
				"id": "d9c9fa14-535d-4b24-8ae4-93b63b5abbbf",
				"type": "radio",
				"value": "grid"
			},
			{
				"placeholder": "Add option",
				"id": "3f7d3c38-2025-4340-b133-3e57f5194940",
				"value": "gap",
				"blockType": "code",
				"type": "radio"
			},
			{
				"blockType": "code",
				"placeholder": "Add option",
				"value": "text-space",
				"id": "6d792f32-b790-488f-8d82-46eb87d03775",
				"type": "radio"
			},
			{
				"value": "line-gap",
				"type": "radio",
				"id": "eb5b2c65-ef0b-4200-967d-7b30066dd76e",
				"blockType": "code",
				"placeholder": "Add option"
			},
			{
				"blockType": "code",
				"placeholder": "Add option",
				"value": "You can't control it, it depends on the font",
				"type": "radio",
				"id": "423fa5c2-369f-47b7-820d-e945cde32647"
			},
			{
				"value": "justify-content: space-between",
				"id": "d749370b-6555-467f-8392-e96fb37f8afd",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "code"
			},
			{
				"placeholder": "Add option",
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a",
				"type": "radio",
				"blockType": "code",
				"value": "line-height"
			},
			{
				"placeholder": "Add option",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d",
				"type": "radio",
				"blockType": "code",
				"value": "CSS is unable to do this, but in JS there is a way where you can calculate the height of each character and check line by line to determine the distance"
			}
		],
		"pollNumber": 56,
		"question": "In CSS, for readability it’s important to have vertical spacing for text inbetween, what property do you use that make your text look neat and clean?",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{
				"value": "fixed",
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0"
			},
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73",
				"value": "<weak>"
			},
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"value": "Temporal API"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe",
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a",
				"value": "<apple>"
			},
			{
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61",
				"value": "<dbz>"
			},
			{
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d",
				"value": "<react>"
			},
			{
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1",
				"value": "<card>"
			},
			{
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b",
				"value": "<vue>"
			},
			{
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b",
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there"
			},
			{
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}",
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"value": "Methods like call(), apply()and bind() can refer thisto any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			},
			{
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers",
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65"
			},
			{
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a",
				"value": "line-height"
			}
		],
		"voted": [],
		"id": "d03b72d1-7478-4c82-a9ab-2ff07f6666b9",
		"openingTime": null,
		"type": "radio",
		"codeBlock": "",
		"category": "css",
		"status": "closed"
	},
	{
		"id": "9ff76fdf-b0c1-49d5-92d5-aef0dca5458b",
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0",
				"value": "fixed"
			},
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73",
				"value": "<weak>"
			},
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"value": "Temporal API"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe",
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{
				"value": "<dbz>",
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61"
			},
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{
				"value": "<card>",
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1"
			},
			{
				"value": "<vue>",
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b"
			},
			{
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b",
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"value": "Methods like call(), apply()and bind() can refer thisto any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			},
			{
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers"
			}
		],
		"voted": [],
		"type": "radio",
		"answers": [
			{
				"id": "45f5bbab-3aa9-4bc7-8b1b-8ceb300c7e6f",
				"value": "It’s a special tool designed by Google to make the web a better place specially aimed at IE11",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"id": "7c60d897-60dc-4b7c-8184-121067bc2038",
				"type": "radio",
				"blockType": "text",
				"value": "It’s a tool to transform your code to make it more efficient and faster in browsers",
				"placeholder": "Add option"
			},
			{
				"id": "c19a6b37-5450-46c9-b801-ffe560709b26",
				"blockType": "text",
				"value": "When using Babel in your app you are adhering to the code quality standards according to the EcmaScript committee. This allows your company to wear the Babel quality mark. Once a year Babel auditors randomly visit companies for code quality inspections and taking coding assignments with the people working at the company",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"blockType": "text",
				"type": "radio",
				"value": "Babel detects what features a browser has to offer. You can serve great experiences for each user per device",
				"id": "faff9b44-5735-4a2d-88f2-53c8c10b1fc2",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers",
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65"
			},
			{
				"value": "Babel has nothing to do with web, it’s just a one-on-one interaction (mostly used in user research fields) to gather information from a person, which is called “even Babelen” that has been \"accepted\" as the multilingual term people understand",
				"type": "radio",
				"blockType": "text",
				"id": "61063dfe-dc53-4e0d-8344-6ff1b17e3eb7",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"value": "It’s a library you can include that provides functions like “.map” or “.reduce” out of the box and places those methods on the datatype they belong to",
				"id": "60399f16-e182-4a5d-9b74-40bd10f7b7ab"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"id": "9917128d-c4a5-415c-9c51-443e294ad5bc",
				"value": "Babel-testing-library is a fast and popular testing framework "
			},
			{
				"type": "radio",
				"value": "Babel is a tool that allows developers to test their websites and apps in different emulated browsers",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "735a89ef-8d5d-4a75-9803-33c48a82b82e"
			},
			{
				"blockType": "text",
				"type": "radio",
				"value": "Babel compiles JavaScript code to a low level language that provides low level languages like C or Rust to run in the browser",
				"placeholder": "Add option",
				"id": "a92e09c7-4c42-45df-85de-b56366b32375"
			},
			{
				"placeholder": "Add option",
				"value": "Babel is a module bundler like webpack or rollup",
				"id": "b3f773c7-5ff8-4704-975d-79271aeecd6f",
				"blockType": "text",
				"type": "radio"
			},
			{
				"id": "957fb965-562c-499a-8b65-1768935101ef",
				"type": "radio",
				"placeholder": "Add option",
				"value": "Babel is software to track all your hours in, manage your resources or propose your time off (the nicer competitor to Oodoo)",
				"blockType": "text"
			}
		],
		"status": "closed",
		"codeBlock": "",
		"pollNumber": 55,
		"openingTime": null,
		"category": "javascript",
		"question": "Babel is used in projects many times, now what does it do and what are it’s facts,  for sure is that it’s quite hard to come up with these rhymes!"
	},
	{
		"pollNumber": 54,
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{
				"value": "fixed",
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0"
			},
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{
				"value": "<weak>",
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73"
			},
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{
				"value": "<dbz>",
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61"
			},
			{
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d",
				"value": "<react>"
			},
			{
				"value": "<card>",
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1"
			},
			{
				"value": "<vue>",
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b"
			},
			{
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b",
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			},
			{
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e",
				"value": "arrow functions doesn’t have a “this” context"
			},
			{
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3",
				"value": "Methods like call(), apply()and bind() can refer thisto any object"
			},
			{
				"value": "“this” is determined on how a function is called",
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0"
			},
			{
				"id": "216e678a-b9c9-43f1-92f0-f071a8e16459",
				"value": "<flex>"
			},
			{
				"value": "<grid>",
				"id": "73ae1614-e0df-4878-b3be-13e81b4a2ee3"
			},
			{
				"value": "<name>",
				"id": "3971d747-59f2-4ddd-b76e-6f6fa4d40dc0"
			},
			{
				"value": "<fortissimo>",
				"id": "4d288058-e3b3-4c1d-8dbf-c6029126ff23"
			},
			{
				"id": "d30a130b-31d4-4661-b543-e4aa387644f4",
				"value": "<cookie>"
			},
			{
				"value": "<serverside>",
				"id": "45f5bbab-3aa9-4bc7-8b1b-8ceb300c7e6f"
			},
			{
				"value": "<photo>",
				"id": "ee8a6af5-b27c-4c09-98ce-085a687fdb5a"
			}
		],
		"status": "new",
		"question": "Part 3: While writing HTML, semantic tags are to keep in mind, which tags you see listed here are false and not defined? ",
		"codeBlock": "",
		"category": "html",
		"voted": [],
		"id": "02dd9811-e45b-4457-8536-da9f390d676c",
		"type": "checkbox",
		"answers": [
			{
				"value": "<h7>",
				"blockType": "code",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"id": "686af49e-1e8f-43d1-a9cb-02028412917b",
				"value": "<h6>",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "code"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "code",
				"value": "<legend>",
				"id": "739580c9-725e-4bb3-95ef-3955e8691776"
			},
			{
				"blockType": "code",
				"value": "<option>",
				"type": "radio",
				"id": "5d7df2bb-c376-4b62-b0bc-8c75e11855d3",
				"placeholder": "Add option"
			},
			{
				"blockType": "code",
				"value": "<flex>",
				"id": "216e678a-b9c9-43f1-92f0-f071a8e16459",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"id": "73ae1614-e0df-4878-b3be-13e81b4a2ee3",
				"value": "<grid>",
				"blockType": "code",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"id": "3971d747-59f2-4ddd-b76e-6f6fa4d40dc0",
				"value": "<name>",
				"blockType": "code",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"type": "radio",
				"blockType": "code",
				"value": "<hr>",
				"placeholder": "Add option",
				"id": "2a3bf16d-08d9-482d-ba64-4fbea2059c9b"
			},
			{
				"type": "radio",
				"id": "3aa0777b-defc-488a-a20f-c2689c3a4c54",
				"placeholder": "Add option",
				"blockType": "code",
				"value": "<li>"
			},
			{
				"type": "radio",
				"value": "<meter>",
				"placeholder": "Add option",
				"blockType": "code",
				"id": "9f9d9033-df88-45ea-a4bc-93a3b7db57ee"
			},
			{
				"type": "radio",
				"blockType": "code",
				"placeholder": "Add option",
				"id": "4d288058-e3b3-4c1d-8dbf-c6029126ff23",
				"value": "<fortissimo>"
			},
			{
				"blockType": "code",
				"value": "<pre>",
				"type": "radio",
				"placeholder": "Add option",
				"id": "afe30cec-6d40-4e19-8476-f6ee6f03e93e"
			},
			{
				"type": "radio",
				"blockType": "code",
				"id": "e7b7def2-513d-4e7d-9c75-4902fc963473",
				"value": "<textarea>",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"id": "d30a130b-31d4-4661-b543-e4aa387644f4",
				"type": "radio",
				"value": "<cookie>",
				"blockType": "code"
			},
			{
				"value": "<photo>",
				"type": "radio",
				"blockType": "code",
				"id": "ee8a6af5-b27c-4c09-98ce-085a687fdb5a",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"value": "<serverside>",
				"id": "45f5bbab-3aa9-4bc7-8b1b-8ceb300c7e6f",
				"blockType": "code"
			}
		],
		"openingTime": null
	},
	{
		"question": "In JS, the value of the “this” keyword depend, what are facts you know to about it to recommend to others who practise frontend?",
		"answers": [
			{
				"type": "radio",
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"blockType": "text",
				"value": "“this” is determined on how a function is called",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"value": "“this” can only be used in class based code, if you use it outside it’ll return undefined",
				"id": "4a0e7bb0-5423-4c10-ac96-86d76dabe1a9"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"value": "Methods like call(), apply()and bind() can refer thisto any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"placeholder": "Add option",
				"id": "0b220fb2-2e6f-4325-a45e-288932cad711",
				"blockType": "text",
				"value": "“this” always refers to the window object",
				"type": "radio"
			},
			{
				"type": "radio",
				"id": "de54b60e-750a-4e15-b489-41f42734e24c",
				"placeholder": "Add option",
				"value": "The value of “this” depends on the preferences set by the user in the browser ",
				"blockType": "text"
			},
			{
				"value": "“this” is the same as “that” ",
				"blockType": "text",
				"id": "c14bacc1-8e97-4de1-a515-e058b9dd2685",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"value": "“this” reference is preserved with var ",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"id": "f1b94e2c-e68a-4f90-8640-18f67dbd1362"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			}
		],
		"voted": [],
		"openingTime": null,
		"type": "checkbox",
		"category": "javascript",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0",
				"value": "fixed"
			},
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{
				"value": "<weak>",
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73"
			},
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61",
				"value": "<dbz>"
			},
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{
				"value": "<card>",
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1"
			},
			{
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b",
				"value": "<vue>"
			},
			{
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b",
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there"
			},
			{
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}",
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"value": "Methods like call(), apply()and bind() can refer thisto any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"value": "“this” is determined on how a function is called",
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0"
			}
		],
		"status": "new",
		"codeBlock": "",
		"pollNumber": 53,
		"id": "8cb9cb38-1887-43f5-aa79-e12665449bdd"
	},
	{
		"id": "4d7e0811-d0af-41d2-834e-eabd6b89655f",
		"status": "needs-revision",
		"answers": [
			{
				"type": "radio",
				"placeholder": "Add option",
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}",
				"blockType": "code"
			},
			{
				"placeholder": "Add option",
				"id": "8d73fb79-a808-4df9-a9eb-8c61bfc241de",
				"value": ".center {  \tposition: middle; }",
				"blockType": "text",
				"type": "radio"
			},
			{
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }",
				"type": "radio",
				"blockType": "text",
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"placeholder": "Add option"
			},
			{
				"id": "0394bf39-c3f2-48f2-a084-73a4f5abda69",
				"placeholder": "Add option",
				"value": ".center {  \talign: center; }",
				"type": "radio",
				"blockType": "text"
			},
			{
				"type": "radio",
				"id": "8532d476-4c24-4154-a260-0c2f88c44094",
				"placeholder": "Add option",
				"value": ".center {  \tcenter: true; }",
				"blockType": "text"
			},
			{
				"id": "5703adf3-67a0-4c0c-99d1-f40b2319bb49",
				"type": "radio",
				"value": "Just using a class named “.center” will do this automatically",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"value": "By using the <center> tag in HTML",
				"blockType": "text",
				"type": "radio",
				"id": "e9821040-8591-4711-ad52-10a262997762",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "By going to page layout > page setup > layout > select “center” from the “alignment” dropdown list",
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0"
			}
		],
		"question": "In CSS, centering an element on both axis never sticks in our heads, now choose the right answers to prevent seeing reds!",
		"category": "css",
		"voted": [],
		"codeBlock": "",
		"type": "checkbox",
		"pollNumber": 52,
		"openingTime": null,
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0",
				"value": "fixed"
			},
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73",
				"value": "<weak>"
			},
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"value": "Temporal API"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"value": "The effect is an infinite loop, due to circularity ",
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a"
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61",
				"value": "<dbz>"
			},
			{
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d",
				"value": "<react>"
			},
			{
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1",
				"value": "<card>"
			},
			{
				"value": "<vue>",
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b"
			},
			{
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b",
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }",
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9"
			}
		]
	},
	{
		"type": "checkbox",
		"answers": [
			{
				"blockType": "text",
				"placeholder": "Add option",
				"value": "If you allow user input, make sure it’s limited or sanitized: In this case never allow certain special characters to be put in the database directly and be in control of the output. ",
				"type": "radio",
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b"
			},
			{
				"value": "If you want to prevent XSS, you must make sure users can’t toggle developer tools when using your app ",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"id": "43a4ba28-05ac-4c2d-893f-f93f3122baa1"
			},
			{
				"blockType": "text",
				"value": "XSS was a problem up until awhile ago, but modern web frameworks resolved this issue automatically",
				"type": "radio",
				"placeholder": "Add option",
				"id": "5fdc837d-4977-4653-bf86-0c5654fa2791"
			},
			{
				"placeholder": "Add option",
				"value": "XSS is not a problem, if you communicate to your users that they should use your app carefully you should always trust your users ",
				"id": "7097b6b3-9f94-4d12-be9b-87893a9a4602",
				"type": "radio",
				"blockType": "text"
			},
			{
				"type": "radio",
				"value": "XSS is nothing dangerous, it’s a tool that allow developers to use scripts on many sites at once. In short, this gives the possibility to work on multiple apps/sites simultaneously",
				"id": "a52db799-80cb-421e-a349-fcc0380c1730",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"type": "radio",
				"value": "You prevent XSS by setting the Access-Control-Allow-Origin: property",
				"placeholder": "Add option",
				"id": "03fbbb9a-49cd-4635-b91f-0746e1ee2519"
			},
			{
				"type": "radio",
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"id": "ad617ee8-ae38-4605-8c11-650af4baf026",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "You prevent XSS by making sure to disable JavaScript for users in their browsers",
				"type": "radio"
			},
			{
				"type": "radio",
				"value": "Host your app with https, XSS then won’t have a chance",
				"id": "00cc9ec9-f13a-4249-99c7-eba7f0c19247",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"id": "a5a04528-8f9f-452e-ae90-9001392de24d",
				"value": "You often see developers creating a .xss file in their project root. In there you can define rules to prevent XSS attacks"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"value": "XSS only happens in outdated browsers, so make sure your users only access your app in modern browsers ",
				"blockType": "text",
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16"
			}
		],
		"voted": [],
		"openingTime": null,
		"codeBlock": "",
		"category": "general-frontend",
		"question": "In Web, apps can be XSS (Cross Site Scripting) tormented, what are things to consider to have this prevented?",
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0",
				"value": "fixed"
			},
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73",
				"value": "<weak>"
			},
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"value": "Temporal API"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe",
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"value": "The effect is an infinite loop, due to circularity ",
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a"
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61",
				"value": "<dbz>"
			},
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{
				"value": "<card>",
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1"
			},
			{
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b",
				"value": "<vue>"
			},
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			}
		],
		"status": "closed",
		"pollNumber": 51,
		"id": "ef85354e-525c-4377-b38c-bcb07da1cc56"
	},
	{
		"category": "html",
		"type": "radio",
		"answers": [
			{
				"id": "1518fb8f-7151-4f55-b833-1b6c5cd06ce5",
				"placeholder": "Add option",
				"blockType": "code",
				"type": "radio",
				"value": "<address>"
			},
			{
				"value": "<article>",
				"id": "2ff6cdf1-c244-46a4-bc62-aa7efce54f6f",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio"
			},
			{
				"type": "radio",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a",
				"placeholder": "Add option",
				"value": "<apple>",
				"blockType": "text"
			},
			{
				"id": "d73ddf38-fe0a-4bfc-b652-05b95b5cac5b",
				"placeholder": "Add option",
				"value": "<aside>",
				"type": "radio",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"id": "5e0dd14c-c19b-42a0-b255-80430b6dc9a3",
				"value": "<audio>"
			},
			{
				"id": "36bf1b5f-0652-45b9-b1d6-76b79adf50cc",
				"type": "radio",
				"value": "<base>",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61",
				"blockType": "text",
				"value": "<dbz>",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": "<data>",
				"id": "38ea832e-3426-459f-8cd6-b0c34aec6bc9",
				"type": "radio"
			},
			{
				"type": "radio",
				"blockType": "text",
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"value": "<ruby>",
				"placeholder": "Add option",
				"id": "279d0160-a9c7-4dd0-8897-dc32d67c7a8a",
				"type": "radio"
			},
			{
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1",
				"type": "radio",
				"value": "<card>",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"id": "fe586458-735a-4ecc-b72b-0459534b9d76",
				"placeholder": "Add option",
				"type": "radio",
				"value": "<dd>",
				"blockType": "text"
			},
			{
				"value": "<center>",
				"type": "radio",
				"blockType": "text",
				"id": "b015c56d-7a81-4e78-8c9b-7e874c907985",
				"placeholder": "Add option"
			},
			{
				"value": "<mark>",
				"id": "87b96802-bb31-47dd-802f-be0bfc0e02a5",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"id": "2ec1d87f-f292-45dc-9b46-67cda74a6429",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"value": "<figure>"
			},
			{
				"placeholder": "Add option",
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b",
				"blockType": "text",
				"value": "<vue>",
				"type": "radio"
			}
		],
		"id": "8420118b-7e60-4f4c-b9ac-9ddceb197f75",
		"voted": [],
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{
				"value": "fixed",
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0"
			},
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{
				"value": "<weak>",
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73"
			},
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"value": "The effect is an infinite loop, due to circularity ",
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a"
			},
			{
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a",
				"value": "<apple>"
			},
			{
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61",
				"value": "<dbz>"
			},
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1",
				"value": "<card>"
			},
			{
				"value": "<vue>",
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b"
			}
		],
		"pollNumber": 50,
		"openingTime": null,
		"status": "closed",
		"question": "Part 2: While writing HTML, semantic tags are to keep in mind, which tags you see listed here are false and not defined? ",
		"codeBlock": ""
	},
	{
		"type": "radio",
		"category": "react",
		"openingTime": null,
		"voted": [],
		"id": "7abc189a-961a-48a8-ad7a-b319ee50372e",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0",
				"value": "fixed"
			},
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{
				"value": "<weak>",
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73"
			},
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			},
			{
				"value": "The effect is an infinite loop, due to circularity ",
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a"
			}
		],
		"question": "See the code on your screen, what is the effect of the code that is seen? ",
		"codeBlock": "import \"./styles.css\";\nimport React, { useState } from \"react\";\n\nexport default function App() {\n  const [count, setCount] = useState(0);\n\tconst [count2, setCount2] = useState(10);\n  \n  React.useEffect(() => {\n    setCount(count + 1);\n  }, [count]);\n\n  return (\n    <div className=\"App\">\n      <h1>{count}</h1>\n    </div>\n  );\n}",
		"answers": [
			{
				"blockType": "text",
				"type": "radio",
				"id": "d0508c23-d4fd-4836-b402-e364ed5d3af2",
				"placeholder": "Add option",
				"value": "The effect is that the count variable is updated from 0 to 1, because the useEffect will run once on pageload"
			},
			{
				"id": "a839a7c3-a6f4-4800-8481-12ccde3d8c00",
				"placeholder": "Add option",
				"type": "radio",
				"value": "The effect is that the count variable is not updated and stays 0, because it never runs useEffect on the first render, only when you update the “count” value in another place first",
				"blockType": "text"
			},
			{
				"value": "The effect is a performance improvement, because React wants to know what state variable it should update so when you pass that as dependency it helps React identifying state (kinda like “keys”) ",
				"placeholder": "Add option",
				"id": "c4fdfe41-aa69-4715-83ce-b2a5f5555453",
				"blockType": "text",
				"type": "radio"
			},
			{
				"type": "radio",
				"blockType": "text",
				"id": "49ec256c-95e3-4aa2-bac1-ea44ba75e771",
				"placeholder": "Add option",
				"value": "The effect is that all useState’s in this component are updated"
			},
			{
				"value": "The effect is an infinite loop, due to circularity ",
				"type": "radio",
				"blockType": "text",
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"value": "The effect is that you will get an error, because the useEffect rule is that you can’t update state inside a useEffect hook",
				"type": "radio",
				"id": "1518fb8f-7151-4f55-b833-1b6c5cd06ce5",
				"blockType": "text"
			}
		],
		"pollNumber": 49,
		"status": "closed"
	},
	{
		"openingTime": null,
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0",
				"value": "fixed"
			},
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73",
				"value": "<weak>"
			},
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"value": "Temporal API"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			}
		],
		"codeBlock": "",
		"id": "21e57202-a8fd-4b91-9d97-d02b03359a89",
		"pollNumber": 48,
		"category": "javascript",
		"voted": [],
		"question": "In JS, JSON.stringify() has a purpose, what knowledge about that can you surface?",
		"answers": [
			{
				"blockType": "text",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"blockType": "text",
				"value": "It’s a way to validate JSON and check for null and undefined values. Stringify automatically turns everything into a string and removes null and undefined values",
				"placeholder": "Add option",
				"id": "9274036c-7bb7-4e09-9a29-212af3029210",
				"type": "radio"
			},
			{
				"value": "It’s a way to sanitize data before sending to the server",
				"id": "5abc2c08-1f79-434d-949e-bf8b08f15bc4",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio"
			},
			{
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"id": "5cbf34df-26d4-451b-9e06-c910bd26227b",
				"value": "It’s a way to improve performance when sending data over the wire"
			},
			{
				"type": "radio",
				"id": "ed980571-46ec-43a2-a143-69a4b328c880",
				"value": "It’s just a tradition we all keep in place and is passed on for a long time from senior devs to junior devs",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"value": "With JSON.stringify we care about longevity of transferring data over HTTP. It’s is the “greener” and so to say the “environment friendly” way of sending data ",
				"blockType": "text",
				"id": "b032e10b-6111-425d-b830-e36dcbd76cc2",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"value": "It hasn’t got a real purpose anymore with modern browsers have the built-in SendData API available",
				"id": "d0508c23-d4fd-4836-b402-e364ed5d3af2"
			}
		],
		"status": "closed",
		"type": "radio"
	},
	{
		"pollNumber": 47,
		"codeBlock": "",
		"type": "radio",
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0",
				"value": "fixed"
			},
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73",
				"value": "<weak>"
			},
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"value": "Temporal API"
			},
			{
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url"
			},
			{
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe",
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)"
			}
		],
		"id": "cb4e41bb-23fe-4a36-9233-b666ab00c922",
		"category": "javascript",
		"status": "closed",
		"question": "In HTML, a web page has event flows built into, now what are the ways it flows through?",
		"openingTime": null,
		"voted": [],
		"answers": [
			{
				"value": "Circling (event flow cycle)",
				"blockType": "text",
				"id": "3ca9f093-d762-4e36-80c3-7ba090de794f",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "8aa5643f-35a5-43fa-b9c2-b8e7459a676b",
				"value": "Square (event square model: top, left, right, bottom)"
			},
			{
				"type": "radio",
				"value": "Passing down events (Event delegation)",
				"id": "9e214139-4cb5-4fdf-b417-b7e5ae8e568c",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)"
			},
			{
				"blockType": "text",
				"id": "b720ca6d-c9b5-4624-a3e5-1c2ac9d9594e",
				"type": "radio",
				"value": "EventEffect (events on dependency mamagement)",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"value": "Synthetic event flow",
				"placeholder": "Add option",
				"type": "radio",
				"id": "6fef370e-bd28-47f6-b740-ed870d3733cb"
			},
			{
				"value": "Event flow artifacts",
				"id": "d96cc921-1d4d-456e-b6ce-9adec656e9b8",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"value": "Event loop (queue based)",
				"type": "radio",
				"id": "317cc6ef-d660-42d2-8457-b458b68d69d1",
				"blockType": "text"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"type": "radio",
				"blockType": "text",
				"value": "What the heck are you talking about? There is no such thing as event flows",
				"placeholder": "Add option"
			}
		]
	},
	{
		"codeBlock": "",
		"answers": [
			{
				"blockType": "text",
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"type": "radio",
				"value": "It will create soft links (routing without page refresh)  instead of the default hard links (routing with page refresh)",
				"blockType": "text",
				"id": "ab661612-5a25-4b05-873b-a534c850d851",
				"placeholder": "Add option"
			},
			{
				"value": "It will disable a link tag and make it unclickable. Often used when you want to prevent the user from going to the next step when user data is required and still misses",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "2e5d9f9a-3be0-461f-9992-64758379e52d",
				"type": "radio"
			},
			{
				"id": "b1d55de6-85f3-4166-aaf3-9d06b11d6aed",
				"type": "radio",
				"placeholder": "Add option",
				"value": "It will open a link in a new tab",
				"blockType": "text"
			},
			{
				"value": "It will open a link in the same tab",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"id": "60c1978c-6cce-4268-9962-6469a38102c7"
			},
			{
				"blockType": "text",
				"value": "It will change from behaviour from an <a> to what a <button> does",
				"id": "43b2718d-0558-4d4e-aaf4-163a00db6bfc",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": "It will force the user to double click the link",
				"type": "radio",
				"id": "9b64a8a3-c990-4ed4-b708-fde8eb27840f"
			},
			{
				"blockType": "text",
				"id": "3ca9f093-d762-4e36-80c3-7ba090de794f",
				"placeholder": "Add option",
				"type": "radio",
				"value": "It will prevent that the current link won’t be taken into account for SEO"
			}
		],
		"voted": [],
		"openingTime": null,
		"category": "javascript",
		"id": "1c15a030-0f06-4e6a-a00f-e6bbc3708d65",
		"status": "closed",
		"type": "radio",
		"pollNumber": 46,
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{
				"value": "fixed",
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0"
			},
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73",
				"value": "<weak>"
			},
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"value": "Temporal API"
			},
			{
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url"
			}
		],
		"question": "In JS, preventDefault is used to prevent default user-agent actions, but when having preventDefault and clicking on <a> do you know what happens?"
	},
	{
		"answers": [
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "Debouncing will batch a series of calls into a single call to prevent multiple calls ",
				"blockType": "text"
			},
			{
				"value": "Debouncing is a technique to load your script in a lazy manner",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "ab661612-5a25-4b05-873b-a534c850d851",
				"type": "radio"
			},
			{
				"type": "radio",
				"id": "2e5d9f9a-3be0-461f-9992-64758379e52d",
				"value": "Debounce.js is the new kid on the block concerning frontend frameworks that handles SSR, like Next.js and Remix",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"type": "radio",
				"id": "b1d55de6-85f3-4166-aaf3-9d06b11d6aed",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "Debouncing will delay function execution and reduce the amount of times a function fires based on a regular interval"
			},
			{
				"placeholder": "Add option",
				"id": "60c1978c-6cce-4268-9962-6469a38102c7",
				"blockType": "text",
				"value": "Debouncing is an option within developer tools to check the bounce rate of your users in your app ",
				"type": "radio"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"value": "Debouncing is a piece of code used to provide modern functionality on older browsers that do not natively support it",
				"type": "radio",
				"id": "43b2718d-0558-4d4e-aaf4-163a00db6bfc"
			},
			{
				"id": "9b64a8a3-c990-4ed4-b708-fde8eb27840f",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"value": "Debouncing doesn’t exist and is another mumbo jumbo term you made up again :@"
			}
		],
		"type": "radio",
		"pollNumber": 45,
		"voted": [],
		"openingTime": null,
		"category": "javascript",
		"question": "In JS, debounced function calls keeps your app lean, but what is a benefit that can be seen? ",
		"id": "f025bc02-4652-48e9-8f21-6ec494a9c3fd",
		"codeBlock": "",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0",
				"value": "fixed"
			},
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73",
				"value": "<weak>"
			},
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"id": "b1d55de6-85f3-4166-aaf3-9d06b11d6aed",
				"value": "Debouncing will delay function execution and reduce the amount of times a function fires based on a regular interval"
			}
		],
		"status": "closed"
	},
	{
		"codeBlock": "1 const me = {\n2   id: \"1\",\n3   name: \"Marciano\",\n4   what: [\"Tapping keyboards\", \"Side project manager\", \"FE Poll Master\"]\n5 }",
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{
				"value": "fixed",
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0"
			},
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{
				"value": "<weak>",
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73"
			},
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"value": "Temporal API"
			},
			{
				"id": "fbcecb9a-6270-47bb-bcff-dd6f072e1aa3",
				"value": "const [first, …rest] = me"
			}
		],
		"status": "new",
		"id": "7d406e7c-da85-459b-b23e-d83f614032d9",
		"answers": [
			{
				"type": "radio",
				"value": "const [2,3] = me",
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"blockType": "code",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"blockType": "code",
				"type": "radio",
				"value": "const [first, …rest] = me",
				"id": "fbcecb9a-6270-47bb-bcff-dd6f072e1aa3"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "0522a3e0-295d-4c7c-bec9-d615d1ff0b34",
				"blockType": "code",
				"value": "const [“Side project manager”, “FE Poll Master”] = me;"
			},
			{
				"placeholder": "Add option",
				"id": "c4f6ba6a-cb61-4f03-b04a-4f7b85285944",
				"value": "me.lastTwo()",
				"blockType": "code",
				"type": "radio"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "code",
				"value": "me.last().last()",
				"id": "898234e0-8054-4e39-8956-dbf70ea54206"
			},
			{
				"blockType": "code",
				"id": "e12b6321-b66e-4e58-ab76-def15a1e9d1b",
				"value": "me.pop()",
				"type": "radio",
				"placeholder": "Add option"
			}
		],
		"openingTime": null,
		"category": "javascript",
		"voted": [],
		"pollNumber": 44,
		"question": "Don’t ask me why these polls all rhyme, but when I want to get the last 2 items of this array, how do you adjust the following line?",
		"type": "radio"
	},
	{
		"answers": [
			{
				"value": "Nothing, the Date object will stay but will be improved ",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"id": "6c4a8965-6c87-4a8a-9854-539d467e6678"
			},
			{
				"id": "febd9b9f-08e1-4c92-a20e-5b04e09d4ac4",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"value": "Nothing, because there is nothing wrong with the Date object"
			},
			{
				"placeholder": "Add option",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"type": "radio",
				"value": "Temporal API",
				"blockType": "text"
			},
			{
				"type": "radio",
				"id": "633de2e7-5fd3-4350-9b40-8a3e838c862b",
				"value": "Moment.js will be the replacement",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"id": "525a453e-9f2e-4c2f-9cae-1b2a22e95c7f",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"value": "Date-fns will be the replacement"
			},
			{
				"id": "04b9d48f-3f83-4e77-af29-2c09384c44c6",
				"value": "Calendar API",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"type": "radio",
				"value": "DateTime API",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "92c1d319-2e57-46bf-93ab-047e5875d85a"
			},
			{
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"value": "Timezone API",
				"id": "b95a97d5-dfa0-42cb-937a-e257848f628c"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"value": "ImprovedDate API",
				"type": "radio",
				"id": "27169ec4-5aa9-4b6e-9e31-3744f11f54a1"
			},
			{
				"placeholder": "Add option",
				"value": "Date v2.0 API",
				"blockType": "text",
				"type": "radio",
				"id": "b040ab82-fbb0-46f9-8af9-212e3fda215c"
			},
			{
				"value": "The Date API will be deprecated eventually because most libraries handle it way better these days",
				"type": "radio",
				"placeholder": "Add option",
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"blockType": "text"
			}
		],
		"voted": [],
		"pollNumber": 43,
		"openingTime": null,
		"id": "ebf7d59e-d6fa-4b7b-a4ae-bb02ba309a00",
		"status": "closed",
		"question": "In JS, `Date` has been a long-standing pain point in ECMAScript, now what is the name of the new upcoming API that will make the `Date` object get skipped?",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{
				"value": "fixed",
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0"
			},
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73",
				"value": "<weak>"
			},
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"value": "Temporal API"
			}
		],
		"category": "javascript",
		"type": "radio",
		"codeBlock": ""
	},
	{
		"category": "javascript",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{
				"value": "fixed",
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0"
			},
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{
				"value": "<weak>",
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73"
			},
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			}
		],
		"pollNumber": 42,
		"id": "534fc315-2223-4a64-90df-08c8299bb5ec",
		"codeBlock": "",
		"type": "radio",
		"question": "In JS, newly added features do impress, now name something unique about “Sets”",
		"voted": [],
		"openingTime": null,
		"answers": [
			{
				"blockType": "text",
				"type": "radio",
				"id": "ad69c147-3a6c-4e26-9506-169204dbc8eb",
				"placeholder": "Add option",
				"value": "Sets allows you to manage returns of values as sets of a given number: Set(5) returns a set of 5 items"
			},
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"id": "7d99e753-c532-4a78-8bc6-fc0b0b07279b",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "You can store arrays and objects interchangeably and work with these datatypes with the same API"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"value": "A Set is a newly added datatype that allows you to find and return matching values in arrays more easily",
				"type": "radio",
				"id": "06cc3409-aafc-4900-af48-90923a680b86"
			},
			{
				"value": "A Set is a newly added datatype that eventually will deprecate arrays, because Sets are much more performant then arrays",
				"type": "radio",
				"placeholder": "Add option",
				"id": "43fc3a45-b357-48ef-a68a-5c9ef919d9b8",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"id": "7a56fea1-3556-4821-8071-5871e665b445",
				"value": "A Set holds data and tries to automatically find the “matching set” based on the type of value what is put in the Set. This means for instance that when you have: new Set(“mumbo jumbo”, 655, true, “wahay”), it only returns the two strings (“mumbo jumbo”and “wahay”) because it’s a “set of strings”"
			},
			{
				"value": "Sets are a way to use new methods on arrays and objects in older browsers like IE9 and lower. Because it was harder and less performant to implement newly added methods on objects and arrays, Sets were a solution not many developers are aware of",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "6c4a8965-6c87-4a8a-9854-539d467e6678"
			}
		],
		"status": "closed"
	},
	{
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0",
				"value": "fixed"
			},
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73",
				"value": "<weak>"
			},
			{
				"id": "ad69c147-3a6c-4e26-9506-169204dbc8eb",
				"value": "<text>"
			}
		],
		"question": "In JS, we have a new thing called nullish coalescing, what is the effect of this thing?",
		"codeBlock": "",
		"pollNumber": 41,
		"answers": [
			{
				"id": "ad69c147-3a6c-4e26-9506-169204dbc8eb",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "it checks whether a variable is null or undefined and returns the truthy value "
			},
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"blockType": "text",
				"type": "radio",
				"value": "it checks whether a variable is falsey and returns the truthy value",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"id": "7d99e753-c532-4a78-8bc6-fc0b0b07279b",
				"value": "it sets the variable to a non-null value",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"type": "radio",
				"blockType": "text",
				"value": "it checks whether a variable is falsey, and if so returns the the falsey value",
				"id": "06cc3409-aafc-4900-af48-90923a680b86",
				"placeholder": "Add option"
			},
			{
				"value": "It nullifies values, which means for a string that holds “this is a string” it returns “”, for numbers that holds 34 it returns the number 0, for booleans which hold a true value, it returns false",
				"type": "radio",
				"placeholder": "Add option",
				"id": "43fc3a45-b357-48ef-a68a-5c9ef919d9b8",
				"blockType": "text"
			},
			{
				"id": "7a56fea1-3556-4821-8071-5871e665b445",
				"value": "With nullish coalescing it is possible to assign custom values to null, like: null = “null is now a string”",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"value": "Nullish coalescing is a technique that nullifies the JavaScript in your app, which gives you the ability to overwrite JS keywords like “class”, “static”, “function” and add keywords yourself",
				"type": "radio",
				"placeholder": "Add option",
				"id": "6c4a8965-6c87-4a8a-9854-539d467e6678",
				"blockType": "text"
			}
		],
		"openingTime": null,
		"id": "8a5fadcc-914c-4730-851c-33690c3e3088",
		"voted": [],
		"category": "javascript",
		"type": "radio",
		"status": "closed"
	},
	{
		"id": "67cba5a0-3e99-4e17-b9f2-d8f6609c0f77",
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0",
				"value": "fixed"
			},
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73",
				"value": "<weak>"
			},
			{
				"id": "ad69c147-3a6c-4e26-9506-169204dbc8eb",
				"value": "<text>"
			}
		],
		"status": "closed",
		"codeBlock": "",
		"category": "html",
		"openingTime": null,
		"pollNumber": 40,
		"voted": [],
		"question": "While writing HTML, semantic tags are to keep in mind, which tags you see listed here are false and not defined? ",
		"answers": [
			{
				"placeholder": "Add option",
				"blockType": "code",
				"type": "radio",
				"id": "4aad2a7c-ae6a-4ad6-ace1-7af9e18ee8fb",
				"value": "<kbd>"
			},
			{
				"blockType": "code",
				"value": "<details>",
				"id": "e4e40a95-8e2a-4309-ad2f-8ca3d3b1cfaa",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"id": "7427171d-31b5-4272-9ca7-bfee79419607",
				"type": "radio",
				"blockType": "code",
				"value": "<summary>",
				"placeholder": "Add option"
			},
			{
				"blockType": "code",
				"id": "d3bfcc38-a094-4bbb-a252-cf929db78a29",
				"placeholder": "Add option",
				"value": "<time>",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "code",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"value": "<output>",
				"blockType": "code",
				"type": "radio",
				"id": "3786bfe8-56d4-4aa5-a516-e764b18b442c",
				"placeholder": "Add option"
			},
			{
				"blockType": "code",
				"placeholder": "Add option",
				"value": "<currency>",
				"type": "radio",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"blockType": "code",
				"type": "radio",
				"value": "<progress>",
				"id": "92bd22d4-b9fc-41b6-975f-92d69864ce61",
				"placeholder": "Add option"
			},
			{
				"value": "<title>",
				"id": "6c0a9dec-f2b3-48b2-ab26-1ca5b9ba6102",
				"type": "radio",
				"blockType": "code",
				"placeholder": "Add option"
			},
			{
				"blockType": "code",
				"placeholder": "Add option",
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"type": "radio"
			},
			{
				"type": "radio",
				"blockType": "code",
				"value": "<iframe>",
				"placeholder": "Add option",
				"id": "e8c05a28-ef57-46d1-b81f-28fdf69e1d11"
			},
			{
				"type": "radio",
				"blockType": "code",
				"value": "<dialog>",
				"id": "6941dca5-70b6-41f0-828e-2782a7a15091",
				"placeholder": "Add option"
			},
			{
				"blockType": "code",
				"placeholder": "Add option",
				"type": "radio",
				"id": "c8f9947c-af19-4b51-9049-7f877587cbe8",
				"value": "<tbody>"
			},
			{
				"placeholder": "Add option",
				"blockType": "code",
				"type": "radio",
				"value": "<weak>",
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73"
			},
			{
				"type": "radio",
				"blockType": "code",
				"value": "<text>",
				"id": "ad69c147-3a6c-4e26-9506-169204dbc8eb",
				"placeholder": "Add option"
			}
		],
		"type": "checkbox"
	},
	{
		"category": "css",
		"id": "5a260808-707e-4f8e-ae12-b541daf1d43e",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{
				"value": "fixed",
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0"
			},
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"id": "e4e40a95-8e2a-4309-ad2f-8ca3d3b1cfaa",
				"value": "@supports"
			}
		],
		"type": "radio",
		"answers": [
			{
				"id": "4aad2a7c-ae6a-4ad6-ace1-7af9e18ee8fb",
				"blockType": "text",
				"value": "@enabled",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"id": "e4e40a95-8e2a-4309-ad2f-8ca3d3b1cfaa",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "@supports"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "7427171d-31b5-4272-9ca7-bfee79419607",
				"value": "@feature",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"id": "d3bfcc38-a094-4bbb-a252-cf929db78a29",
				"placeholder": "Add option",
				"type": "radio",
				"value": "@media"
			},
			{
				"value": "@experimental",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"blockType": "text",
				"value": "@danger",
				"id": "3786bfe8-56d4-4aa5-a516-e764b18b442c",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "@property",
				"blockType": "text",
				"type": "radio"
			},
			{
				"type": "radio",
				"id": "92bd22d4-b9fc-41b6-975f-92d69864ce61",
				"blockType": "text",
				"value": "@under-construction",
				"placeholder": "Add option"
			},
			{
				"value": "You just implement the code and the browser will automatically recognise if it works or not",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "6c0a9dec-f2b3-48b2-ab26-1ca5b9ba6102"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"value": "@browser(\"Chrome\").supports()",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"blockType": "text"
			}
		],
		"codeBlock": "",
		"status": "closed",
		"pollNumber": 39,
		"question": "In CSS, features can depend on browser support, what syntax can you use to detect this which you shouldn’t subvert?",
		"voted": [],
		"openingTime": null
	},
	{
		"type": "checkbox",
		"category": "css",
		"openingTime": null,
		"status": "closed",
		"answers": [
			{
				"type": "radio",
				"blockType": "text",
				"id": "4aad2a7c-ae6a-4ad6-ace1-7af9e18ee8fb",
				"placeholder": "Add option",
				"value": "It selects all elements on the top level of the page "
			},
			{
				"id": "e4e40a95-8e2a-4309-ad2f-8ca3d3b1cfaa",
				"placeholder": "Add option",
				"type": "radio",
				"value": "It selects all elements except elements with id’s and classes ",
				"blockType": "text"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"id": "7427171d-31b5-4272-9ca7-bfee79419607",
				"blockType": "text",
				"value": "It selects all elements on the page"
			},
			{
				"type": "radio",
				"value": "It doesn’t hold a specificity value ",
				"id": "d3bfcc38-a094-4bbb-a252-cf929db78a29",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"blockType": "text",
				"type": "radio",
				"value": "It selects all elements except elements with id’s and classes "
			},
			{
				"id": "3786bfe8-56d4-4aa5-a516-e764b18b442c",
				"value": "It enables CSS debugging by drawing borders around every element when putting “*” in your CSS ",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "It selects a random element",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"id": "92bd22d4-b9fc-41b6-975f-92d69864ce61",
				"value": "It’s a specific way in CSS to style password input: a single “*” selector determines how a single character might look like, but you can also style multiple characters by selecting “*:nth-child(n)” for example. ",
				"type": "radio"
			}
		],
		"question": "In CSS, the “*” selector does exist, what effects of this selector can you list? ",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{
				"value": "fixed",
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0"
			},
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"value": "It selects all elements on the page",
				"id": "7427171d-31b5-4272-9ca7-bfee79419607"
			},
			{
				"value": "It doesn’t hold a specificity value ",
				"id": "d3bfcc38-a094-4bbb-a252-cf929db78a29"
			}
		],
		"codeBlock": "",
		"pollNumber": 38,
		"id": "0dbc6596-79c8-49e0-be0a-0fc06cfbbf82",
		"voted": []
	},
	{
		"id": "52c18704-6915-4868-99db-5c123f2d8ef6",
		"question": "In JS, a promise can be resolved or rejected, now what knowledge is required to make promises work as expected? ",
		"codeBlock": "",
		"answers": [
			{
				"type": "radio",
				"blockType": "text",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"id": "9020655e-def4-4bb0-b2de-64f54033a343",
				"type": "radio",
				"value": "The power of promises is attaching chains, but you can’t attach more than 5 chains to your promise because of performance issues. Libraries like bluebird do allow this "
			},
			{
				"blockType": "text",
				"id": "13cf862e-8d9e-4601-975b-8a1e86caea2b",
				"placeholder": "Add option",
				"type": "radio",
				"value": "All JavaScript callbacks are promises "
			},
			{
				"blockType": "text",
				"type": "radio",
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel",
				"placeholder": "Add option"
			},
			{
				"value": "Promises return values automatically, that’s why they are called promises",
				"type": "radio",
				"id": "77f11d06-eea3-4901-8b69-911fb7a25fe0",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"id": "6aee8fad-2eeb-4f10-8e81-39cd9b141d22",
				"placeholder": "Add option",
				"value": ".chain is used to chain promises together",
				"type": "radio",
				"blockType": "text"
			},
			{
				"type": "radio",
				"value": "Promises enable multithreading in JS",
				"id": "ec7d556f-a78e-4dc0-93f9-7612f07412f3",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"value": "Promises improve performance drastically compared to callbacks",
				"id": "8963fea2-d0c5-4721-b6f2-2b1b22b8111b",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"id": "65b8fa87-c2b4-425b-811c-58d365838dbc",
				"value": "Promises are only used to fetch data from an API"
			},
			{
				"id": "4aad2a7c-ae6a-4ad6-ace1-7af9e18ee8fb",
				"placeholder": "Add option",
				"value": "When a promise is rejected, it automatically stops executing the remaining code and rest of the chain",
				"blockType": "text",
				"type": "radio"
			}
		],
		"status": "closed",
		"category": "javascript",
		"pollNumber": 37,
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0",
				"value": "fixed"
			},
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			}
		],
		"voted": [],
		"openingTime": null,
		"type": "checkbox"
	},
	{
		"pollNumber": 36,
		"codeBlock": "",
		"openingTime": null,
		"status": "closed",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{
				"value": "fixed",
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0"
			},
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			}
		],
		"answers": [
			{
				"value": "() => {} ",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "code",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"type": "radio",
				"value": "() <= {}",
				"blockType": "code",
				"id": "bbd9256c-ae8f-41d0-b02a-4718cb172680",
				"placeholder": "Add option"
			},
			{
				"value": "() ==> {}",
				"type": "radio",
				"blockType": "code",
				"placeholder": "Add option",
				"id": "0390378f-5a0b-46db-8e4b-0cc5c647f102"
			},
			{
				"type": "radio",
				"value": "() ≤=> {}",
				"id": "6d3686c5-3996-4b0f-aa72-68dbf902dfce",
				"blockType": "code",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"value": "() -> {}",
				"id": "1364885f-5e59-41ec-afad-5595e2e1699d",
				"blockType": "code",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"value": "() > {}",
				"type": "radio",
				"id": "e3566c78-bfcb-4f28-8d07-9f7741a73617",
				"blockType": "code"
			},
			{
				"id": "9362ac3f-51d3-4875-baa5-72848cb81842",
				"value": "() ^^ {}",
				"placeholder": "Add option",
				"blockType": "code",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"value": "() <<<<>>>>> {}",
				"id": "4f2b455a-f4cc-4ca4-92f8-aa0f1190958c",
				"blockType": "code",
				"type": "radio"
			},
			{
				"type": "radio",
				"value": "arrow function() {} ",
				"id": "ebe29ef7-3f84-424e-91cf-0665e58ff1eb",
				"blockType": "code",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"id": "92832d19-d803-4444-ba67-ef4416d4eadb",
				"type": "radio",
				"blockType": "code",
				"value": "function() {} "
			},
			{
				"blockType": "code",
				"placeholder": "Add option",
				"type": "radio",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "() 👉 {}"
			}
		],
		"category": "javascript",
		"question": "In JS, arrow functions are a famous subject, now how do you write an arrow function correct? ",
		"type": "radio",
		"id": "2c3ccd22-9e5e-4b51-911e-25ce4bb918a6",
		"voted": []
	},
	{
		"category": "javascript",
		"voted": [],
		"answers": [
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": "Closures are a way to end a function",
				"id": "1c3197af-7cba-452b-bcb8-1c426cf5a785",
				"type": "radio"
			},
			{
				"value": "Closures are syntactical sugar for prototype in JS",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"id": "e6df005f-18c8-43db-9d58-4f65392bc142"
			},
			{
				"id": "517a849e-8b65-45af-807d-e207bcd1cf23",
				"type": "radio",
				"value": "Because closures was released as experiment, it should be used sparingly since they are heavy for performance up until now. The W3C is still looking for ways to improve this",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"id": "a0eff40c-6d72-4e5a-9210-cc02384ba859",
				"type": "radio",
				"blockType": "text",
				"value": "Closures were introduced with ES6 because many developers proposed this feature "
			},
			{
				"placeholder": "Add option",
				"value": "A closure is the init function from a class",
				"type": "radio",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"blockType": "text"
			}
		],
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{
				"value": "fixed",
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0"
			},
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			}
		],
		"type": "radio",
		"pollNumber": 35,
		"question": "In JS, closures are there, what do you know about it, can you share? ",
		"openingTime": null,
		"status": "closed",
		"id": "efd0f153-e5b7-4fb3-bc0a-4bd02fbd669b",
		"codeBlock": ""
	},
	{
		"id": "e2a44c00-2d86-4d25-9fdd-ed51dd8e52bc",
		"type": "checkbox",
		"openingTime": null,
		"voted": [],
		"pollNumber": 34,
		"codeBlock": "",
		"answers": [
			{
				"blockType": "text",
				"value": "<label> has built-in functionality by the W3C, that when screen readers notice a <label> without corresponding input, it automatically informs the user and will send feedback to the developer",
				"type": "radio",
				"id": "8865d6f9-afd6-43bb-8314-2f22e93e1687",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"type": "radio",
				"placeholder": "Add option",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"type": "radio",
				"value": "It’s an ready-made element basically to get attention from your user: it may display things like text and a close button, a “status” from a particular object or pricetags for example",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "b935bd6d-e8c7-4a93-9269-b328c7f4409e"
			},
			{
				"placeholder": "Add option",
				"id": "2bdf5124-a734-4ee6-a5ab-a4b6ca317809",
				"type": "radio",
				"value": "<label> basically relates several input fields together",
				"blockType": "text"
			},
			{
				"type": "radio",
				"value": "When using <label>, it will generate a corresponding input out of the box",
				"placeholder": "Add option",
				"id": "bde8cb1a-7132-40b0-8e4d-39f266bc1e89",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"type": "radio",
				"id": "ff933790-6566-4918-a4c8-f5a2341b54d1",
				"value": "It doesn’t have any additional benefits, so the HTML spec deprecated the <label> tag",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"type": "radio",
				"blockType": "text",
				"value": "Adding <label> auto validates the <input> closest to it",
				"placeholder": "Add option",
				"id": "05079c62-8cba-49a8-ac2f-c738a94d9236"
			},
			{
				"id": "1c3197af-7cba-452b-bcb8-1c426cf5a785",
				"value": "On mobile devices, when using <label> next to in an input field, a user can tap on it and it will automatically fill in data that is saved in the browser (e.g name, password, address) ",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio"
			}
		],
		"category": "html",
		"status": "closed",
		"question": "In HTML, an element often used is <label>, what benefits will this element enable? ",
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{
				"value": "fixed",
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0"
			},
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			}
		]
	},
	{
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0",
				"value": "fixed"
			},
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			}
		],
		"answers": [
			{
				"type": "radio",
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0",
				"placeholder": "Add option",
				"value": "fixed",
				"blockType": "code"
			},
			{
				"type": "radio",
				"id": "fc6f8bb2-5019-40be-ae33-569674c18c83",
				"blockType": "code",
				"value": "relative",
				"placeholder": "Add option"
			},
			{
				"id": "885dcb1a-761d-405f-88da-068b40157adf",
				"blockType": "code",
				"type": "radio",
				"value": "sticky",
				"placeholder": "Add option"
			},
			{
				"blockType": "code",
				"placeholder": "Add option",
				"type": "radio",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"blockType": "code",
				"value": "static",
				"placeholder": "Add option",
				"type": "radio",
				"id": "16186995-9478-449d-b7ba-7d05780b28a8"
			},
			{
				"value": "flex",
				"blockType": "code",
				"placeholder": "Add option",
				"type": "radio",
				"id": "836482e4-dde9-4b0e-b58c-a91485979c6c"
			},
			{
				"blockType": "code",
				"id": "8865d6f9-afd6-43bb-8314-2f22e93e1687",
				"type": "radio",
				"value": "transform",
				"placeholder": "Add option"
			}
		],
		"openingTime": null,
		"id": "b7f245ea-523e-42c6-a8bd-f6b3f1479b0f",
		"voted": [],
		"codeBlock": "",
		"pollNumber": 33,
		"category": "css",
		"question": "In CSS, the position property was implemented long ago, which values from below remove the elements out of the document flow? ",
		"status": "closed",
		"type": "checkbox"
	},
	{
		"voted": [
			{
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1",
				"answerId": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{
				"userId": "GxloHn9wFkRFYYHXSuTj56kXd0q2",
				"answerId": "1850b956-0afe-4d0d-8682-baab867486ee"
			},
			{
				"userId": "aWI6X9i1RugALHJ7ILr8Xp4baIW2",
				"answerId": "1850b956-0afe-4d0d-8682-baab867486ee"
			},
			{
				"answerId": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3"
			},
			{
				"answerId": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2"
			},
			{
				"answerId": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292"
			},
			{
				"answerId": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"userId": "qBHCpnXFOLZsdzcHbKzvkqP6Uck1"
			},
			{
				"userId": "btmzQ2h02aa7NwgpOFMGvGSgcv62",
				"answerId": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{
				"answerId": "d94e33d7-4c62-4e7b-b349-d5cb8b38a0af",
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2"
			}
		],
		"category": "typescript",
		"id": "57c6facb-02da-4d4e-83c0-a5665f219a92",
		"openingTime": 1663142700182,
		"correctAnswers": [
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			}
		],
		"question": "In TypeScript, “.d.ts” files are very handy for sure, but what it is it for? ",
		"pollNumber": 32,
		"answers": [
			{
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"id": "1850b956-0afe-4d0d-8682-baab867486ee",
				"value": "For seperation of concerns: It’s a special file that is used for your types or interfaces which are used in your app. You often see something like “app-types.d.ts” which contains all your types which you import your types from in your app"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"id": "1ef216ec-e59e-4f91-8da4-c5ab2c6916fb",
				"value": "These are settings which are important for your keyboard in favor of use of TypeScript (certain shortcuts, automatic type inference)"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"value": "It’s a file to declare what file types you need to support in your app when you import these files (like .ttf, .woff, .tsx, .jsx)",
				"placeholder": "Add option",
				"id": "f9058688-96f1-4e7c-898a-1216ba242988",
				"type": "radio",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"value": "It’s a method to decide what type version you use for TypeScript, like how Node Version Manager is to Node.js. This enhances testing, because you can test code with current and older TypeScript versions by only changing the file by adding the desired version",
				"type": "radio",
				"blockType": "text",
				"id": "c82f7137-c264-4857-9886-7887607ab526"
			},
			{
				"blockType": "text",
				"id": "d94e33d7-4c62-4e7b-b349-d5cb8b38a0af",
				"type": "radio",
				"value": "It’s a file where you declare the type of TypeScript rules you need specifically",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"type": "radio",
				"value": "It’s a visual way of showing your small atomic types and interfaces to other developers in your team in isolation",
				"id": "2de2b47c-bacf-4ed8-8862-3f3d658c77fa",
				"placeholder": "Add option"
			},
			{
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "Because TS has it’s own ecosystem, this file represents the tools and plugins you use. You can install certain features like type inference, built-in types or custom types from other developers to use in your own projects"
			}
		],
		"status": "closed",
		"codeBlock": "",
		"type": "radio"
	},
	{
		"id": "b7e36596-f54c-4381-a579-28448c6d94cd",
		"type": "radio",
		"answers": [
			{
				"blockType": "text",
				"placeholder": "Add option",
				"id": "949306d1-6c8c-4d34-a5a1-b7f1de2c20a3",
				"type": "radio",
				"value": "Inference means that TypeScript interferes with your code, kind of a spelling checker "
			},
			{
				"blockType": "text",
				"type": "radio",
				"id": "699e5f6a-78bf-4d31-9933-ad08063c4043",
				"placeholder": "Add option",
				"value": "Inference is not part of TypeScript, it’s VSCode who is smart enough to recognize your types"
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"blockType": "text",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"id": "071bec56-3b51-4e6f-801e-009cf62d4984",
				"value": "Inference means that TypeScript can’t automatically understand types without explicit typing ",
				"type": "radio"
			},
			{
				"value": "Inference is an AI developer by Microsoft especially for TypeScript, running through codebases to allow type inference",
				"id": "3f4d92cf-b920-4cee-8942-b19072040e38",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio"
			},
			{
				"id": "8d929821-7869-4b43-b6af-ae97b1d99253",
				"value": "Inference means that TypeScript “interferes” which is some kind of middleware for TypeScript",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"id": "1850b956-0afe-4d0d-8682-baab867486ee",
				"value": "Inference means that TypeScript has a system which modulized your code so it doesn’t interfere or clash with other libraries ",
				"blockType": "text"
			}
		],
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			}
		],
		"voted": [],
		"status": "closed",
		"codeBlock": "",
		"category": "typescript",
		"openingTime": null,
		"pollNumber": 31,
		"question": "In TypeScript, inference makes TypeScript smart, what are the facts you can tell apart?"
	},
	{
		"openingTime": null,
		"answers": [
			{
				"value": "In a function without the word return, because it never returns",
				"type": "radio",
				"placeholder": "Add option",
				"id": "e98ec828-ff23-4190-b0a9-fb10f9ddc261",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": "In a function that returns falsy values",
				"id": "e0508d20-8e45-4a90-8caf-37c67930fe3e",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": "In a function that crashes halfway your app at runtime",
				"type": "radio",
				"id": "714f06fb-70a6-4d7e-b107-b54a990c8e1d"
			},
			{
				"id": "5e4848c0-caa4-4804-b13c-4e12c2b01df4",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "In a function that has a break statement: it breaks and never returns"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"value": "In a function that has an empty body",
				"type": "radio",
				"id": "919ed152-3124-4ab3-977c-5b40cc7a634f"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"value": "Typescript never returns a never unless you explicitly say so",
				"id": "d41574d5-c559-4f64-a14c-f0436520aaeb"
			},
			{
				"id": "b6c055d4-1d92-49b8-92f0-d889480a0a07",
				"type": "radio",
				"value": "In a function that is never written",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"value": "In a promise function, because you can never be sure what it returns",
				"id": "383f2b4b-4020-4e7b-a3f1-3e43007dbf3e",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"value": "In a function that throws an error ",
				"id": "949306d1-6c8c-4d34-a5a1-b7f1de2c20a3",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text"
			}
		],
		"id": "6551b2dc-27e4-43b4-b112-b2ee1d33e019",
		"voted": [],
		"question": "In TypeScript, never is a type, but when do functions return the never type, would you describe? ",
		"status": "closed",
		"codeBlock": "",
		"category": "typescript",
		"type": "checkbox",
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"value": "In a function that throws an error ",
				"id": "949306d1-6c8c-4d34-a5a1-b7f1de2c20a3"
			}
		],
		"pollNumber": 30
	},
	{
		"answers": [
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": "Using “?” behind the property",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"type": "radio"
			},
			{
				"value": "Setting the type of the property to at least “undefined” ",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "c167c248-2171-4ca1-8605-12d03657ea28",
				"type": "radio"
			},
			{
				"id": "7427a6e6-ee56-44d4-9ff5-98a8b19fcf0d",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"value": "Setting the type of the property to at least “null” "
			},
			{
				"value": "Setting the type of the property to “optional”",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "c2c59421-8540-4e73-9612-40f3c8043871",
				"type": "radio"
			},
			{
				"type": "radio",
				"blockType": "text",
				"value": "Using [] to wrap around a property like [optionalProperty]",
				"id": "1174a27a-a616-47bb-b3db-d958e4a6db39",
				"placeholder": "Add option"
			},
			{
				"id": "61e39bd1-45a6-4cac-8094-d722046b5ebd",
				"type": "radio",
				"value": "Using ternary conditionals in object properties so it only applies on a certain condition",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"id": "810f0a48-b1f5-4615-ab97-6bf4cb8c17e2",
				"value": "In ES2023, you can do it with using by wrapping your property with “^property^” syntax",
				"blockType": "text",
				"type": "radio"
			},
			{
				"value": "By using the built-in generic utility <Optional> type",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "946ee0f9-cf4d-4f5c-ab9b-25564d18c450"
			},
			{
				"blockType": "text",
				"type": "radio",
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"id": "e98ec828-ff23-4190-b0a9-fb10f9ddc261",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "TypeScript can’t have optional types, you need for example libraries to handle this"
			}
		],
		"id": "0b142e83-7131-49be-b07e-7c6a9da7eb25",
		"voted": [],
		"type": "checkbox",
		"question": "In TypeScript, when it expects a property the compiler may complain, which syntax makes sure the compiler won’t go insane? ",
		"status": "closed",
		"codeBlock": "",
		"openingTime": null,
		"category": "typescript",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			}
		],
		"pollNumber": 29
	},
	{
		"pollNumber": 28,
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			}
		],
		"id": "15ffc55f-7e48-4c1b-83e0-18724a05d69b",
		"voted": [],
		"openingTime": null,
		"codeBlock": "",
		"question": "In React, when working with arrays or iterators the key prop is required, but how does it help React to manage effects that are undesired?",
		"status": "closed",
		"category": "react",
		"type": "radio",
		"answers": [
			{
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"value": "Adding the key prop only helps React if you have ordered lists, not when the order of your array data doesn’t matter",
				"placeholder": "Add option",
				"id": "c167c248-2171-4ca1-8605-12d03657ea28",
				"type": "radio",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"id": "7427a6e6-ee56-44d4-9ff5-98a8b19fcf0d",
				"value": "Keys are not needed in React if you sort arrays correctly beforehand so React doesn’t have to worry about identifying items"
			},
			{
				"value": "Keys are not needed in React if you have an array of objects which contains an ID property",
				"id": "c2c59421-8540-4e73-9612-40f3c8043871",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio"
			},
			{
				"type": "radio",
				"blockType": "text",
				"value": "Key prop should be used with Object.keys() so it will generate keys",
				"placeholder": "Add option",
				"id": "1174a27a-a616-47bb-b3db-d958e4a6db39"
			},
			{
				"blockType": "text",
				"id": "61e39bd1-45a6-4cac-8094-d722046b5ebd",
				"placeholder": "Add option",
				"type": "radio",
				"value": "It is only required when you use a mix of types in your array or iterable (number, string, boolean). When you have items of the same type (e.g: string, string, string) you can omit the key prop"
			},
			{
				"value": "The key prop is an operator that takes an component and produces a string or numeric literal union of its keys.",
				"id": "810f0a48-b1f5-4615-ab97-6bf4cb8c17e2",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option"
			}
		]
	},
	{
		"question": "In CSS, resets are often used, but what are the things that with it’s use are then improved?",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			}
		],
		"pollNumber": 27,
		"id": "7c4b1551-e030-4a7f-9151-84f5f4fb831d",
		"openingTime": null,
		"type": "radio",
		"answers": [
			{
				"blockType": "text",
				"value": "It removes all styling from a given selector. The reset is done by using: all: unset on the wildcard selector",
				"type": "radio",
				"id": "02fd3834-362c-4ef3-8daa-06ac9849e216",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"value": "It removes all styling from every level (user-agent styles, browser default styles, external and internal styles) from a page and basically gives you a clean sheet as starting point",
				"placeholder": "Add option",
				"type": "radio",
				"id": "3efc2990-9588-40d8-ad4f-340c1f628d38"
			},
			{
				"type": "radio",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"placeholder": "Add option",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"id": "64e9c699-5d56-4291-bb8a-99c6a9b844a6",
				"blockType": "text",
				"type": "radio",
				"value": "CSS reset is according to the W3C “the great reset” and took place when the W3C introduced the modular way of releasing CSS features"
			},
			{
				"type": "radio",
				"value": "CSS reset means it resets cascade layer so developers can define that order themselves",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "424d9c93-1754-4052-b6fe-a7a54183e6bb"
			},
			{
				"placeholder": "Add option",
				"id": "65cd6d3f-7770-46e1-a51f-39bde38b77ba",
				"type": "radio",
				"value": "CSS reset is actually a script that runs over your CSS code and “purifies” your code (and therefore “resets” properties which are not used",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"value": "It is actually a way to reset CSS scopes, so style leakage will be prevented",
				"id": "eea028bb-36cd-42bd-ab2b-d2206bddb895",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"value": "It is just a saying which got popular among CSS developers when they visited a CSS conference and have a drink afterwards or when they a had day full working with hard CSS code. ",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"blockType": "text"
			}
		],
		"category": "css",
		"codeBlock": "",
		"voted": [],
		"status": "closed"
	},
	{
		"codeBlock": "",
		"openingTime": null,
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			}
		],
		"status": "closed",
		"category": "css",
		"type": "radio",
		"answers": [
			{
				"value": "It’s not advised, always use absolute over translate ",
				"placeholder": "Add option",
				"id": "6b6d8334-b2f6-4338-aaff-a932b1b7f382",
				"blockType": "text",
				"type": "radio"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"value": "Because translate is specifically for animations, you can’t animate other properties",
				"id": "5f072ce8-21dc-4ca0-9d0c-b6381c7f72fc",
				"type": "radio"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"id": "bff35663-7777-4fa6-a8ae-114088731282",
				"value": "According to the CSS spec, translate is more intuitive and has a clearer API to use than using absolute"
			},
			{
				"id": "30e77275-b476-46cd-9c20-759fcd04f5e8",
				"blockType": "text",
				"type": "radio",
				"value": "Animating with translate is supported by all browsers, while absolute isn’t supported by all browsers, which makes it clear why you would use one over the other ",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"value": "Both absolute and translate should be used together to create the most efficient animations",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "2f48b8f1-20f1-4cb5-800c-f99d178dfc1e"
			},
			{
				"blockType": "text",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"type": "radio",
				"id": "ff36a075-1071-4014-9c95-3852d9847277",
				"blockType": "text",
				"value": "Absolute positioning removes elements from their natural flow, which makes it less intensive and efficient to animate",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"id": "02fd3834-362c-4ef3-8daa-06ac9849e216",
				"blockType": "text",
				"value": "With translate we actually mean a React hook useTranslate(), which is taling care of animation and is more efficient than CSS’ “absolute”",
				"type": "radio"
			}
		],
		"question": "In CSS, when creating animations, why is it advised to use translate over absolute in these occasions?",
		"pollNumber": 26,
		"id": "d23366bd-a215-43f7-a12f-e2458e7e5803",
		"voted": []
	},
	{
		"category": "css",
		"type": "checkbox",
		"question": "In CSS, knowing box-sizing is essential for layout, what are facts of setting box-sizing to know that’ll pay out? ",
		"answers": [
			{
				"blockType": "text",
				"placeholder": "Add option",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"type": "radio"
			},
			{
				"value": "box-sizing: border-box is a neat way to debug your CSS as it puts borders around every element",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "85c8051f-2a67-4ed3-827b-081767cd681e",
				"type": "radio"
			},
			{
				"type": "radio",
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"placeholder": "Add option",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"blockType": "text"
			},
			{
				"type": "radio",
				"value": "Using box-sizing in IE11 required a polyfill",
				"id": "b41fb488-8386-4582-9a53-cdc942aae939",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 240px ",
				"placeholder": "Add option",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"blockType": "text",
				"type": "radio"
			},
			{
				"type": "radio",
				"blockType": "text",
				"id": "00fd00b5-ec01-4b2d-b690-609e0ec09fc6",
				"placeholder": "Add option",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 200px "
			},
			{
				"type": "radio",
				"value": "Prefixes are still required to support box-sizing on all browsers and devices because sadly  it’s still not implemented in all browsers yet",
				"placeholder": "Add option",
				"id": "8d7a2409-43cc-49d9-8ab9-b631bf22f320",
				"blockType": "text"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"value": "Box-sizing setting controls from accessibility perspective the focus (or highlight) of certain elements like a button or a link where the user can click / tab through. ",
				"blockType": "text",
				"id": "847c36c7-3416-495e-9324-e757e605fca9"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"id": "6b6d8334-b2f6-4338-aaff-a932b1b7f382",
				"value": "Box-sizing is another way with CSS logical properties to determine width of an element",
				"blockType": "text"
			}
		],
		"id": "ebc63fd7-0a87-48d7-9ebc-eb3b694dd328",
		"voted": [],
		"status": "closed",
		"pollNumber": 25,
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			}
		],
		"codeBlock": "",
		"openingTime": null
	},
	{
		"codeBlock": "concatenated(\"It's\")(\"always\")(\"Christmas\")(\"in\")(\"Freezeezy\")(\"Peak\")",
		"pollNumber": 24,
		"type": "radio",
		"id": "75913aad-ae06-40af-b320-cbd327a586a1",
		"category": "javascript",
		"correctAnswers": [
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			}
		],
		"status": "closed",
		"question": "See the following code on your screen, what is the name of this technique you’ve seen?",
		"answers": [
			{
				"blockType": "text",
				"id": "d7e81629-a4ff-437d-bdf0-f10103fe876b",
				"placeholder": "Add option",
				"value": "Ketchup’ing",
				"type": "radio"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "Promises",
				"id": "b097388c-fc5a-4093-8456-0ce689da756d"
			},
			{
				"id": "c8cf19e1-be99-4705-b940-433fc135dcc4",
				"value": "Reducers",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"id": "bbca7472-8b14-4f63-a123-57e5a87ee22e",
				"type": "radio",
				"blockType": "text",
				"value": "Prototype chain "
			},
			{
				"id": "96eb3564-5609-4bdf-92f7-7b864fc5df2d",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "Inheritance"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "2147fbf6-8b0a-450b-bd20-73f46a9fa308",
				"value": "Concatenation"
			},
			{
				"placeholder": "Add option",
				"value": "Curry’ing",
				"blockType": "text",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"type": "radio"
			},
			{
				"blockType": "text",
				"value": "This is just a regular function",
				"type": "radio",
				"id": "7a94fc65-1c59-41c1-9d77-297d40334b3f",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"blockType": "text",
				"value": "Higher order components",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"placeholder": "Add option"
			}
		],
		"voted": [],
		"openingTime": null
	},
	{
		"answers": [
			{
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"id": "d7e81629-a4ff-437d-bdf0-f10103fe876b",
				"value": "prefers-reduced-motion"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"value": "monochrome",
				"type": "radio",
				"id": "b097388c-fc5a-4093-8456-0ce689da756d"
			},
			{
				"id": "c8cf19e1-be99-4705-b940-433fc135dcc4",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"value": "display mode"
			},
			{
				"id": "bbca7472-8b14-4f63-a123-57e5a87ee22e",
				"blockType": "text",
				"type": "radio",
				"value": "animation",
				"placeholder": "Add option"
			},
			{
				"id": "96eb3564-5609-4bdf-92f7-7b864fc5df2d",
				"blockType": "text",
				"type": "radio",
				"value": "allow-animation",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"id": "2147fbf6-8b0a-450b-bd20-73f46a9fa308",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "prefers-boring-website"
			},
			{
				"value": "Not possible with CSS, this requires tools like Modernizr",
				"type": "radio",
				"placeholder": "Add option",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"blockType": "text"
			},
			{
				"id": "7a94fc65-1c59-41c1-9d77-297d40334b3f",
				"value": "It is not done with media queries, but in another CSS way",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio"
			}
		],
		"openingTime": null,
		"pollNumber": 23,
		"category": "css",
		"status": "closed",
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "d7e81629-a4ff-437d-bdf0-f10103fe876b",
				"value": "Event delegation is a technique involving adding event listeners to a parent element instead of adding them to the descendant elements. The listener will fire whenever the event is triggered on the descendant elements due to event bubbling up the DOM"
			}
		],
		"voted": [],
		"question": "In CSS, animations can be used to engage people on your site, but which media query controls if the user wants the animations you write?",
		"id": "fb8159a6-53fa-4d75-8171-5821cc5503f7",
		"codeBlock": "",
		"type": "radio"
	},
	{
		"pollNumber": 22,
		"question": "In JS, event delegation is a technique, the benefits are clear, what is the correct fact of it I seek?",
		"id": "fb88b043-4617-4cf0-8056-760d57af72ec",
		"openingTime": null,
		"category": "javascript",
		"status": "closed",
		"type": "radio",
		"codeBlock": "",
		"voted": [],
		"answers": [
			{
				"id": "d7e81629-a4ff-437d-bdf0-f10103fe876b",
				"value": "Event delegation is a technique involving adding event listeners to a parent element instead of adding them to the descendant elements. The listener will fire whenever the event is triggered on the descendant elements due to event bubbling up the DOM",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "b097388c-fc5a-4093-8456-0ce689da756d",
				"value": "Event delegation is a native JavaScript way of managing app state like React context or Redux. Events are used to delegate data to certain places in your app",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"type": "radio",
				"id": "c8cf19e1-be99-4705-b940-433fc135dcc4",
				"placeholder": "Add option",
				"value": "Event delegation is not out of the box in JavaScript because it is not supported, however event delegation will come to JavaScript, but it is still a proposal, so for now you can npm install event-delegation.js"
			},
			{
				"id": "bbca7472-8b14-4f63-a123-57e5a87ee22e",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"value": "Event delegation is a term in Scrum and doesn’t have anything to do with JS"
			}
		],
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"id": "d7e81629-a4ff-437d-bdf0-f10103fe876b",
				"value": "Event delegation is a technique involving adding event listeners to a parent element instead of adding them to the descendant elements. The listener will fire whenever the event is triggered on the descendant elements due to event bubbling up the DOM"
			}
		]
	},
	{
		"id": "63e46477-1fee-456e-b4e3-5a61dd509414",
		"openingTime": null,
		"status": "closed",
		"codeBlock": "",
		"pollNumber": 21,
		"question": "In JS, slice and splice are common terms, what facts from both can you affirm?",
		"correctAnswers": [
			{
				"id": "b097388c-fc5a-4093-8456-0ce689da756d",
				"value": "Slice returns a new array while splice mutates the original array"
			},
			{
				"value": "Slice and splice are methods used for strings but can also be used for arrays",
				"id": "c8cf19e1-be99-4705-b940-433fc135dcc4"
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			}
		],
		"answers": [
			{
				"placeholder": "Add option",
				"blockType": "text",
				"id": "d7e81629-a4ff-437d-bdf0-f10103fe876b",
				"value": "Splice actually was an improved experiment of slice and not meant to be used yet, but devs used it anyway which made it impossible to remove from the web (as it would break alot of code) ",
				"type": "radio"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"id": "dd8ff765-9591-458f-b919-2abd1622b8a0",
				"value": "Slice and splice do the same"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"value": "Slice returns a new array while splice mutates the original array",
				"id": "b097388c-fc5a-4093-8456-0ce689da756d",
				"blockType": "text"
			},
			{
				"value": "Slice and splice are methods used for strings but can also be used for arrays",
				"placeholder": "Add option",
				"id": "c8cf19e1-be99-4705-b940-433fc135dcc4",
				"blockType": "text",
				"type": "radio"
			},
			{
				"id": "bbca7472-8b14-4f63-a123-57e5a87ee22e",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "Slice and splice methods can take 3 parameters: start, mid, end. "
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			}
		],
		"type": "checkbox",
		"category": "javascript",
		"voted": []
	},
	{
		"voted": [],
		"answers": [
			{
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"value": "3: ul, ol, li",
				"id": "d7e81629-a4ff-437d-bdf0-f10103fe876b"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"value": "3: ul, ol, dl",
				"id": "dd8ff765-9591-458f-b919-2abd1622b8a0"
			},
			{
				"blockType": "text",
				"value": "2: ul, ol",
				"id": "064970a7-1844-4e90-89a3-4a8f1da9391d",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"type": "radio",
				"value": "2: ul, li",
				"placeholder": "Add option",
				"id": "74ddb6ac-ca0b-4646-aac5-92abafeb8a19",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"id": "aceb4477-34e2-4380-ac14-3642aa39f8f6",
				"value": "3: ul, ol, el,",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"value": "1: ul",
				"type": "radio",
				"placeholder": "Add option",
				"id": "64b42ac9-06a3-4dbf-aeab-2825ad808408"
			},
			{
				"blockType": "text",
				"value": "1: ol",
				"id": "b097388c-fc5a-4093-8456-0ce689da756d",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"value": "4: ol, ul, dl, li",
				"id": "c8cf19e1-be99-4705-b940-433fc135dcc4",
				"type": "radio"
			}
		],
		"type": "radio",
		"question": "In HTML, semantics elements exists, how many and which types are elements called lists?",
		"correctAnswers": [
			{
				"value": "3: ul, ol, dl",
				"id": "dd8ff765-9591-458f-b919-2abd1622b8a0"
			}
		],
		"openingTime": null,
		"pollNumber": 20,
		"codeBlock": "",
		"category": "html",
		"status": "new",
		"id": "319f7f6b-dbae-44ff-8e62-2a28986854c7"
	},
	{
		"openingTime": null,
		"pollNumber": 19,
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			}
		],
		"status": "closed",
		"answers": [
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "eioozak-ojnab",
				"value": "Nothing, this is new syntax and a new feature… ",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"blockType": "text",
				"value": ".post h1, .post h2, .post h3 ",
				"type": "radio"
			},
			{
				"blockType": "text",
				"type": "radio",
				"id": "ae7d7747-0269-4f3f-9884-3ff976640e7d",
				"value": ".post h1 h2 h3",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"value": ".post h1, h2, h3",
				"id": "2412d9da-347e-4d5f-bf03-72c83f1dc8b4"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"value": "h1 .post, h2 .post, h3 .post",
				"blockType": "text",
				"id": "8926ae25-07d9-4eb1-8795-2a1b2abb8dce"
			},
			{
				"type": "radio",
				"id": "d7e81629-a4ff-437d-bdf0-f10103fe876b",
				"value": "h1.post, h2.post, h3.post",
				"blockType": "text",
				"placeholder": "Add option"
			}
		],
		"id": "a60f11b6-5b29-4386-a3b6-fec17d41ce4d",
		"codeBlock": ".post :is(h1, h2, h3) {\n    line-height: 1.2;\n\n}",
		"voted": [],
		"question": "See the following new CSS syntax on your screen, what should the equivalent have been? ",
		"category": "css",
		"type": "radio"
	},
	{
		"type": "checkbox",
		"openingTime": null,
		"category": "css",
		"correctAnswers": [
			{
				"value": "At the root element of the DOM <html>",
				"id": "eioozak-ojnab"
			},
			{
				"id": "ae7d7747-0269-4f3f-9884-3ff976640e7d",
				"value": "When elements become positioned elements other than “static” "
			},
			{
				"id": "8926ae25-07d9-4eb1-8795-2a1b2abb8dce",
				"value": "When using transform with any other value than none "
			}
		],
		"voted": [],
		"question": "In CSS, stacking contexts are created several ways now and then, now the stacking context is formed when?",
		"pollNumber": 18,
		"id": "b15cbe49-3b97-4095-9694-6a80e78dde31",
		"codeBlock": "",
		"answers": [
			{
				"type": "radio",
				"placeholder": "Add option",
				"value": "At the root element of the DOM <html>",
				"blockType": "text",
				"id": "eioozak-ojnab"
			},
			{
				"placeholder": "Add option",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": "When using floats",
				"blockType": "text",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"value": "When elements become positioned elements other than “static” ",
				"type": "radio",
				"id": "ae7d7747-0269-4f3f-9884-3ff976640e7d",
				"blockType": "text"
			},
			{
				"value": "When using display flex",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"id": "2412d9da-347e-4d5f-bf03-72c83f1dc8b4"
			},
			{
				"blockType": "text",
				"id": "8926ae25-07d9-4eb1-8795-2a1b2abb8dce",
				"value": "When using transform with any other value than none ",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"blockType": "text",
				"id": "d7e81629-a4ff-437d-bdf0-f10103fe876b",
				"placeholder": "Add option",
				"value": "When using the stacking-context-name and stacking-context-type properties",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "2d01f2fa-89e1-4b21-85a1-2a3ac51a2df6",
				"blockType": "text",
				"value": "Every html element creates a stacking context down the tree, which is why elements further down the tree lay on top of elements that came before"
			}
		],
		"status": "closed"
	},
	{
		"voted": [],
		"openingTime": null,
		"type": "radio",
		"correctAnswers": [
			{
				"id": "dcc0a920-f9b9-4af6-a541-007309b8b79e",
				"value": "ems"
			},
			{
				"id": "396f95dc-43c6-4ece-a504-3bb9cb6f4edd",
				"value": "return"
			},
			{
				"id": "695d0e14-5d1f-4d7c-b943-2d206b563aa0",
				"value": "Generics"
			}
		],
		"category": "typescript",
		"answers": [
			{
				"id": "695d0e14-5d1f-4d7c-b943-2d206b563aa0",
				"value": "Generics",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"id": "04f5a1cd-ca8d-49b9-95d1-283d50e9eebf",
				"blockType": "text",
				"type": "radio",
				"value": "Type guards"
			},
			{
				"id": "c3971d99-74f3-458c-b5f0-f9e6c4b83dfb",
				"blockType": "text",
				"type": "radio",
				"value": "Union types",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"blockType": "text",
				"value": "Tuple",
				"id": "4ae0cae6-888d-40ae-9217-8dffba61bad2",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"value": "Type constraint",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "90395e00-562d-4006-b8fc-ca64514142ff"
			},
			{
				"id": "5aab22e2-cf31-43a4-9aed-34adb20d8f00",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "Number of arrays",
				"type": "radio"
			}
		],
		"question": "See the following TS code on your screen, what is the name of this piece you must have seen?",
		"id": "40686ba4-f173-458e-8c99-b14979a966ce",
		"codeBlock": "<Array<number>>",
		"status": "closed",
		"pollNumber": 17
	},
	{
		"question": "In CSS, the float property knew glory for a long time, although barely useful now, in what situation is it’s use not a crime?",
		"category": "css",
		"codeBlock": "-",
		"voted": [],
		"openingTime": null,
		"correctAnswers": [
			{
				"value": "ems",
				"id": "dcc0a920-f9b9-4af6-a541-007309b8b79e"
			},
			{
				"id": "396f95dc-43c6-4ece-a504-3bb9cb6f4edd",
				"value": "return"
			},
			{
				"id": "04f5a1cd-ca8d-49b9-95d1-283d50e9eebf",
				"value": "When you want to wrap text around elements (an image)"
			}
		],
		"status": "closed",
		"pollNumber": 16,
		"answers": [
			{
				"value": "When you want to achieve complex responsive layouts ",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"id": "695d0e14-5d1f-4d7c-b943-2d206b563aa0"
			},
			{
				"value": "When you want to wrap text around elements (an image)",
				"type": "radio",
				"placeholder": "Add option",
				"id": "04f5a1cd-ca8d-49b9-95d1-283d50e9eebf",
				"blockType": "text"
			},
			{
				"id": "c3971d99-74f3-458c-b5f0-f9e6c4b83dfb",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"value": "When you users use Edge, because it does not yet support flex / grid"
			},
			{
				"value": "When you want to enforce a stacking context",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "4ae0cae6-888d-40ae-9217-8dffba61bad2",
				"type": "radio"
			},
			{
				"id": "90395e00-562d-4006-b8fc-ca64514142ff",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"value": "When you want to enforce to take out an element of the document flow to place it on top of an element"
			},
			{
				"placeholder": "Add option",
				"id": "5aab22e2-cf31-43a4-9aed-34adb20d8f00",
				"blockType": "text",
				"value": "It is used in combination with anchor tags, which normally scrolls to a place like an anchor, but the float adds a “smooth” and “floaty” experience to it",
				"type": "radio"
			}
		],
		"id": "727d58e6-3f7a-4ae9-a04d-cd4e2b69072c",
		"type": "radio"
	},
	{
		"answers": [
			{
				"value": "[2, 4, 6, 8, 10, 12, 14]",
				"id": "695d0e14-5d1f-4d7c-b943-2d206b563aa0",
				"type": "radio",
				"blockType": "code",
				"placeholder": "Add option"
			},
			{
				"blockType": "code",
				"placeholder": "Add option",
				"type": "radio",
				"value": "Uncaught TypeError: Cannot read properties of undefined",
				"id": "04f5a1cd-ca8d-49b9-95d1-283d50e9eebf"
			},
			{
				"id": "c3971d99-74f3-458c-b5f0-f9e6c4b83dfb",
				"placeholder": "Add option",
				"value": "[1, 2, 3, 4, 5, 6, 7]",
				"blockType": "code",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"id": "4ae0cae6-888d-40ae-9217-8dffba61bad2",
				"blockType": "code",
				"type": "radio",
				"value": "null"
			},
			{
				"placeholder": "Add option",
				"blockType": "code",
				"type": "radio",
				"value": "[]",
				"id": "90395e00-562d-4006-b8fc-ca64514142ff"
			},
			{
				"placeholder": "Add option",
				"id": "5aab22e2-cf31-43a4-9aed-34adb20d8f00",
				"blockType": "code",
				"value": "[\"2\", \"4\", \"6\", \"8\", \"10\", \"12\", \"14\"]",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"blockType": "code",
				"id": "1a09e441-28eb-4f17-862e-32e22eb83e06",
				"value": "undefined",
				"type": "radio"
			}
		],
		"category": "javascript",
		"id": "48b05fc3-fd4a-49fc-a38f-fe13c7c201f8",
		"status": "closed",
		"openingTime": null,
		"codeBlock": "const multiply = [1, 2, 3, 4, 5, 6, 7].forEach(item => item * 2); \nconsole.log(multiply);",
		"correctAnswers": [
			{
				"id": "dcc0a920-f9b9-4af6-a541-007309b8b79e",
				"value": "ems"
			},
			{
				"value": "return",
				"id": "396f95dc-43c6-4ece-a504-3bb9cb6f4edd"
			}
		],
		"question": "See the following JavaScript code on your screen, if ran in the browser, what should the output have been?",
		"type": "radio",
		"pollNumber": 15,
		"voted": []
	},
	{
		"question": "14. In JS, there is a statement to make function execution end, now what is this right statement for this you would recommend? ",
		"voted": [],
		"correctAnswers": [
			{
				"value": "ems",
				"id": "dcc0a920-f9b9-4af6-a541-007309b8b79e"
			},
			{
				"value": "return",
				"id": "396f95dc-43c6-4ece-a504-3bb9cb6f4edd"
			}
		],
		"id": "0919b78b-f3a0-4dea-b958-78e1d781746f",
		"answers": [
			{
				"type": "radio",
				"value": "retreat",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "95b65c00-a6c6-41d3-9579-f29aa85f0eca"
			},
			{
				"id": "b142f349-5657-49fe-b55e-29a94f7cb0dc",
				"value": "end",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"id": "c4d5e068-3dc1-4b5c-ae9f-d0716f2f67be",
				"type": "radio",
				"value": "exit"
			},
			{
				"value": ":wq",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "89744fdc-2deb-412e-9350-38402632515f",
				"type": "radio"
			},
			{
				"blockType": "text",
				"value": "return",
				"id": "396f95dc-43c6-4ece-a504-3bb9cb6f4edd",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"blockType": "text",
				"value": "stop",
				"id": "11f3fe4e-666f-4e74-8bf8-ed4d8c19253d",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"value": "rescue",
				"blockType": "text",
				"type": "radio",
				"id": "c0773cb4-bf46-420d-a08d-b5d27092ac5c"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"value": "back-off",
				"type": "radio",
				"id": "01df60e7-7285-4092-918b-521cd3ae49c7"
			},
			{
				"value": "kthnxbye",
				"id": "695d0e14-5d1f-4d7c-b943-2d206b563aa0",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"id": "04f5a1cd-ca8d-49b9-95d1-283d50e9eebf",
				"type": "radio",
				"value": "break"
			},
			{
				"value": "You can’t do do this manually, a function automatically ends when there is no code to execute anymore",
				"id": "c3971d99-74f3-458c-b5f0-f9e6c4b83dfb",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio"
			}
		],
		"status": "new",
		"codeBlock": "",
		"type": "radio",
		"pollNumber": 14,
		"openingTime": null,
		"category": "javascript"
	},
	{
		"type": "radio",
		"pollNumber": 13,
		"correctAnswers": [
			{
				"value": "ems",
				"id": "dcc0a920-f9b9-4af6-a541-007309b8b79e"
			},
			{
				"id": "c4d5e068-3dc1-4b5c-ae9f-d0716f2f67be",
				"value": "Virtual DOM "
			}
		],
		"question": "React is light and fast because a copy of the DOM is kept, now what is the name of this fact?",
		"category": "react",
		"openingTime": null,
		"voted": [],
		"codeBlock": "",
		"id": "020df9c6-6ed6-400f-b35f-0d06ee1538a5",
		"status": "new",
		"answers": [
			{
				"blockType": "text",
				"value": "Fast DOM",
				"type": "radio",
				"placeholder": "Add option",
				"id": "95b65c00-a6c6-41d3-9579-f29aa85f0eca"
			},
			{
				"type": "radio",
				"value": "Shadow DOM",
				"id": "b142f349-5657-49fe-b55e-29a94f7cb0dc",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"value": "Virtual DOM",
				"id": "c4d5e068-3dc1-4b5c-ae9f-d0716f2f67be",
				"type": "radio",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"value": "React DOM",
				"id": "89744fdc-2deb-412e-9350-38402632515f",
				"blockType": "text",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": "It's just called the \"DOM\" ",
				"type": "radio",
				"id": "396f95dc-43c6-4ece-a504-3bb9cb6f4edd"
			},
			{
				"blockType": "text",
				"id": "11f3fe4e-666f-4e74-8bf8-ed4d8c19253d",
				"placeholder": "Add option",
				"value": "DOM 2.0",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"id": "c0773cb4-bf46-420d-a08d-b5d27092ac5c",
				"blockType": "text",
				"type": "radio",
				"value": "Vue DOM (React uses Vue technology for this)"
			},
			{
				"id": "01df60e7-7285-4092-918b-521cd3ae49c7",
				"type": "radio",
				"placeholder": "Add option",
				"value": "Sonic DOM",
				"blockType": "text"
			}
		]
	},
	{
		"question": "In JS, sometimes errors raise unexpected, what is the name of this type of error produced by this code which should be corrected?  ",
		"category": "javascript",
		"openingTime": null,
		"codeBlock": "const favoriteFood = \"pizza\";  favoriteFood.reverse();",
		"correctAnswers": [
			{
				"value": "ems",
				"id": "dcc0a920-f9b9-4af6-a541-007309b8b79e"
			},
			{
				"value": "Virtual DOM ",
				"id": "c4d5e068-3dc1-4b5c-ae9f-d0716f2f67be"
			}
		],
		"type": "radio",
		"voted": [],
		"id": "7e8ace8f-0233-42fe-91a4-7bd7fbf9fdd4",
		"answers": [
			{
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"id": "95b65c00-a6c6-41d3-9579-f29aa85f0eca",
				"value": "SyntaxError"
			},
			{
				"id": "b142f349-5657-49fe-b55e-29a94f7cb0dc",
				"type": "radio",
				"blockType": "text",
				"value": "EvalError",
				"placeholder": "Add option"
			},
			{
				"id": "c4d5e068-3dc1-4b5c-ae9f-d0716f2f67be",
				"value": "TypeError ",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"id": "89744fdc-2deb-412e-9350-38402632515f",
				"type": "radio",
				"value": "UriError",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"blockType": "text",
				"id": "396f95dc-43c6-4ece-a504-3bb9cb6f4edd",
				"value": "RangeError",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"value": "ReferenceError",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "11f3fe4e-666f-4e74-8bf8-ed4d8c19253d"
			},
			{
				"value": "Error",
				"id": "c0773cb4-bf46-420d-a08d-b5d27092ac5c",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio"
			},
			{
				"type": "radio",
				"blockType": "text",
				"value": "MethodError",
				"id": "01df60e7-7285-4092-918b-521cd3ae49c7",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"value": "It doesn’t return an error, it will just return undefined",
				"blockType": "text",
				"type": "radio",
				"id": "635fbe72-8f45-4082-bf71-471c86906786"
			}
		],
		"pollNumber": 12,
		"status": "closed"
	},
	{
		"status": "closed",
		"category": "react",
		"voted": [],
		"codeBlock": "",
		"id": "32373fc1-c4aa-4825-ba9e-6601674003be",
		"question": "In React,`context` is a technique you sometimes involve, but what is it and what problem does `context` solve?",
		"pollNumber": 11,
		"type": "radio",
		"correctAnswers": [
			{
				"value": "ems",
				"id": "dcc0a920-f9b9-4af6-a541-007309b8b79e"
			},
			{
				"id": "1132980c-ded0-4d06-9cef-dd24eb1ebdf5",
				"value": "%"
			}
		],
		"answers": [
			{
				"placeholder": "Add option",
				"value": "It is the same as the keyword `this` because `this` is `context` dependent and was used very much in class components. Since React is not class based anymore the React team came up with `context` as replacement which can be used in function components",
				"id": "42b7a63d-e489-42a2-8642-087240ed36d8",
				"blockType": "text",
				"type": "radio"
			},
			{
				"value": "It is a built-in “broadcast” mechanism to share and persist data across components. It solves the prop drilling problem because you can call context in any component wrapped with a provider, and helps you manage local/global state",
				"type": "radio",
				"placeholder": "Add option",
				"id": "1132980c-ded0-4d06-9cef-dd24eb1ebdf5",
				"blockType": "text"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "It is a mechanism to optimizes your components in a certain context",
				"id": "76834a9d-177d-4716-a101-fb5bcca5652e"
			},
			{
				"type": "radio",
				"value": "It is an external state management library like Redux or MobX and often used with React, which makes everyone think it’s built in React",
				"id": "1a79ba78-0230-4f7d-bb60-91b9baafd383",
				"placeholder": "Add option",
				"blockType": "text"
			}
		],
		"openingTime": null
	},
	{
		"pollNumber": 10,
		"status": "new",
		"voted": [],
		"category": "css",
		"correctAnswers": [
			{
				"id": "dcc0a920-f9b9-4af6-a541-007309b8b79e",
				"value": "ems"
			},
			{
				"id": "1132980c-ded0-4d06-9cef-dd24eb1ebdf5",
				"value": "%"
			}
		],
		"codeBlock": "",
		"question": "In CSS, selector specificity rules should be used wisely, now which answer contains the right order of selectors from lowest to highest precisely?",
		"openingTime": null,
		"type": "radio",
		"id": "f87fd4e5-2d55-49fb-a714-1833cafa2046",
		"answers": [
			{
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"value": "classes, attributes and psuedo classes > elements and psuedo elements > id’s > inline styles",
				"id": "42b7a63d-e489-42a2-8642-087240ed36d8"
			},
			{
				"id": "1132980c-ded0-4d06-9cef-dd24eb1ebdf5",
				"value": "elements and psuedo elements > classes, attributes and psuedo classes > id’s > inline styles",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio"
			},
			{
				"id": "76834a9d-177d-4716-a101-fb5bcca5652e",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "id’s > classes, attributes and psuedo classes > elements and psuedo elements > id’s > inline styles",
				"type": "radio"
			},
			{
				"value": "inline styles  > classes, attributes and psuedo classes > elements and psuedo elements > id’s ",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "1a79ba78-0230-4f7d-bb60-91b9baafd383",
				"type": "radio"
			},
			{
				"id": "b5e90a5b-b110-4422-8159-65a0ec23e176",
				"value": "It depends on the browser and user settings",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option"
			}
		]
	},
	{
		"answers": [
			{
				"blockType": "code",
				"placeholder": "Add option",
				"type": "radio",
				"value": "rems",
				"id": "eioozak-ojnab"
			},
			{
				"type": "radio",
				"value": "px",
				"placeholder": "Add option",
				"blockType": "code",
				"id": "a2b3237b-e710-443e-9485-6864cf439c10"
			},
			{
				"type": "radio",
				"id": "82d4cf55-25a8-4e9c-a136-0d58fea3a4ba",
				"blockType": "code",
				"value": "vw / vh",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"blockType": "code",
				"type": "radio",
				"value": "vmin / vmax",
				"id": "7903a431-dd66-477c-9981-e373a161e403"
			},
			{
				"id": "dcc0a920-f9b9-4af6-a541-007309b8b79e",
				"value": "ems",
				"blockType": "code",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"type": "radio",
				"value": "cm",
				"id": "42b7a63d-e489-42a2-8642-087240ed36d8",
				"blockType": "code",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "1132980c-ded0-4d06-9cef-dd24eb1ebdf5",
				"blockType": "code",
				"value": "%"
			},
			{
				"placeholder": "Add option",
				"id": "76834a9d-177d-4716-a101-fb5bcca5652e",
				"blockType": "code",
				"value": "ch",
				"type": "radio"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"id": "1a79ba78-0230-4f7d-bb60-91b9baafd383",
				"blockType": "code",
				"value": "fr"
			}
		],
		"voted": [],
		"question": "In CSS, which unit you use in development, is relative to the font-size of the parent element?",
		"pollNumber": 9,
		"status": "closed",
		"correctAnswers": [
			{
				"id": "dcc0a920-f9b9-4af6-a541-007309b8b79e",
				"value": "ems"
			},
			{
				"id": "1132980c-ded0-4d06-9cef-dd24eb1ebdf5",
				"value": "%"
			}
		],
		"id": "d26f0c6c-f031-47eb-9a7f-ae5bb5159b47",
		"openingTime": null,
		"type": "checkbox",
		"codeBlock": "",
		"category": "css"
	},
	{
		"openingTime": null,
		"answers": [
			{
				"placeholder": "Add option",
				"blockType": "text",
				"id": "eioozak-ojnab",
				"type": "radio",
				"value": "const is block scoped "
			},
			{
				"type": "radio",
				"blockType": "text",
				"id": "a2b3237b-e710-443e-9485-6864cf439c10",
				"placeholder": "Add option",
				"value": "const can only be declared with uppercase letters "
			},
			{
				"value": "Even with const, arrays and objects can be reassigned because they are not primitive values",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"id": "82d4cf55-25a8-4e9c-a136-0d58fea3a4ba"
			},
			{
				"id": "7903a431-dd66-477c-9981-e373a161e403",
				"value": "const doesn’t have to be assigned when they are declared",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"id": "dcc0a920-f9b9-4af6-a541-007309b8b79e",
				"blockType": "text",
				"value": "const is still not supported in the latest browsers, so you need transpiling",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"value": "You can use a const variable before it’s declared",
				"id": "42b7a63d-e489-42a2-8642-087240ed36d8",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"id": "e53b55ec-23a5-437d-9835-ca716d93ba8b",
				"blockType": "text",
				"value": "Arrays and objects assigned with const can be updated",
				"type": "radio"
			}
		],
		"category": "javascript",
		"type": "checkbox",
		"pollNumber": 8,
		"codeBlock": "",
		"id": "912a0c1e-bd3f-4ba4-9bb9-411568419567",
		"correctAnswers": [
			{
				"value": "const is block scoped ",
				"id": "eioozak-ojnab"
			},
			{
				"id": "e53b55ec-23a5-437d-9835-ca716d93ba8b",
				"value": "Arrays and objects assigned with const can be updated"
			}
		],
		"status": "closed",
		"question": "In JS, with `const` assignments you communicate immutability, now what are technical features to know about this instantly? ",
		"voted": []
	},
	{
		"openingTime": null,
		"question": "In React, prop drilling is popular and renowned, but what are disadvantages of passing data this way around?",
		"type": "checkbox",
		"status": "closed",
		"codeBlock": "",
		"pollNumber": 7,
		"id": "881b750e-1937-461e-8533-a73861c41fca",
		"correctAnswers": [
			{
				"value": "Prop drilled components are harder to maintain",
				"id": "82d4cf55-25a8-4e9c-a136-0d58fea3a4ba"
			},
			{
				"value": "Components that should not otherwise be aware of the data become unnecessarily complicated",
				"id": "dcc0a920-f9b9-4af6-a541-007309b8b79e"
			}
		],
		"answers": [
			{
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "eioozak-ojnab",
				"value": "Components have a maximum amount of props they can take, so prop drilling should be used sparingly"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"value": "Prop drilling comes with a security risk, because passing data around to components that should not be aware of certain data enables data leaks and raises the risks of security, so prop drilling should only be used when you really have to ",
				"id": "a2b3237b-e710-443e-9485-6864cf439c10"
			},
			{
				"blockType": "text",
				"id": "82d4cf55-25a8-4e9c-a136-0d58fea3a4ba",
				"placeholder": "Add option",
				"type": "radio",
				"value": "Prop drilled components are harder to maintain"
			},
			{
				"placeholder": "Add option",
				"id": "7903a431-dd66-477c-9981-e373a161e403",
				"type": "radio",
				"blockType": "text",
				"value": "Prop drilled components will load slower and may cause memory leaks (however, this is fixable with useMemo / useCallback)"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"id": "dcc0a920-f9b9-4af6-a541-007309b8b79e",
				"type": "radio",
				"value": "Components that should not otherwise be aware of the data become unnecessarily complicated"
			}
		],
		"category": "react",
		"voted": []
	},
	{
		"category": "css",
		"openingTime": null,
		"voted": [],
		"answers": [
			{
				"id": "eioozak-ojnab",
				"blockType": "text",
				"value": "`div + div`, The “adjacent sibling selector” is used to select an element that is immediately followed by another specific element.",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"value": "`div < div`, The “adjacent sibling selector” is used to select an element that is immediately before another specific element.",
				"id": "a2b3237b-e710-443e-9485-6864cf439c10"
			},
			{
				"blockType": "text",
				"id": "82d4cf55-25a8-4e9c-a136-0d58fea3a4ba",
				"type": "radio",
				"value": "`div > div`, The “adjacent sibling selector” is used to select an element that is the direct child",
				"placeholder": "Add option"
			},
			{
				"id": "7903a431-dd66-477c-9981-e373a161e403",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "`div div`, The “adjacent sibling selector” is used to select all elements within given the selector"
			},
			{
				"type": "radio",
				"blockType": "text",
				"id": "69b4390a-148b-48be-99e5-8a445fd581d8",
				"value": "The “adjacent sibling selector” allows the ability to nest in CSS",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"id": "731ccba3-766a-4531-b7b0-1833bfbc3c0c",
				"value": "There is no such thing as an “adjacent sibling selector” in CSS yet, but it’s a proposal for CSS4 and not yet fully elaborated",
				"placeholder": "Add option",
				"blockType": "text"
			}
		],
		"codeBlock": "",
		"type": "radio",
		"correctAnswers": [
			{
				"id": "eioozak-ojnab",
				"value": "`div + div`, The “adjacent sibling selector” is used to select an element that is immediately followed by another specific element."
			}
		],
		"pollNumber": 6,
		"status": "closed",
		"id": "40675100-d65a-452a-9abf-39cfeebf564f",
		"question": "In CSS, “adjacent sibling selector” is something known by each CSS freak, now how does it look like and what does it achieve as technique? "
	},
	{
		"id": "f8970ce2-da6f-4c39-9827-52c369de444f",
		"question": "In JS, the `.sort()` function sorts values in arrays alphabetically, what is the output of the following code unexpectedly? ",
		"openingTime": null,
		"answers": [
			{
				"blockType": "code",
				"id": "eioozak-ojnab",
				"type": "radio",
				"value": "[10, 25, 35, 78, 100]",
				"placeholder": "Add option"
			},
			{
				"blockType": "code",
				"value": "[100, 78, 35, 25, 10]",
				"placeholder": "Add option",
				"type": "radio",
				"id": "f899ca4d-b92f-43c0-98c3-8ca574213a16"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "code",
				"value": "“10, 25, 35, 78, 100” ",
				"id": "f24ae4c5-b100-4828-bd27-3846d574508e"
			},
			{
				"id": "c0ffbcaa-21ec-4566-8553-988548a8d063",
				"value": "[NaN, NaN, NaN, NaN, NaN]",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "code"
			},
			{
				"id": "d9774a9f-88f8-430d-ad8c-ae25214c45f5",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"value": "`.sort()` is not a function on internal array types"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"id": "3535ef4e-5fb1-4ee1-b220-239714abc5df",
				"value": "There is no one size-fits answer here, because every browser engine deals with this differently. In the newest ES the sort() function will be deprecated."
			}
		],
		"codeBlock": " [25, 10, 78, 100, 35].sort();",
		"pollNumber": 5,
		"correctAnswers": [
			{
				"value": "js",
				"id": "eioozak-ojnab"
			}
		],
		"voted": [],
		"status": "closed",
		"category": "javascript",
		"type": "radio"
	},
	{
		"openingTime": null,
		"id": "e0edb48c-5a60-461b-b51e-9272bdd61443",
		"codeBlock": "",
		"answers": [
			{
				"value": "<html> ",
				"id": "eioozak-ojnab",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"value": "<marquee>",
				"id": "10ffb3d3-a420-4f50-9391-9a428f6c6a60",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"id": "c229219b-0441-4b06-a28d-a109f05904c8",
				"value": "<b>"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"id": "76a9628a-1cae-4fda-a104-15b5464b844a",
				"type": "radio",
				"value": "<em>"
			},
			{
				"value": "<i>",
				"placeholder": "Add option",
				"type": "radio",
				"id": "49fe17ab-662a-4167-882f-712b52fe4964",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"id": "84557334-fc03-4480-b144-45d455710733",
				"type": "radio",
				"placeholder": "Add option",
				"value": "<li>"
			},
			{
				"id": "831f3d03-4d82-4840-88a7-6cdae57ff7d0",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"value": "<p>"
			},
			{
				"value": "<h1>",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "085ede35-1a75-47f5-95a3-fdc4a57307f9",
				"type": "radio"
			},
			{
				"id": "e637898b-291a-4008-ae43-db9732ba40bb",
				"type": "radio",
				"value": "<emphasize>",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"value": "<bold>",
				"blockType": "text",
				"id": "4fd1d958-0559-461d-98d5-063b001e8f35",
				"type": "radio"
			},
			{
				"blockType": "text",
				"type": "radio",
				"value": "<h1 style=\"font-size: 300px\">",
				"id": "a9beb8bb-a558-4edd-b6a7-5516b148637d",
				"placeholder": "Add option"
			}
		],
		"question": "With this question you won’t win a prize, but which HTML tag is used for text we want to emphasize?",
		"correctAnswers": [
			{
				"value": "content, padding, border, margin ",
				"id": "76a9628a-1cae-4fda-a104-15b5464b844a"
			}
		],
		"category": "css",
		"status": "closed",
		"type": "radio",
		"pollNumber": 4,
		"voted": []
	},
	{
		"id": "0185424b-8526-472b-b60d-0e58efcd150f",
		"voted": [],
		"type": "radio",
		"question": "In CSS, the box model is wrapped around every HTML element without a doubt, now tell me what does the box model consist of from inside out?",
		"pollNumber": 3,
		"correctAnswers": [
			{
				"id": "76a9628a-1cae-4fda-a104-15b5464b844a",
				"value": "content, padding, border, margin "
			}
		],
		"codeBlock": "",
		"category": "css",
		"openingTime": null,
		"status": "closed",
		"answers": [
			{
				"placeholder": "Add option",
				"id": "eioozak-ojnab",
				"value": "content, padding, margin",
				"type": "radio",
				"blockType": "text"
			},
			{
				"id": "10ffb3d3-a420-4f50-9391-9a428f6c6a60",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "margin, border, padding, content"
			},
			{
				"id": "c229219b-0441-4b06-a28d-a109f05904c8",
				"value": "content, border, padding, border (dashed), border, margin, border (dashed)",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"value": "content, padding, border, margin ",
				"blockType": "text",
				"id": "76a9628a-1cae-4fda-a104-15b5464b844a",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"type": "radio",
				"id": "49fe17ab-662a-4167-882f-712b52fe4964",
				"placeholder": "Add option",
				"value": "padding, border, margin",
				"blockType": "text"
			}
		]
	},
	{
		"codeBlock": "",
		"question": "In HTML, `<meta>` tags are useful, but which answers listed below are untruthful? ",
		"correctAnswers": [
			{
				"id": "98f0c99a-706d-42a0-8086-35b51df63226",
				"value": "Meta tags are added in the footer"
			},
			{
				"value": "Meta tags are used to integrate metaverse in websites/apps, hence “meta” ",
				"id": "c40514c0-8cd9-41e9-9d09-521fdf9cd59c"
			},
			{
				"value": "Meta tags are rendered and visible to the end user. To hide them, CSS is often used (display:none). Nowadays CSS resets also takes care of that.",
				"id": "248e4ef1-e45b-4080-9351-d02152e2c9ba"
			}
		],
		"id": "eee01488-6c83-43ec-b85c-6e2574596854",
		"openingTime": null,
		"category": "html",
		"answers": [
			{
				"value": "Meta tags are a way to enhance information about a website",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "eioozak-ojnab",
				"type": "radio"
			},
			{
				"type": "radio",
				"blockType": "text",
				"id": "98f0c99a-706d-42a0-8086-35b51df63226",
				"placeholder": "Add option",
				"value": "Meta tags are added in the footer"
			},
			{
				"value": "Meta tags are used to control “viewport settings” for example",
				"type": "radio",
				"id": "6eb0f34b-0e21-4390-9c9a-f0573d61464c",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"value": "Some meta tags have control of the users visible area of a page",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"id": "882135a9-1e4e-4c94-9a20-45519e503672"
			},
			{
				"id": "1c0aff73-5afc-4829-8b1a-cb236083e3f7",
				"type": "radio",
				"value": "Meta tags provide information for search engines",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"value": "Meta tags are used to integrate metaverse in websites/apps, hence “meta” ",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "c40514c0-8cd9-41e9-9d09-521fdf9cd59c"
			},
			{
				"type": "radio",
				"blockType": "text",
				"id": "248e4ef1-e45b-4080-9351-d02152e2c9ba",
				"value": "Meta tags are rendered and visible to the end user. To hide them, CSS is often used (display:none). Nowadays CSS resets also takes care of that.",
				"placeholder": "Add option"
			}
		],
		"pollNumber": 2,
		"voted": [],
		"type": "checkbox",
		"status": "closed"
	},
	{
		"pollNumber": 1,
		"openingTime": null,
		"codeBlock": "",
		"correctAnswers": [
			{
				"id": "79330fd5-875f-4917-bfc4-4436c6388db1",
				"value": "To date, there are 7 primitives"
			},
			{
				"value": "Primitives are immutable ",
				"id": "eioozak-ojnab"
			}
		],
		"question": "In JS, primitive values are the language fundamental, which properties does each primitive resemble? ",
		"answers": [
			{
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "Primitives are immutable ",
				"id": "eioozak-ojnab"
			},
			{
				"value": "All datatypes are primitives",
				"placeholder": "Add option",
				"id": "9f4666fc-59ea-4365-9f83-1c29b3982e84",
				"type": "radio",
				"blockType": "text"
			},
			{
				"id": "74485015-847f-4d7d-bd4c-957ef7bda93e",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"value": "`null` and `undefined` are not primitives"
			},
			{
				"value": "Primitives have no properties or methods",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"id": "8f98325c-5a65-48aa-bbc4-47b5c6452370"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": "To date, there are 7 primitives",
				"id": "79330fd5-875f-4917-bfc4-4436c6388db1",
				"type": "radio"
			},
			{
				"value": "Primitives can be altered directly",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"id": "c3fd254f-7538-468d-bb5d-67ae4776be0e"
			},
			{
				"blockType": "text",
				"id": "9e4f31d2-c755-4965-bbde-e5805aa991e7",
				"placeholder": "Add option",
				"value": "Before ES6, there were no primitives in JavaScript yet",
				"type": "radio"
			}
		],
		"voted": [],
		"status": "closed",
		"type": "checkbox",
		"id": "1273c829-0885-45bb-9eb5-7ae4fb7f80e5",
		"category": "javascript"
	},
	{
		"pollNumber": -1,
		"question": "At Kabisa, our goals are Big Hairy and Audacious, what programming language would you like to learn that'll strengthen your programming basis? ",
		"openingTime": 1664439521170,
		"codeBlock": "",
		"category": "miscellaneous",
		"type": "checkbox",
		"voted": [
			{
				"userId": "slsLjDE5GoX9LKWWdiFQcapsFTe2",
				"answerId": "6dfea380-fa66-4816-b3ac-ba39c4c8b03d"
			},
			{
				"userId": "2ROhklZ9C8MEOQTSLgsPCPFZpYn2",
				"answerId": "eioozak-ojnab"
			},
			{
				"userId": "kfrkjsbashYfl1sD2PgVGXcpND63",
				"answerId": "8519697f-be55-4f9e-ac92-71b038941a6e"
			},
			{
				"answerId": "eioozak-ojnab",
				"userId": "rj0GlCo7MtdVGg28EphTGJ3oTC22"
			},
			{
				"userId": "rj0GlCo7MtdVGg28EphTGJ3oTC22",
				"answerId": "6dfea380-fa66-4816-b3ac-ba39c4c8b03d"
			},
			{
				"answerId": "882f53a4-4eca-4d02-bdff-214d263c4e09",
				"userId": "rj0GlCo7MtdVGg28EphTGJ3oTC22"
			},
			{
				"userId": "43jAtZTiVLcsgbrAovEKS7aT9R42",
				"answerId": "eioozak-ojnab"
			},
			{
				"userId": "BHzKKTQWX1fthHkpcCR30lNiYwN2",
				"answerId": "8519697f-be55-4f9e-ac92-71b038941a6e"
			}
		],
		"answers": [
			{
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"id": "eioozak-ojnab",
				"value": "Python"
			},
			{
				"value": "Java",
				"placeholder": "Add option",
				"type": "radio",
				"id": "6dfea380-fa66-4816-b3ac-ba39c4c8b03d",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": "NodeJS",
				"type": "radio",
				"id": "882f53a4-4eca-4d02-bdff-214d263c4e09"
			},
			{
				"blockType": "text",
				"type": "radio",
				"value": "Anders",
				"id": "8519697f-be55-4f9e-ac92-71b038941a6e",
				"placeholder": "Add option"
			}
		],
		"status": "open",
		"id": "614007ca-0571-4e0c-a085-6c46623430ce",
		"correctAnswers": [
			{
				"id": "8519697f-be55-4f9e-ac92-71b038941a6e",
				"value": "Anders"
			},
			{
				"value": "NodeJS",
				"id": "882f53a4-4eca-4d02-bdff-214d263c4e09"
			},
			{
				"value": "Java",
				"id": "6dfea380-fa66-4816-b3ac-ba39c4c8b03d"
			},
			{
				"id": "eioozak-ojnab",
				"value": "Python"
			}
		]
	}
]
